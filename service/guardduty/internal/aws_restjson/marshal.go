// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/guardduty/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptInvitationMarshaler defines marshaler for AcceptInvitation operation
type AcceptInvitationMarshaler struct {
	Input *types.AcceptInvitationInput
}

// ArchiveFindingsMarshaler defines marshaler for ArchiveFindings operation
type ArchiveFindingsMarshaler struct {
	Input *types.ArchiveFindingsInput
}

// CreateDetectorMarshaler defines marshaler for CreateDetector operation
type CreateDetectorMarshaler struct {
	Input *types.CreateDetectorInput
}

// CreateFilterMarshaler defines marshaler for CreateFilter operation
type CreateFilterMarshaler struct {
	Input *types.CreateFilterInput
}

// CreateIPSetMarshaler defines marshaler for CreateIPSet operation
type CreateIPSetMarshaler struct {
	Input *types.CreateIPSetInput
}

// CreateMembersMarshaler defines marshaler for CreateMembers operation
type CreateMembersMarshaler struct {
	Input *types.CreateMembersInput
}

// CreatePublishingDestinationMarshaler defines marshaler for CreatePublishingDestination operation
type CreatePublishingDestinationMarshaler struct {
	Input *types.CreatePublishingDestinationInput
}

// CreateSampleFindingsMarshaler defines marshaler for CreateSampleFindings operation
type CreateSampleFindingsMarshaler struct {
	Input *types.CreateSampleFindingsInput
}

// CreateThreatIntelSetMarshaler defines marshaler for CreateThreatIntelSet operation
type CreateThreatIntelSetMarshaler struct {
	Input *types.CreateThreatIntelSetInput
}

// DeclineInvitationsMarshaler defines marshaler for DeclineInvitations operation
type DeclineInvitationsMarshaler struct {
	Input *types.DeclineInvitationsInput
}

// DeleteDetectorMarshaler defines marshaler for DeleteDetector operation
type DeleteDetectorMarshaler struct {
	Input *types.DeleteDetectorInput
}

// DeleteFilterMarshaler defines marshaler for DeleteFilter operation
type DeleteFilterMarshaler struct {
	Input *types.DeleteFilterInput
}

// DeleteIPSetMarshaler defines marshaler for DeleteIPSet operation
type DeleteIPSetMarshaler struct {
	Input *types.DeleteIPSetInput
}

// DeleteInvitationsMarshaler defines marshaler for DeleteInvitations operation
type DeleteInvitationsMarshaler struct {
	Input *types.DeleteInvitationsInput
}

// DeleteMembersMarshaler defines marshaler for DeleteMembers operation
type DeleteMembersMarshaler struct {
	Input *types.DeleteMembersInput
}

// DeletePublishingDestinationMarshaler defines marshaler for DeletePublishingDestination operation
type DeletePublishingDestinationMarshaler struct {
	Input *types.DeletePublishingDestinationInput
}

// DeleteThreatIntelSetMarshaler defines marshaler for DeleteThreatIntelSet operation
type DeleteThreatIntelSetMarshaler struct {
	Input *types.DeleteThreatIntelSetInput
}

// DescribePublishingDestinationMarshaler defines marshaler for DescribePublishingDestination operation
type DescribePublishingDestinationMarshaler struct {
	Input *types.DescribePublishingDestinationInput
}

// DisassociateFromMasterAccountMarshaler defines marshaler for DisassociateFromMasterAccount operation
type DisassociateFromMasterAccountMarshaler struct {
	Input *types.DisassociateFromMasterAccountInput
}

// DisassociateMembersMarshaler defines marshaler for DisassociateMembers operation
type DisassociateMembersMarshaler struct {
	Input *types.DisassociateMembersInput
}

// GetDetectorMarshaler defines marshaler for GetDetector operation
type GetDetectorMarshaler struct {
	Input *types.GetDetectorInput
}

// GetFilterMarshaler defines marshaler for GetFilter operation
type GetFilterMarshaler struct {
	Input *types.GetFilterInput
}

// GetFindingsMarshaler defines marshaler for GetFindings operation
type GetFindingsMarshaler struct {
	Input *types.GetFindingsInput
}

// GetFindingsStatisticsMarshaler defines marshaler for GetFindingsStatistics operation
type GetFindingsStatisticsMarshaler struct {
	Input *types.GetFindingsStatisticsInput
}

// GetIPSetMarshaler defines marshaler for GetIPSet operation
type GetIPSetMarshaler struct {
	Input *types.GetIPSetInput
}

// GetInvitationsCountMarshaler defines marshaler for GetInvitationsCount operation
type GetInvitationsCountMarshaler struct {
	Input *types.GetInvitationsCountInput
}

// GetMasterAccountMarshaler defines marshaler for GetMasterAccount operation
type GetMasterAccountMarshaler struct {
	Input *types.GetMasterAccountInput
}

// GetMembersMarshaler defines marshaler for GetMembers operation
type GetMembersMarshaler struct {
	Input *types.GetMembersInput
}

// GetThreatIntelSetMarshaler defines marshaler for GetThreatIntelSet operation
type GetThreatIntelSetMarshaler struct {
	Input *types.GetThreatIntelSetInput
}

// InviteMembersMarshaler defines marshaler for InviteMembers operation
type InviteMembersMarshaler struct {
	Input *types.InviteMembersInput
}

// ListDetectorsMarshaler defines marshaler for ListDetectors operation
type ListDetectorsMarshaler struct {
	Input *types.ListDetectorsInput
}

// ListFiltersMarshaler defines marshaler for ListFilters operation
type ListFiltersMarshaler struct {
	Input *types.ListFiltersInput
}

// ListFindingsMarshaler defines marshaler for ListFindings operation
type ListFindingsMarshaler struct {
	Input *types.ListFindingsInput
}

// ListIPSetsMarshaler defines marshaler for ListIPSets operation
type ListIPSetsMarshaler struct {
	Input *types.ListIPSetsInput
}

// ListInvitationsMarshaler defines marshaler for ListInvitations operation
type ListInvitationsMarshaler struct {
	Input *types.ListInvitationsInput
}

// ListMembersMarshaler defines marshaler for ListMembers operation
type ListMembersMarshaler struct {
	Input *types.ListMembersInput
}

// ListPublishingDestinationsMarshaler defines marshaler for ListPublishingDestinations operation
type ListPublishingDestinationsMarshaler struct {
	Input *types.ListPublishingDestinationsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListThreatIntelSetsMarshaler defines marshaler for ListThreatIntelSets operation
type ListThreatIntelSetsMarshaler struct {
	Input *types.ListThreatIntelSetsInput
}

// StartMonitoringMembersMarshaler defines marshaler for StartMonitoringMembers operation
type StartMonitoringMembersMarshaler struct {
	Input *types.StartMonitoringMembersInput
}

// StopMonitoringMembersMarshaler defines marshaler for StopMonitoringMembers operation
type StopMonitoringMembersMarshaler struct {
	Input *types.StopMonitoringMembersInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UnarchiveFindingsMarshaler defines marshaler for UnarchiveFindings operation
type UnarchiveFindingsMarshaler struct {
	Input *types.UnarchiveFindingsInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateDetectorMarshaler defines marshaler for UpdateDetector operation
type UpdateDetectorMarshaler struct {
	Input *types.UpdateDetectorInput
}

// UpdateFilterMarshaler defines marshaler for UpdateFilter operation
type UpdateFilterMarshaler struct {
	Input *types.UpdateFilterInput
}

// UpdateFindingsFeedbackMarshaler defines marshaler for UpdateFindingsFeedback operation
type UpdateFindingsFeedbackMarshaler struct {
	Input *types.UpdateFindingsFeedbackInput
}

// UpdateIPSetMarshaler defines marshaler for UpdateIPSet operation
type UpdateIPSetMarshaler struct {
	Input *types.UpdateIPSetInput
}

// UpdatePublishingDestinationMarshaler defines marshaler for UpdatePublishingDestination operation
type UpdatePublishingDestinationMarshaler struct {
	Input *types.UpdatePublishingDestinationInput
}

// UpdateThreatIntelSetMarshaler defines marshaler for UpdateThreatIntelSet operation
type UpdateThreatIntelSetMarshaler struct {
	Input *types.UpdateThreatIntelSetInput
}

func MarshalAcceptInvitationInputShapeAWSREST(v *types.AcceptInvitationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalAcceptInvitationInputShapeAWSJSON(v *types.AcceptInvitationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalArchiveFindingsInputShapeAWSREST(v *types.ArchiveFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalArchiveFindingsInputShapeAWSJSON(v *types.ArchiveFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDetectorInputShapeAWSREST(v *types.CreateDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDetectorInputShapeAWSJSON(v *types.CreateDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateFilterInputShapeAWSREST(v *types.CreateFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateFilterInputShapeAWSJSON(v *types.CreateFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateIPSetInputShapeAWSREST(v *types.CreateIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateIPSetInputShapeAWSJSON(v *types.CreateIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateMembersInputShapeAWSREST(v *types.CreateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateMembersInputShapeAWSJSON(v *types.CreateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreatePublishingDestinationInputShapeAWSREST(v *types.CreatePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreatePublishingDestinationInputShapeAWSJSON(v *types.CreatePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSampleFindingsInputShapeAWSREST(v *types.CreateSampleFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSampleFindingsInputShapeAWSJSON(v *types.CreateSampleFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateThreatIntelSetInputShapeAWSREST(v *types.CreateThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateThreatIntelSetInputShapeAWSJSON(v *types.CreateThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeclineInvitationsInputShapeAWSREST(v *types.DeclineInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeclineInvitationsInputShapeAWSJSON(v *types.DeclineInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDetectorInputShapeAWSREST(v *types.DeleteDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDetectorInputShapeAWSJSON(v *types.DeleteDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteFilterInputShapeAWSREST(v *types.DeleteFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteFilterInputShapeAWSJSON(v *types.DeleteFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteIPSetInputShapeAWSREST(v *types.DeleteIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteIPSetInputShapeAWSJSON(v *types.DeleteIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteInvitationsInputShapeAWSREST(v *types.DeleteInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteInvitationsInputShapeAWSJSON(v *types.DeleteInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteMembersInputShapeAWSREST(v *types.DeleteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteMembersInputShapeAWSJSON(v *types.DeleteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeletePublishingDestinationInputShapeAWSREST(v *types.DeletePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeletePublishingDestinationInputShapeAWSJSON(v *types.DeletePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteThreatIntelSetInputShapeAWSREST(v *types.DeleteThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteThreatIntelSetInputShapeAWSJSON(v *types.DeleteThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribePublishingDestinationInputShapeAWSREST(v *types.DescribePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribePublishingDestinationInputShapeAWSJSON(v *types.DescribePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateFromMasterAccountInputShapeAWSREST(v *types.DisassociateFromMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateFromMasterAccountInputShapeAWSJSON(v *types.DisassociateFromMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateMembersInputShapeAWSREST(v *types.DisassociateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateMembersInputShapeAWSJSON(v *types.DisassociateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDetectorInputShapeAWSREST(v *types.GetDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDetectorInputShapeAWSJSON(v *types.GetDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetFilterInputShapeAWSREST(v *types.GetFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetFilterInputShapeAWSJSON(v *types.GetFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetFindingsInputShapeAWSREST(v *types.GetFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetFindingsInputShapeAWSJSON(v *types.GetFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetFindingsStatisticsInputShapeAWSREST(v *types.GetFindingsStatisticsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetFindingsStatisticsInputShapeAWSJSON(v *types.GetFindingsStatisticsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIPSetInputShapeAWSREST(v *types.GetIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIPSetInputShapeAWSJSON(v *types.GetIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetInvitationsCountInputShapeAWSREST(v *types.GetInvitationsCountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetInvitationsCountInputShapeAWSJSON(v *types.GetInvitationsCountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMasterAccountInputShapeAWSREST(v *types.GetMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMasterAccountInputShapeAWSJSON(v *types.GetMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMembersInputShapeAWSREST(v *types.GetMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMembersInputShapeAWSJSON(v *types.GetMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetThreatIntelSetInputShapeAWSREST(v *types.GetThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetThreatIntelSetInputShapeAWSJSON(v *types.GetThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalInviteMembersInputShapeAWSREST(v *types.InviteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalInviteMembersInputShapeAWSJSON(v *types.InviteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDetectorsInputShapeAWSREST(v *types.ListDetectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDetectorsInputShapeAWSJSON(v *types.ListDetectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListFiltersInputShapeAWSREST(v *types.ListFiltersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListFiltersInputShapeAWSJSON(v *types.ListFiltersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListFindingsInputShapeAWSREST(v *types.ListFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListFindingsInputShapeAWSJSON(v *types.ListFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListIPSetsInputShapeAWSREST(v *types.ListIPSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListIPSetsInputShapeAWSJSON(v *types.ListIPSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListInvitationsInputShapeAWSREST(v *types.ListInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListInvitationsInputShapeAWSJSON(v *types.ListInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListMembersInputShapeAWSREST(v *types.ListMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListMembersInputShapeAWSJSON(v *types.ListMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListPublishingDestinationsInputShapeAWSREST(v *types.ListPublishingDestinationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListPublishingDestinationsInputShapeAWSJSON(v *types.ListPublishingDestinationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListThreatIntelSetsInputShapeAWSREST(v *types.ListThreatIntelSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListThreatIntelSetsInputShapeAWSJSON(v *types.ListThreatIntelSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartMonitoringMembersInputShapeAWSREST(v *types.StartMonitoringMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartMonitoringMembersInputShapeAWSJSON(v *types.StartMonitoringMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStopMonitoringMembersInputShapeAWSREST(v *types.StopMonitoringMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStopMonitoringMembersInputShapeAWSJSON(v *types.StopMonitoringMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUnarchiveFindingsInputShapeAWSREST(v *types.UnarchiveFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUnarchiveFindingsInputShapeAWSJSON(v *types.UnarchiveFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDetectorInputShapeAWSREST(v *types.UpdateDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDetectorInputShapeAWSJSON(v *types.UpdateDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateFilterInputShapeAWSREST(v *types.UpdateFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateFilterInputShapeAWSJSON(v *types.UpdateFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateFindingsFeedbackInputShapeAWSREST(v *types.UpdateFindingsFeedbackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateFindingsFeedbackInputShapeAWSJSON(v *types.UpdateFindingsFeedbackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateIPSetInputShapeAWSREST(v *types.UpdateIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateIPSetInputShapeAWSJSON(v *types.UpdateIPSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdatePublishingDestinationInputShapeAWSREST(v *types.UpdatePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdatePublishingDestinationInputShapeAWSJSON(v *types.UpdatePublishingDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateThreatIntelSetInputShapeAWSREST(v *types.UpdateThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateThreatIntelSetInputShapeAWSJSON(v *types.UpdateThreatIntelSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m AcceptInvitationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptInvitationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalAcceptInvitationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptInvitationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptInvitation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ArchiveFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalArchiveFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalArchiveFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ArchiveFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ArchiveFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDetectorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDetectorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFilterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFilterInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateFilterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFilterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFilter.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateIPSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateIPSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateIPSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateIPSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateIPSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePublishingDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePublishingDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreatePublishingDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePublishingDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePublishingDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSampleFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSampleFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSampleFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSampleFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSampleFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateThreatIntelSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateThreatIntelSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateThreatIntelSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateThreatIntelSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateThreatIntelSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeclineInvitationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeclineInvitationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeclineInvitationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeclineInvitationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeclineInvitations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDetectorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDetectorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFilterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFilterInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteFilterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFilterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFilter.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteIPSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteIPSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteIPSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteIPSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteIPSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInvitationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInvitationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteInvitationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInvitationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInvitations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePublishingDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePublishingDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeletePublishingDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePublishingDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePublishingDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteThreatIntelSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteThreatIntelSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteThreatIntelSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteThreatIntelSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteThreatIntelSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePublishingDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePublishingDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribePublishingDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePublishingDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePublishingDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateFromMasterAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateFromMasterAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateFromMasterAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateFromMasterAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateFromMasterAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDetectorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDetectorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFilterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFilterInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetFilterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFilterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFilter.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFindingsStatisticsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFindingsStatisticsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetFindingsStatisticsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFindingsStatisticsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFindingsStatistics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIPSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIPSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIPSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIPSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIPSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInvitationsCountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInvitationsCountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetInvitationsCountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInvitationsCountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInvitationsCount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMasterAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMasterAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMasterAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMasterAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMasterAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetThreatIntelSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetThreatIntelSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetThreatIntelSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetThreatIntelSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetThreatIntelSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InviteMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInviteMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalInviteMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InviteMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InviteMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDetectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDetectorsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDetectorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDetectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDetectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFiltersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFiltersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListFiltersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFiltersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFilters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListIPSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListIPSetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListIPSetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListIPSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListIPSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInvitationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInvitationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListInvitationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInvitationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInvitations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPublishingDestinationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPublishingDestinationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListPublishingDestinationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPublishingDestinationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPublishingDestinations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListThreatIntelSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListThreatIntelSetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListThreatIntelSetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListThreatIntelSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListThreatIntelSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartMonitoringMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartMonitoringMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartMonitoringMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartMonitoringMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartMonitoringMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopMonitoringMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopMonitoringMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStopMonitoringMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopMonitoringMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopMonitoringMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnarchiveFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnarchiveFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUnarchiveFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnarchiveFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnarchiveFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDetectorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDetectorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFilterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFilterInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateFilterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFilterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFilter.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFindingsFeedbackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFindingsFeedbackInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateFindingsFeedbackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFindingsFeedbackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFindingsFeedback.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateIPSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateIPSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateIPSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateIPSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateIPSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePublishingDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePublishingDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdatePublishingDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePublishingDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePublishingDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateThreatIntelSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateThreatIntelSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateThreatIntelSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateThreatIntelSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateThreatIntelSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
