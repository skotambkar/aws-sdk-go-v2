// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codecommit/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssociateApprovalRuleTemplateWithRepositoryMarshaler defines marshaler for AssociateApprovalRuleTemplateWithRepository operation
type AssociateApprovalRuleTemplateWithRepositoryMarshaler struct {
	Input *types.AssociateApprovalRuleTemplateWithRepositoryInput
}

// BatchAssociateApprovalRuleTemplateWithRepositoriesMarshaler defines marshaler for BatchAssociateApprovalRuleTemplateWithRepositories operation
type BatchAssociateApprovalRuleTemplateWithRepositoriesMarshaler struct {
	Input *types.BatchAssociateApprovalRuleTemplateWithRepositoriesInput
}

// BatchDescribeMergeConflictsMarshaler defines marshaler for BatchDescribeMergeConflicts operation
type BatchDescribeMergeConflictsMarshaler struct {
	Input *types.BatchDescribeMergeConflictsInput
}

// BatchDisassociateApprovalRuleTemplateFromRepositoriesMarshaler defines marshaler for BatchDisassociateApprovalRuleTemplateFromRepositories operation
type BatchDisassociateApprovalRuleTemplateFromRepositoriesMarshaler struct {
	Input *types.BatchDisassociateApprovalRuleTemplateFromRepositoriesInput
}

// BatchGetCommitsMarshaler defines marshaler for BatchGetCommits operation
type BatchGetCommitsMarshaler struct {
	Input *types.BatchGetCommitsInput
}

// BatchGetRepositoriesMarshaler defines marshaler for BatchGetRepositories operation
type BatchGetRepositoriesMarshaler struct {
	Input *types.BatchGetRepositoriesInput
}

// CreateApprovalRuleTemplateMarshaler defines marshaler for CreateApprovalRuleTemplate operation
type CreateApprovalRuleTemplateMarshaler struct {
	Input *types.CreateApprovalRuleTemplateInput
}

// CreateBranchMarshaler defines marshaler for CreateBranch operation
type CreateBranchMarshaler struct {
	Input *types.CreateBranchInput
}

// CreateCommitMarshaler defines marshaler for CreateCommit operation
type CreateCommitMarshaler struct {
	Input *types.CreateCommitInput
}

// CreatePullRequestMarshaler defines marshaler for CreatePullRequest operation
type CreatePullRequestMarshaler struct {
	Input *types.CreatePullRequestInput
}

// CreatePullRequestApprovalRuleMarshaler defines marshaler for CreatePullRequestApprovalRule operation
type CreatePullRequestApprovalRuleMarshaler struct {
	Input *types.CreatePullRequestApprovalRuleInput
}

// CreateRepositoryMarshaler defines marshaler for CreateRepository operation
type CreateRepositoryMarshaler struct {
	Input *types.CreateRepositoryInput
}

// CreateUnreferencedMergeCommitMarshaler defines marshaler for CreateUnreferencedMergeCommit operation
type CreateUnreferencedMergeCommitMarshaler struct {
	Input *types.CreateUnreferencedMergeCommitInput
}

// DeleteApprovalRuleTemplateMarshaler defines marshaler for DeleteApprovalRuleTemplate operation
type DeleteApprovalRuleTemplateMarshaler struct {
	Input *types.DeleteApprovalRuleTemplateInput
}

// DeleteBranchMarshaler defines marshaler for DeleteBranch operation
type DeleteBranchMarshaler struct {
	Input *types.DeleteBranchInput
}

// DeleteCommentContentMarshaler defines marshaler for DeleteCommentContent operation
type DeleteCommentContentMarshaler struct {
	Input *types.DeleteCommentContentInput
}

// DeleteFileMarshaler defines marshaler for DeleteFile operation
type DeleteFileMarshaler struct {
	Input *types.DeleteFileInput
}

// DeletePullRequestApprovalRuleMarshaler defines marshaler for DeletePullRequestApprovalRule operation
type DeletePullRequestApprovalRuleMarshaler struct {
	Input *types.DeletePullRequestApprovalRuleInput
}

// DeleteRepositoryMarshaler defines marshaler for DeleteRepository operation
type DeleteRepositoryMarshaler struct {
	Input *types.DeleteRepositoryInput
}

// DescribeMergeConflictsMarshaler defines marshaler for DescribeMergeConflicts operation
type DescribeMergeConflictsMarshaler struct {
	Input *types.DescribeMergeConflictsInput
}

// DescribePullRequestEventsMarshaler defines marshaler for DescribePullRequestEvents operation
type DescribePullRequestEventsMarshaler struct {
	Input *types.DescribePullRequestEventsInput
}

// DisassociateApprovalRuleTemplateFromRepositoryMarshaler defines marshaler for DisassociateApprovalRuleTemplateFromRepository operation
type DisassociateApprovalRuleTemplateFromRepositoryMarshaler struct {
	Input *types.DisassociateApprovalRuleTemplateFromRepositoryInput
}

// EvaluatePullRequestApprovalRulesMarshaler defines marshaler for EvaluatePullRequestApprovalRules operation
type EvaluatePullRequestApprovalRulesMarshaler struct {
	Input *types.EvaluatePullRequestApprovalRulesInput
}

// GetApprovalRuleTemplateMarshaler defines marshaler for GetApprovalRuleTemplate operation
type GetApprovalRuleTemplateMarshaler struct {
	Input *types.GetApprovalRuleTemplateInput
}

// GetBlobMarshaler defines marshaler for GetBlob operation
type GetBlobMarshaler struct {
	Input *types.GetBlobInput
}

// GetBranchMarshaler defines marshaler for GetBranch operation
type GetBranchMarshaler struct {
	Input *types.GetBranchInput
}

// GetCommentMarshaler defines marshaler for GetComment operation
type GetCommentMarshaler struct {
	Input *types.GetCommentInput
}

// GetCommentsForComparedCommitMarshaler defines marshaler for GetCommentsForComparedCommit operation
type GetCommentsForComparedCommitMarshaler struct {
	Input *types.GetCommentsForComparedCommitInput
}

// GetCommentsForPullRequestMarshaler defines marshaler for GetCommentsForPullRequest operation
type GetCommentsForPullRequestMarshaler struct {
	Input *types.GetCommentsForPullRequestInput
}

// GetCommitMarshaler defines marshaler for GetCommit operation
type GetCommitMarshaler struct {
	Input *types.GetCommitInput
}

// GetDifferencesMarshaler defines marshaler for GetDifferences operation
type GetDifferencesMarshaler struct {
	Input *types.GetDifferencesInput
}

// GetFileMarshaler defines marshaler for GetFile operation
type GetFileMarshaler struct {
	Input *types.GetFileInput
}

// GetFolderMarshaler defines marshaler for GetFolder operation
type GetFolderMarshaler struct {
	Input *types.GetFolderInput
}

// GetMergeCommitMarshaler defines marshaler for GetMergeCommit operation
type GetMergeCommitMarshaler struct {
	Input *types.GetMergeCommitInput
}

// GetMergeConflictsMarshaler defines marshaler for GetMergeConflicts operation
type GetMergeConflictsMarshaler struct {
	Input *types.GetMergeConflictsInput
}

// GetMergeOptionsMarshaler defines marshaler for GetMergeOptions operation
type GetMergeOptionsMarshaler struct {
	Input *types.GetMergeOptionsInput
}

// GetPullRequestMarshaler defines marshaler for GetPullRequest operation
type GetPullRequestMarshaler struct {
	Input *types.GetPullRequestInput
}

// GetPullRequestApprovalStatesMarshaler defines marshaler for GetPullRequestApprovalStates operation
type GetPullRequestApprovalStatesMarshaler struct {
	Input *types.GetPullRequestApprovalStatesInput
}

// GetPullRequestOverrideStateMarshaler defines marshaler for GetPullRequestOverrideState operation
type GetPullRequestOverrideStateMarshaler struct {
	Input *types.GetPullRequestOverrideStateInput
}

// GetRepositoryMarshaler defines marshaler for GetRepository operation
type GetRepositoryMarshaler struct {
	Input *types.GetRepositoryInput
}

// GetRepositoryTriggersMarshaler defines marshaler for GetRepositoryTriggers operation
type GetRepositoryTriggersMarshaler struct {
	Input *types.GetRepositoryTriggersInput
}

// ListApprovalRuleTemplatesMarshaler defines marshaler for ListApprovalRuleTemplates operation
type ListApprovalRuleTemplatesMarshaler struct {
	Input *types.ListApprovalRuleTemplatesInput
}

// ListAssociatedApprovalRuleTemplatesForRepositoryMarshaler defines marshaler for ListAssociatedApprovalRuleTemplatesForRepository operation
type ListAssociatedApprovalRuleTemplatesForRepositoryMarshaler struct {
	Input *types.ListAssociatedApprovalRuleTemplatesForRepositoryInput
}

// ListBranchesMarshaler defines marshaler for ListBranches operation
type ListBranchesMarshaler struct {
	Input *types.ListBranchesInput
}

// ListPullRequestsMarshaler defines marshaler for ListPullRequests operation
type ListPullRequestsMarshaler struct {
	Input *types.ListPullRequestsInput
}

// ListRepositoriesMarshaler defines marshaler for ListRepositories operation
type ListRepositoriesMarshaler struct {
	Input *types.ListRepositoriesInput
}

// ListRepositoriesForApprovalRuleTemplateMarshaler defines marshaler for ListRepositoriesForApprovalRuleTemplate operation
type ListRepositoriesForApprovalRuleTemplateMarshaler struct {
	Input *types.ListRepositoriesForApprovalRuleTemplateInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// MergeBranchesByFastForwardMarshaler defines marshaler for MergeBranchesByFastForward operation
type MergeBranchesByFastForwardMarshaler struct {
	Input *types.MergeBranchesByFastForwardInput
}

// MergeBranchesBySquashMarshaler defines marshaler for MergeBranchesBySquash operation
type MergeBranchesBySquashMarshaler struct {
	Input *types.MergeBranchesBySquashInput
}

// MergeBranchesByThreeWayMarshaler defines marshaler for MergeBranchesByThreeWay operation
type MergeBranchesByThreeWayMarshaler struct {
	Input *types.MergeBranchesByThreeWayInput
}

// MergePullRequestByFastForwardMarshaler defines marshaler for MergePullRequestByFastForward operation
type MergePullRequestByFastForwardMarshaler struct {
	Input *types.MergePullRequestByFastForwardInput
}

// MergePullRequestBySquashMarshaler defines marshaler for MergePullRequestBySquash operation
type MergePullRequestBySquashMarshaler struct {
	Input *types.MergePullRequestBySquashInput
}

// MergePullRequestByThreeWayMarshaler defines marshaler for MergePullRequestByThreeWay operation
type MergePullRequestByThreeWayMarshaler struct {
	Input *types.MergePullRequestByThreeWayInput
}

// OverridePullRequestApprovalRulesMarshaler defines marshaler for OverridePullRequestApprovalRules operation
type OverridePullRequestApprovalRulesMarshaler struct {
	Input *types.OverridePullRequestApprovalRulesInput
}

// PostCommentForComparedCommitMarshaler defines marshaler for PostCommentForComparedCommit operation
type PostCommentForComparedCommitMarshaler struct {
	Input *types.PostCommentForComparedCommitInput
}

// PostCommentForPullRequestMarshaler defines marshaler for PostCommentForPullRequest operation
type PostCommentForPullRequestMarshaler struct {
	Input *types.PostCommentForPullRequestInput
}

// PostCommentReplyMarshaler defines marshaler for PostCommentReply operation
type PostCommentReplyMarshaler struct {
	Input *types.PostCommentReplyInput
}

// PutFileMarshaler defines marshaler for PutFile operation
type PutFileMarshaler struct {
	Input *types.PutFileInput
}

// PutRepositoryTriggersMarshaler defines marshaler for PutRepositoryTriggers operation
type PutRepositoryTriggersMarshaler struct {
	Input *types.PutRepositoryTriggersInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// TestRepositoryTriggersMarshaler defines marshaler for TestRepositoryTriggers operation
type TestRepositoryTriggersMarshaler struct {
	Input *types.TestRepositoryTriggersInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateApprovalRuleTemplateContentMarshaler defines marshaler for UpdateApprovalRuleTemplateContent operation
type UpdateApprovalRuleTemplateContentMarshaler struct {
	Input *types.UpdateApprovalRuleTemplateContentInput
}

// UpdateApprovalRuleTemplateDescriptionMarshaler defines marshaler for UpdateApprovalRuleTemplateDescription operation
type UpdateApprovalRuleTemplateDescriptionMarshaler struct {
	Input *types.UpdateApprovalRuleTemplateDescriptionInput
}

// UpdateApprovalRuleTemplateNameMarshaler defines marshaler for UpdateApprovalRuleTemplateName operation
type UpdateApprovalRuleTemplateNameMarshaler struct {
	Input *types.UpdateApprovalRuleTemplateNameInput
}

// UpdateCommentMarshaler defines marshaler for UpdateComment operation
type UpdateCommentMarshaler struct {
	Input *types.UpdateCommentInput
}

// UpdateDefaultBranchMarshaler defines marshaler for UpdateDefaultBranch operation
type UpdateDefaultBranchMarshaler struct {
	Input *types.UpdateDefaultBranchInput
}

// UpdatePullRequestApprovalRuleContentMarshaler defines marshaler for UpdatePullRequestApprovalRuleContent operation
type UpdatePullRequestApprovalRuleContentMarshaler struct {
	Input *types.UpdatePullRequestApprovalRuleContentInput
}

// UpdatePullRequestApprovalStateMarshaler defines marshaler for UpdatePullRequestApprovalState operation
type UpdatePullRequestApprovalStateMarshaler struct {
	Input *types.UpdatePullRequestApprovalStateInput
}

// UpdatePullRequestDescriptionMarshaler defines marshaler for UpdatePullRequestDescription operation
type UpdatePullRequestDescriptionMarshaler struct {
	Input *types.UpdatePullRequestDescriptionInput
}

// UpdatePullRequestStatusMarshaler defines marshaler for UpdatePullRequestStatus operation
type UpdatePullRequestStatusMarshaler struct {
	Input *types.UpdatePullRequestStatusInput
}

// UpdatePullRequestTitleMarshaler defines marshaler for UpdatePullRequestTitle operation
type UpdatePullRequestTitleMarshaler struct {
	Input *types.UpdatePullRequestTitleInput
}

// UpdateRepositoryDescriptionMarshaler defines marshaler for UpdateRepositoryDescription operation
type UpdateRepositoryDescriptionMarshaler struct {
	Input *types.UpdateRepositoryDescriptionInput
}

// UpdateRepositoryNameMarshaler defines marshaler for UpdateRepositoryName operation
type UpdateRepositoryNameMarshaler struct {
	Input *types.UpdateRepositoryNameInput
}

func MarshalAssociateApprovalRuleTemplateWithRepositoryInputShapeAWSJSON(v *types.AssociateApprovalRuleTemplateWithRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchAssociateApprovalRuleTemplateWithRepositoriesInputShapeAWSJSON(v *types.BatchAssociateApprovalRuleTemplateWithRepositoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchDescribeMergeConflictsInputShapeAWSJSON(v *types.BatchDescribeMergeConflictsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchDisassociateApprovalRuleTemplateFromRepositoriesInputShapeAWSJSON(v *types.BatchDisassociateApprovalRuleTemplateFromRepositoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetCommitsInputShapeAWSJSON(v *types.BatchGetCommitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetRepositoriesInputShapeAWSJSON(v *types.BatchGetRepositoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateApprovalRuleTemplateInputShapeAWSJSON(v *types.CreateApprovalRuleTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateBranchInputShapeAWSJSON(v *types.CreateBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCommitInputShapeAWSJSON(v *types.CreateCommitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePullRequestInputShapeAWSJSON(v *types.CreatePullRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePullRequestApprovalRuleInputShapeAWSJSON(v *types.CreatePullRequestApprovalRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRepositoryInputShapeAWSJSON(v *types.CreateRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUnreferencedMergeCommitInputShapeAWSJSON(v *types.CreateUnreferencedMergeCommitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApprovalRuleTemplateInputShapeAWSJSON(v *types.DeleteApprovalRuleTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteBranchInputShapeAWSJSON(v *types.DeleteBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteCommentContentInputShapeAWSJSON(v *types.DeleteCommentContentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteFileInputShapeAWSJSON(v *types.DeleteFileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePullRequestApprovalRuleInputShapeAWSJSON(v *types.DeletePullRequestApprovalRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRepositoryInputShapeAWSJSON(v *types.DeleteRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeMergeConflictsInputShapeAWSJSON(v *types.DescribeMergeConflictsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePullRequestEventsInputShapeAWSJSON(v *types.DescribePullRequestEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateApprovalRuleTemplateFromRepositoryInputShapeAWSJSON(v *types.DisassociateApprovalRuleTemplateFromRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEvaluatePullRequestApprovalRulesInputShapeAWSJSON(v *types.EvaluatePullRequestApprovalRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetApprovalRuleTemplateInputShapeAWSJSON(v *types.GetApprovalRuleTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetBlobInputShapeAWSJSON(v *types.GetBlobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetBranchInputShapeAWSJSON(v *types.GetBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCommentInputShapeAWSJSON(v *types.GetCommentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCommentsForComparedCommitInputShapeAWSJSON(v *types.GetCommentsForComparedCommitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCommentsForPullRequestInputShapeAWSJSON(v *types.GetCommentsForPullRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCommitInputShapeAWSJSON(v *types.GetCommitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDifferencesInputShapeAWSJSON(v *types.GetDifferencesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetFileInputShapeAWSJSON(v *types.GetFileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetFolderInputShapeAWSJSON(v *types.GetFolderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetMergeCommitInputShapeAWSJSON(v *types.GetMergeCommitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetMergeConflictsInputShapeAWSJSON(v *types.GetMergeConflictsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetMergeOptionsInputShapeAWSJSON(v *types.GetMergeOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPullRequestInputShapeAWSJSON(v *types.GetPullRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPullRequestApprovalStatesInputShapeAWSJSON(v *types.GetPullRequestApprovalStatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPullRequestOverrideStateInputShapeAWSJSON(v *types.GetPullRequestOverrideStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRepositoryInputShapeAWSJSON(v *types.GetRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRepositoryTriggersInputShapeAWSJSON(v *types.GetRepositoryTriggersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListApprovalRuleTemplatesInputShapeAWSJSON(v *types.ListApprovalRuleTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAssociatedApprovalRuleTemplatesForRepositoryInputShapeAWSJSON(v *types.ListAssociatedApprovalRuleTemplatesForRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBranchesInputShapeAWSJSON(v *types.ListBranchesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPullRequestsInputShapeAWSJSON(v *types.ListPullRequestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRepositoriesInputShapeAWSJSON(v *types.ListRepositoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRepositoriesForApprovalRuleTemplateInputShapeAWSJSON(v *types.ListRepositoriesForApprovalRuleTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMergeBranchesByFastForwardInputShapeAWSJSON(v *types.MergeBranchesByFastForwardInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMergeBranchesBySquashInputShapeAWSJSON(v *types.MergeBranchesBySquashInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMergeBranchesByThreeWayInputShapeAWSJSON(v *types.MergeBranchesByThreeWayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMergePullRequestByFastForwardInputShapeAWSJSON(v *types.MergePullRequestByFastForwardInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMergePullRequestBySquashInputShapeAWSJSON(v *types.MergePullRequestBySquashInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMergePullRequestByThreeWayInputShapeAWSJSON(v *types.MergePullRequestByThreeWayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalOverridePullRequestApprovalRulesInputShapeAWSJSON(v *types.OverridePullRequestApprovalRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPostCommentForComparedCommitInputShapeAWSJSON(v *types.PostCommentForComparedCommitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPostCommentForPullRequestInputShapeAWSJSON(v *types.PostCommentForPullRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPostCommentReplyInputShapeAWSJSON(v *types.PostCommentReplyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutFileInputShapeAWSJSON(v *types.PutFileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutRepositoryTriggersInputShapeAWSJSON(v *types.PutRepositoryTriggersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTestRepositoryTriggersInputShapeAWSJSON(v *types.TestRepositoryTriggersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateApprovalRuleTemplateContentInputShapeAWSJSON(v *types.UpdateApprovalRuleTemplateContentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateApprovalRuleTemplateDescriptionInputShapeAWSJSON(v *types.UpdateApprovalRuleTemplateDescriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateApprovalRuleTemplateNameInputShapeAWSJSON(v *types.UpdateApprovalRuleTemplateNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateCommentInputShapeAWSJSON(v *types.UpdateCommentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDefaultBranchInputShapeAWSJSON(v *types.UpdateDefaultBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePullRequestApprovalRuleContentInputShapeAWSJSON(v *types.UpdatePullRequestApprovalRuleContentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePullRequestApprovalStateInputShapeAWSJSON(v *types.UpdatePullRequestApprovalStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePullRequestDescriptionInputShapeAWSJSON(v *types.UpdatePullRequestDescriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePullRequestStatusInputShapeAWSJSON(v *types.UpdatePullRequestStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePullRequestTitleInputShapeAWSJSON(v *types.UpdatePullRequestTitleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateRepositoryDescriptionInputShapeAWSJSON(v *types.UpdateRepositoryDescriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateRepositoryNameInputShapeAWSJSON(v *types.UpdateRepositoryNameInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AssociateApprovalRuleTemplateWithRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateApprovalRuleTemplateWithRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateApprovalRuleTemplateWithRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateApprovalRuleTemplateWithRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchAssociateApprovalRuleTemplateWithRepositoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchAssociateApprovalRuleTemplateWithRepositoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchAssociateApprovalRuleTemplateWithRepositoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchAssociateApprovalRuleTemplateWithRepositories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDescribeMergeConflictsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDescribeMergeConflictsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDescribeMergeConflictsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDescribeMergeConflicts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDisassociateApprovalRuleTemplateFromRepositoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDisassociateApprovalRuleTemplateFromRepositoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDisassociateApprovalRuleTemplateFromRepositoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDisassociateApprovalRuleTemplateFromRepositories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetCommitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetCommitsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetCommitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetCommits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetRepositoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetRepositoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetRepositoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetRepositories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateApprovalRuleTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApprovalRuleTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApprovalRuleTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApprovalRuleTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCommitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCommitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCommitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCommit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePullRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePullRequestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePullRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePullRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePullRequestApprovalRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePullRequestApprovalRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePullRequestApprovalRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePullRequestApprovalRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUnreferencedMergeCommitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUnreferencedMergeCommitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUnreferencedMergeCommitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUnreferencedMergeCommit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApprovalRuleTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApprovalRuleTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApprovalRuleTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApprovalRuleTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCommentContentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCommentContentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCommentContentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCommentContent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePullRequestApprovalRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePullRequestApprovalRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePullRequestApprovalRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePullRequestApprovalRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMergeConflictsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMergeConflictsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMergeConflictsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMergeConflicts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePullRequestEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePullRequestEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePullRequestEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePullRequestEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateApprovalRuleTemplateFromRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateApprovalRuleTemplateFromRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateApprovalRuleTemplateFromRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateApprovalRuleTemplateFromRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EvaluatePullRequestApprovalRulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEvaluatePullRequestApprovalRulesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EvaluatePullRequestApprovalRulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EvaluatePullRequestApprovalRules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApprovalRuleTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApprovalRuleTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApprovalRuleTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApprovalRuleTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBlobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBlobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBlobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBlob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCommentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCommentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCommentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetComment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCommentsForComparedCommitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCommentsForComparedCommitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCommentsForComparedCommitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCommentsForComparedCommit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCommentsForPullRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCommentsForPullRequestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCommentsForPullRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCommentsForPullRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCommitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCommitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCommitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCommit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDifferencesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDifferencesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDifferencesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDifferences.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFolderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFolderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFolderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFolder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMergeCommitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMergeCommitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMergeCommitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMergeCommit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMergeConflictsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMergeConflictsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMergeConflictsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMergeConflicts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMergeOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMergeOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMergeOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMergeOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPullRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPullRequestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPullRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPullRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPullRequestApprovalStatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPullRequestApprovalStatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPullRequestApprovalStatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPullRequestApprovalStates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPullRequestOverrideStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPullRequestOverrideStateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPullRequestOverrideStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPullRequestOverrideState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRepositoryTriggersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRepositoryTriggersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRepositoryTriggersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRepositoryTriggers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApprovalRuleTemplatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApprovalRuleTemplatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApprovalRuleTemplatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApprovalRuleTemplates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAssociatedApprovalRuleTemplatesForRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAssociatedApprovalRuleTemplatesForRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAssociatedApprovalRuleTemplatesForRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAssociatedApprovalRuleTemplatesForRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBranchesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBranchesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBranchesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBranches.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPullRequestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPullRequestsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPullRequestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPullRequests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRepositoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRepositoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRepositoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRepositories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRepositoriesForApprovalRuleTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRepositoriesForApprovalRuleTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRepositoriesForApprovalRuleTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRepositoriesForApprovalRuleTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MergeBranchesByFastForwardMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMergeBranchesByFastForwardInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MergeBranchesByFastForwardMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MergeBranchesByFastForward.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MergeBranchesBySquashMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMergeBranchesBySquashInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MergeBranchesBySquashMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MergeBranchesBySquash.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MergeBranchesByThreeWayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMergeBranchesByThreeWayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MergeBranchesByThreeWayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MergeBranchesByThreeWay.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MergePullRequestByFastForwardMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMergePullRequestByFastForwardInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MergePullRequestByFastForwardMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MergePullRequestByFastForward.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MergePullRequestBySquashMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMergePullRequestBySquashInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MergePullRequestBySquashMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MergePullRequestBySquash.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MergePullRequestByThreeWayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMergePullRequestByThreeWayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MergePullRequestByThreeWayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MergePullRequestByThreeWay.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m OverridePullRequestApprovalRulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalOverridePullRequestApprovalRulesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m OverridePullRequestApprovalRulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "OverridePullRequestApprovalRules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PostCommentForComparedCommitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPostCommentForComparedCommitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PostCommentForComparedCommitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PostCommentForComparedCommit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PostCommentForPullRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPostCommentForPullRequestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PostCommentForPullRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PostCommentForPullRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PostCommentReplyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPostCommentReplyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PostCommentReplyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PostCommentReply.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutFileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutFileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutFileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutFile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRepositoryTriggersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRepositoryTriggersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRepositoryTriggersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRepositoryTriggers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestRepositoryTriggersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestRepositoryTriggersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestRepositoryTriggersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestRepositoryTriggers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApprovalRuleTemplateContentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApprovalRuleTemplateContentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApprovalRuleTemplateContentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApprovalRuleTemplateContent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApprovalRuleTemplateDescriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApprovalRuleTemplateDescriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApprovalRuleTemplateDescriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApprovalRuleTemplateDescription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApprovalRuleTemplateNameMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApprovalRuleTemplateNameInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApprovalRuleTemplateNameMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApprovalRuleTemplateName.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateCommentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateCommentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateCommentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateComment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDefaultBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDefaultBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDefaultBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDefaultBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePullRequestApprovalRuleContentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePullRequestApprovalRuleContentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePullRequestApprovalRuleContentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePullRequestApprovalRuleContent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePullRequestApprovalStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePullRequestApprovalStateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePullRequestApprovalStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePullRequestApprovalState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePullRequestDescriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePullRequestDescriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePullRequestDescriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePullRequestDescription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePullRequestStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePullRequestStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePullRequestStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePullRequestStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePullRequestTitleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePullRequestTitleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePullRequestTitleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePullRequestTitle.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRepositoryDescriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRepositoryDescriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRepositoryDescriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRepositoryDescription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRepositoryNameMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRepositoryNameInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRepositoryNameMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRepositoryName.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
