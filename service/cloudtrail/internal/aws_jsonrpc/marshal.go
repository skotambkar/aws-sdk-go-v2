// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cloudtrail/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddTagsMarshaler defines marshaler for AddTags operation
type AddTagsMarshaler struct {
	Input *types.AddTagsInput
}

// CreateTrailMarshaler defines marshaler for CreateTrail operation
type CreateTrailMarshaler struct {
	Input *types.CreateTrailInput
}

// DeleteTrailMarshaler defines marshaler for DeleteTrail operation
type DeleteTrailMarshaler struct {
	Input *types.DeleteTrailInput
}

// DescribeTrailsMarshaler defines marshaler for DescribeTrails operation
type DescribeTrailsMarshaler struct {
	Input *types.DescribeTrailsInput
}

// GetEventSelectorsMarshaler defines marshaler for GetEventSelectors operation
type GetEventSelectorsMarshaler struct {
	Input *types.GetEventSelectorsInput
}

// GetInsightSelectorsMarshaler defines marshaler for GetInsightSelectors operation
type GetInsightSelectorsMarshaler struct {
	Input *types.GetInsightSelectorsInput
}

// GetTrailMarshaler defines marshaler for GetTrail operation
type GetTrailMarshaler struct {
	Input *types.GetTrailInput
}

// GetTrailStatusMarshaler defines marshaler for GetTrailStatus operation
type GetTrailStatusMarshaler struct {
	Input *types.GetTrailStatusInput
}

// ListPublicKeysMarshaler defines marshaler for ListPublicKeys operation
type ListPublicKeysMarshaler struct {
	Input *types.ListPublicKeysInput
}

// ListTagsMarshaler defines marshaler for ListTags operation
type ListTagsMarshaler struct {
	Input *types.ListTagsInput
}

// ListTrailsMarshaler defines marshaler for ListTrails operation
type ListTrailsMarshaler struct {
	Input *types.ListTrailsInput
}

// LookupEventsMarshaler defines marshaler for LookupEvents operation
type LookupEventsMarshaler struct {
	Input *types.LookupEventsInput
}

// PutEventSelectorsMarshaler defines marshaler for PutEventSelectors operation
type PutEventSelectorsMarshaler struct {
	Input *types.PutEventSelectorsInput
}

// PutInsightSelectorsMarshaler defines marshaler for PutInsightSelectors operation
type PutInsightSelectorsMarshaler struct {
	Input *types.PutInsightSelectorsInput
}

// RemoveTagsMarshaler defines marshaler for RemoveTags operation
type RemoveTagsMarshaler struct {
	Input *types.RemoveTagsInput
}

// StartLoggingMarshaler defines marshaler for StartLogging operation
type StartLoggingMarshaler struct {
	Input *types.StartLoggingInput
}

// StopLoggingMarshaler defines marshaler for StopLogging operation
type StopLoggingMarshaler struct {
	Input *types.StopLoggingInput
}

// UpdateTrailMarshaler defines marshaler for UpdateTrail operation
type UpdateTrailMarshaler struct {
	Input *types.UpdateTrailInput
}

func MarshalAddTagsInputShapeAWSJSON(v *types.AddTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTrailInputShapeAWSJSON(v *types.CreateTrailInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTrailInputShapeAWSJSON(v *types.DeleteTrailInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTrailsInputShapeAWSJSON(v *types.DescribeTrailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetEventSelectorsInputShapeAWSJSON(v *types.GetEventSelectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInsightSelectorsInputShapeAWSJSON(v *types.GetInsightSelectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetTrailInputShapeAWSJSON(v *types.GetTrailInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetTrailStatusInputShapeAWSJSON(v *types.GetTrailStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPublicKeysInputShapeAWSJSON(v *types.ListPublicKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsInputShapeAWSJSON(v *types.ListTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTrailsInputShapeAWSJSON(v *types.ListTrailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalLookupEventsInputShapeAWSJSON(v *types.LookupEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutEventSelectorsInputShapeAWSJSON(v *types.PutEventSelectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutInsightSelectorsInputShapeAWSJSON(v *types.PutInsightSelectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveTagsInputShapeAWSJSON(v *types.RemoveTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartLoggingInputShapeAWSJSON(v *types.StartLoggingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopLoggingInputShapeAWSJSON(v *types.StopLoggingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTrailInputShapeAWSJSON(v *types.UpdateTrailInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AddTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTrailMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTrailInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTrailMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTrail.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTrailMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTrailInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTrailMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTrail.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTrailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTrailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTrailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTrails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEventSelectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEventSelectorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEventSelectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEventSelectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInsightSelectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInsightSelectorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInsightSelectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInsightSelectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTrailMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTrailInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTrailMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTrail.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTrailStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTrailStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTrailStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTrailStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPublicKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPublicKeysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPublicKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPublicKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTrailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTrailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTrailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTrails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m LookupEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalLookupEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m LookupEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "LookupEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEventSelectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEventSelectorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEventSelectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEventSelectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutInsightSelectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutInsightSelectorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutInsightSelectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutInsightSelectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartLoggingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartLoggingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartLoggingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartLogging.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopLoggingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopLoggingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopLoggingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopLogging.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTrailMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTrailInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTrailMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTrail.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
