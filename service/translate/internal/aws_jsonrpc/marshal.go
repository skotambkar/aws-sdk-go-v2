// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/translate/types"
)

var _ bytes.Buffer
var _ awserr.Error

// DeleteTerminologyMarshaler defines marshaler for DeleteTerminology operation
type DeleteTerminologyMarshaler struct {
	Input *types.DeleteTerminologyInput
}

// GetTerminologyMarshaler defines marshaler for GetTerminology operation
type GetTerminologyMarshaler struct {
	Input *types.GetTerminologyInput
}

// ImportTerminologyMarshaler defines marshaler for ImportTerminology operation
type ImportTerminologyMarshaler struct {
	Input *types.ImportTerminologyInput
}

// ListTerminologiesMarshaler defines marshaler for ListTerminologies operation
type ListTerminologiesMarshaler struct {
	Input *types.ListTerminologiesInput
}

// TranslateTextMarshaler defines marshaler for TranslateText operation
type TranslateTextMarshaler struct {
	Input *types.TranslateTextInput
}

func MarshalDeleteTerminologyInputShapeAWSJSON(v *types.DeleteTerminologyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetTerminologyInputShapeAWSJSON(v *types.GetTerminologyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalImportTerminologyInputShapeAWSJSON(v *types.ImportTerminologyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTerminologiesInputShapeAWSJSON(v *types.ListTerminologiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTranslateTextInputShapeAWSJSON(v *types.TranslateTextInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m DeleteTerminologyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTerminologyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTerminologyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTerminology.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTerminologyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTerminologyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTerminologyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTerminology.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportTerminologyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportTerminologyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportTerminologyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportTerminology.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTerminologiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTerminologiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTerminologiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTerminologies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TranslateTextMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTranslateTextInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TranslateTextMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TranslateText.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
