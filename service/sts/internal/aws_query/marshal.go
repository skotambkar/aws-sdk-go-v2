// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/sts/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssumeRoleMarshaler defines marshaler for AssumeRole operation
type AssumeRoleMarshaler struct {
	Input *types.AssumeRoleInput
}

// AssumeRoleWithSAMLMarshaler defines marshaler for AssumeRoleWithSAML operation
type AssumeRoleWithSAMLMarshaler struct {
	Input *types.AssumeRoleWithSAMLInput
}

// AssumeRoleWithWebIdentityMarshaler defines marshaler for AssumeRoleWithWebIdentity operation
type AssumeRoleWithWebIdentityMarshaler struct {
	Input *types.AssumeRoleWithWebIdentityInput
}

// DecodeAuthorizationMessageMarshaler defines marshaler for DecodeAuthorizationMessage operation
type DecodeAuthorizationMessageMarshaler struct {
	Input *types.DecodeAuthorizationMessageInput
}

// GetAccessKeyInfoMarshaler defines marshaler for GetAccessKeyInfo operation
type GetAccessKeyInfoMarshaler struct {
	Input *types.GetAccessKeyInfoInput
}

// GetCallerIdentityMarshaler defines marshaler for GetCallerIdentity operation
type GetCallerIdentityMarshaler struct {
	Input *types.GetCallerIdentityInput
}

// GetFederationTokenMarshaler defines marshaler for GetFederationToken operation
type GetFederationTokenMarshaler struct {
	Input *types.GetFederationTokenInput
}

// GetSessionTokenMarshaler defines marshaler for GetSessionToken operation
type GetSessionTokenMarshaler struct {
	Input *types.GetSessionTokenInput
}

func MarshalAssumeRoleInputShapeAWSQuery(v *types.AssumeRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAssumeRoleWithSAMLInputShapeAWSQuery(v *types.AssumeRoleWithSAMLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAssumeRoleWithWebIdentityInputShapeAWSQuery(v *types.AssumeRoleWithWebIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDecodeAuthorizationMessageInputShapeAWSQuery(v *types.DecodeAuthorizationMessageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetAccessKeyInfoInputShapeAWSQuery(v *types.GetAccessKeyInfoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetCallerIdentityInputShapeAWSQuery(v *types.GetCallerIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetFederationTokenInputShapeAWSQuery(v *types.GetFederationTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetSessionTokenInputShapeAWSQuery(v *types.GetSessionTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AssumeRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssumeRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssumeRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssumeRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssumeRoleWithSAMLMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssumeRoleWithSAMLInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssumeRoleWithSAMLMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssumeRoleWithSAML.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssumeRoleWithWebIdentityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssumeRoleWithWebIdentityInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssumeRoleWithWebIdentityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssumeRoleWithWebIdentity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DecodeAuthorizationMessageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDecodeAuthorizationMessageInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DecodeAuthorizationMessageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DecodeAuthorizationMessage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccessKeyInfoMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccessKeyInfoInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccessKeyInfoMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccessKeyInfo.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCallerIdentityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCallerIdentityInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCallerIdentityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCallerIdentity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFederationTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFederationTokenInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFederationTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFederationToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSessionTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSessionTokenInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSessionTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSessionToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
