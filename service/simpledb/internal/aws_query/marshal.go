// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/simpledb/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchDeleteAttributesMarshaler defines marshaler for BatchDeleteAttributes operation
type BatchDeleteAttributesMarshaler struct {
	Input *types.BatchDeleteAttributesInput
}

// BatchPutAttributesMarshaler defines marshaler for BatchPutAttributes operation
type BatchPutAttributesMarshaler struct {
	Input *types.BatchPutAttributesInput
}

// CreateDomainMarshaler defines marshaler for CreateDomain operation
type CreateDomainMarshaler struct {
	Input *types.CreateDomainInput
}

// DeleteAttributesMarshaler defines marshaler for DeleteAttributes operation
type DeleteAttributesMarshaler struct {
	Input *types.DeleteAttributesInput
}

// DeleteDomainMarshaler defines marshaler for DeleteDomain operation
type DeleteDomainMarshaler struct {
	Input *types.DeleteDomainInput
}

// DomainMetadataMarshaler defines marshaler for DomainMetadata operation
type DomainMetadataMarshaler struct {
	Input *types.DomainMetadataInput
}

// GetAttributesMarshaler defines marshaler for GetAttributes operation
type GetAttributesMarshaler struct {
	Input *types.GetAttributesInput
}

// ListDomainsMarshaler defines marshaler for ListDomains operation
type ListDomainsMarshaler struct {
	Input *types.ListDomainsInput
}

// PutAttributesMarshaler defines marshaler for PutAttributes operation
type PutAttributesMarshaler struct {
	Input *types.PutAttributesInput
}

// SelectMarshaler defines marshaler for Select operation
type SelectMarshaler struct {
	Input *types.SelectInput
}

func MarshalBatchDeleteAttributesInputShapeAWSQuery(v *types.BatchDeleteAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalBatchPutAttributesInputShapeAWSQuery(v *types.BatchPutAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDomainInputShapeAWSQuery(v *types.CreateDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteAttributesInputShapeAWSQuery(v *types.DeleteAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDomainInputShapeAWSQuery(v *types.DeleteDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDomainMetadataInputShapeAWSQuery(v *types.DomainMetadataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetAttributesInputShapeAWSQuery(v *types.GetAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListDomainsInputShapeAWSQuery(v *types.ListDomainsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutAttributesInputShapeAWSQuery(v *types.PutAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSelectInputShapeAWSQuery(v *types.SelectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m BatchDeleteAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDeleteAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDeleteAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDeleteAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchPutAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchPutAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchPutAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchPutAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDomainInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDomainInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DomainMetadataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDomainMetadataInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DomainMetadataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DomainMetadata.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDomainsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDomainsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDomainsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDomains.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SelectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSelectInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SelectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Select.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
