// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/codestarnotifications/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateNotificationRuleMarshaler defines marshaler for CreateNotificationRule operation
type CreateNotificationRuleMarshaler struct {
	Input *types.CreateNotificationRuleInput
}

// DeleteNotificationRuleMarshaler defines marshaler for DeleteNotificationRule operation
type DeleteNotificationRuleMarshaler struct {
	Input *types.DeleteNotificationRuleInput
}

// DeleteTargetMarshaler defines marshaler for DeleteTarget operation
type DeleteTargetMarshaler struct {
	Input *types.DeleteTargetInput
}

// DescribeNotificationRuleMarshaler defines marshaler for DescribeNotificationRule operation
type DescribeNotificationRuleMarshaler struct {
	Input *types.DescribeNotificationRuleInput
}

// ListEventTypesMarshaler defines marshaler for ListEventTypes operation
type ListEventTypesMarshaler struct {
	Input *types.ListEventTypesInput
}

// ListNotificationRulesMarshaler defines marshaler for ListNotificationRules operation
type ListNotificationRulesMarshaler struct {
	Input *types.ListNotificationRulesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTargetsMarshaler defines marshaler for ListTargets operation
type ListTargetsMarshaler struct {
	Input *types.ListTargetsInput
}

// SubscribeMarshaler defines marshaler for Subscribe operation
type SubscribeMarshaler struct {
	Input *types.SubscribeInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UnsubscribeMarshaler defines marshaler for Unsubscribe operation
type UnsubscribeMarshaler struct {
	Input *types.UnsubscribeInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateNotificationRuleMarshaler defines marshaler for UpdateNotificationRule operation
type UpdateNotificationRuleMarshaler struct {
	Input *types.UpdateNotificationRuleInput
}

func MarshalCreateNotificationRuleInputShapeAWSREST(v *types.CreateNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateNotificationRuleInputShapeAWSJSON(v *types.CreateNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteNotificationRuleInputShapeAWSREST(v *types.DeleteNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteNotificationRuleInputShapeAWSJSON(v *types.DeleteNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteTargetInputShapeAWSREST(v *types.DeleteTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteTargetInputShapeAWSJSON(v *types.DeleteTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeNotificationRuleInputShapeAWSREST(v *types.DescribeNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeNotificationRuleInputShapeAWSJSON(v *types.DescribeNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListEventTypesInputShapeAWSREST(v *types.ListEventTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListEventTypesInputShapeAWSJSON(v *types.ListEventTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListNotificationRulesInputShapeAWSREST(v *types.ListNotificationRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListNotificationRulesInputShapeAWSJSON(v *types.ListNotificationRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTargetsInputShapeAWSREST(v *types.ListTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTargetsInputShapeAWSJSON(v *types.ListTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSubscribeInputShapeAWSREST(v *types.SubscribeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSubscribeInputShapeAWSJSON(v *types.SubscribeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUnsubscribeInputShapeAWSREST(v *types.UnsubscribeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUnsubscribeInputShapeAWSJSON(v *types.UnsubscribeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateNotificationRuleInputShapeAWSREST(v *types.UpdateNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateNotificationRuleInputShapeAWSJSON(v *types.UpdateNotificationRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateNotificationRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNotificationRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateNotificationRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNotificationRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNotificationRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNotificationRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNotificationRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteNotificationRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNotificationRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNotificationRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTargetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNotificationRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNotificationRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeNotificationRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNotificationRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNotificationRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEventTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEventTypesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListEventTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEventTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEventTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListNotificationRulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListNotificationRulesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListNotificationRulesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListNotificationRulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListNotificationRules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTargetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SubscribeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSubscribeInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSubscribeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SubscribeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Subscribe.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnsubscribeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnsubscribeInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUnsubscribeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnsubscribeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Unsubscribe.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateNotificationRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateNotificationRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateNotificationRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateNotificationRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateNotificationRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
