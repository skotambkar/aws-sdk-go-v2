// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/mediastoredata/types"
)

var _ bytes.Buffer
var _ awserr.Error

// DeleteObjectMarshaler defines marshaler for DeleteObject operation
type DeleteObjectMarshaler struct {
	Input *types.DeleteObjectInput
}

// DescribeObjectMarshaler defines marshaler for DescribeObject operation
type DescribeObjectMarshaler struct {
	Input *types.DescribeObjectInput
}

// GetObjectMarshaler defines marshaler for GetObject operation
type GetObjectMarshaler struct {
	Input *types.GetObjectInput
}

// ListItemsMarshaler defines marshaler for ListItems operation
type ListItemsMarshaler struct {
	Input *types.ListItemsInput
}

// PutObjectMarshaler defines marshaler for PutObject operation
type PutObjectMarshaler struct {
	Input *types.PutObjectInput
}

func MarshalDeleteObjectInputShapeAWSREST(v *types.DeleteObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteObjectInputShapeAWSJSON(v *types.DeleteObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeObjectInputShapeAWSREST(v *types.DescribeObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeObjectInputShapeAWSJSON(v *types.DescribeObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetObjectInputShapeAWSREST(v *types.GetObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetObjectInputShapeAWSJSON(v *types.GetObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListItemsInputShapeAWSREST(v *types.ListItemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListItemsInputShapeAWSJSON(v *types.ListItemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutObjectInputShapeAWSREST(v *types.PutObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutObjectInputShapeAWSJSON(v *types.PutObjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m DeleteObjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteObjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteObjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteObjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteObject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeObjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeObjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeObjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeObjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeObject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetObjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetObjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetObjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetObjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetObject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListItemsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListItemsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListItemsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListItemsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListItems.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutObjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutObjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutObjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutObjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutObject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
