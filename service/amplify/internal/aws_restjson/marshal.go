// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/amplify/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateAppMarshaler defines marshaler for CreateApp operation
type CreateAppMarshaler struct {
	Input *types.CreateAppInput
}

// CreateBranchMarshaler defines marshaler for CreateBranch operation
type CreateBranchMarshaler struct {
	Input *types.CreateBranchInput
}

// CreateDeploymentMarshaler defines marshaler for CreateDeployment operation
type CreateDeploymentMarshaler struct {
	Input *types.CreateDeploymentInput
}

// CreateDomainAssociationMarshaler defines marshaler for CreateDomainAssociation operation
type CreateDomainAssociationMarshaler struct {
	Input *types.CreateDomainAssociationInput
}

// CreateWebhookMarshaler defines marshaler for CreateWebhook operation
type CreateWebhookMarshaler struct {
	Input *types.CreateWebhookInput
}

// DeleteAppMarshaler defines marshaler for DeleteApp operation
type DeleteAppMarshaler struct {
	Input *types.DeleteAppInput
}

// DeleteBranchMarshaler defines marshaler for DeleteBranch operation
type DeleteBranchMarshaler struct {
	Input *types.DeleteBranchInput
}

// DeleteDomainAssociationMarshaler defines marshaler for DeleteDomainAssociation operation
type DeleteDomainAssociationMarshaler struct {
	Input *types.DeleteDomainAssociationInput
}

// DeleteJobMarshaler defines marshaler for DeleteJob operation
type DeleteJobMarshaler struct {
	Input *types.DeleteJobInput
}

// DeleteWebhookMarshaler defines marshaler for DeleteWebhook operation
type DeleteWebhookMarshaler struct {
	Input *types.DeleteWebhookInput
}

// GenerateAccessLogsMarshaler defines marshaler for GenerateAccessLogs operation
type GenerateAccessLogsMarshaler struct {
	Input *types.GenerateAccessLogsInput
}

// GetAppMarshaler defines marshaler for GetApp operation
type GetAppMarshaler struct {
	Input *types.GetAppInput
}

// GetArtifactUrlMarshaler defines marshaler for GetArtifactUrl operation
type GetArtifactUrlMarshaler struct {
	Input *types.GetArtifactUrlInput
}

// GetBranchMarshaler defines marshaler for GetBranch operation
type GetBranchMarshaler struct {
	Input *types.GetBranchInput
}

// GetDomainAssociationMarshaler defines marshaler for GetDomainAssociation operation
type GetDomainAssociationMarshaler struct {
	Input *types.GetDomainAssociationInput
}

// GetJobMarshaler defines marshaler for GetJob operation
type GetJobMarshaler struct {
	Input *types.GetJobInput
}

// GetWebhookMarshaler defines marshaler for GetWebhook operation
type GetWebhookMarshaler struct {
	Input *types.GetWebhookInput
}

// ListAppsMarshaler defines marshaler for ListApps operation
type ListAppsMarshaler struct {
	Input *types.ListAppsInput
}

// ListArtifactsMarshaler defines marshaler for ListArtifacts operation
type ListArtifactsMarshaler struct {
	Input *types.ListArtifactsInput
}

// ListBranchesMarshaler defines marshaler for ListBranches operation
type ListBranchesMarshaler struct {
	Input *types.ListBranchesInput
}

// ListDomainAssociationsMarshaler defines marshaler for ListDomainAssociations operation
type ListDomainAssociationsMarshaler struct {
	Input *types.ListDomainAssociationsInput
}

// ListJobsMarshaler defines marshaler for ListJobs operation
type ListJobsMarshaler struct {
	Input *types.ListJobsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListWebhooksMarshaler defines marshaler for ListWebhooks operation
type ListWebhooksMarshaler struct {
	Input *types.ListWebhooksInput
}

// StartDeploymentMarshaler defines marshaler for StartDeployment operation
type StartDeploymentMarshaler struct {
	Input *types.StartDeploymentInput
}

// StartJobMarshaler defines marshaler for StartJob operation
type StartJobMarshaler struct {
	Input *types.StartJobInput
}

// StopJobMarshaler defines marshaler for StopJob operation
type StopJobMarshaler struct {
	Input *types.StopJobInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateAppMarshaler defines marshaler for UpdateApp operation
type UpdateAppMarshaler struct {
	Input *types.UpdateAppInput
}

// UpdateBranchMarshaler defines marshaler for UpdateBranch operation
type UpdateBranchMarshaler struct {
	Input *types.UpdateBranchInput
}

// UpdateDomainAssociationMarshaler defines marshaler for UpdateDomainAssociation operation
type UpdateDomainAssociationMarshaler struct {
	Input *types.UpdateDomainAssociationInput
}

// UpdateWebhookMarshaler defines marshaler for UpdateWebhook operation
type UpdateWebhookMarshaler struct {
	Input *types.UpdateWebhookInput
}

func MarshalCreateAppInputShapeAWSREST(v *types.CreateAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateAppInputShapeAWSJSON(v *types.CreateAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateBranchInputShapeAWSREST(v *types.CreateBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateBranchInputShapeAWSJSON(v *types.CreateBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeploymentInputShapeAWSREST(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeploymentInputShapeAWSJSON(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDomainAssociationInputShapeAWSREST(v *types.CreateDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDomainAssociationInputShapeAWSJSON(v *types.CreateDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateWebhookInputShapeAWSREST(v *types.CreateWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateWebhookInputShapeAWSJSON(v *types.CreateWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteAppInputShapeAWSREST(v *types.DeleteAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteAppInputShapeAWSJSON(v *types.DeleteAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBranchInputShapeAWSREST(v *types.DeleteBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBranchInputShapeAWSJSON(v *types.DeleteBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDomainAssociationInputShapeAWSREST(v *types.DeleteDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDomainAssociationInputShapeAWSJSON(v *types.DeleteDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteJobInputShapeAWSREST(v *types.DeleteJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteJobInputShapeAWSJSON(v *types.DeleteJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteWebhookInputShapeAWSREST(v *types.DeleteWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteWebhookInputShapeAWSJSON(v *types.DeleteWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGenerateAccessLogsInputShapeAWSREST(v *types.GenerateAccessLogsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGenerateAccessLogsInputShapeAWSJSON(v *types.GenerateAccessLogsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAppInputShapeAWSREST(v *types.GetAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAppInputShapeAWSJSON(v *types.GetAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetArtifactUrlInputShapeAWSREST(v *types.GetArtifactUrlInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetArtifactUrlInputShapeAWSJSON(v *types.GetArtifactUrlInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBranchInputShapeAWSREST(v *types.GetBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBranchInputShapeAWSJSON(v *types.GetBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDomainAssociationInputShapeAWSREST(v *types.GetDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDomainAssociationInputShapeAWSJSON(v *types.GetDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJobInputShapeAWSREST(v *types.GetJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJobInputShapeAWSJSON(v *types.GetJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetWebhookInputShapeAWSREST(v *types.GetWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetWebhookInputShapeAWSJSON(v *types.GetWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListAppsInputShapeAWSREST(v *types.ListAppsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListAppsInputShapeAWSJSON(v *types.ListAppsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListArtifactsInputShapeAWSREST(v *types.ListArtifactsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListArtifactsInputShapeAWSJSON(v *types.ListArtifactsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBranchesInputShapeAWSREST(v *types.ListBranchesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBranchesInputShapeAWSJSON(v *types.ListBranchesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDomainAssociationsInputShapeAWSREST(v *types.ListDomainAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDomainAssociationsInputShapeAWSJSON(v *types.ListDomainAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJobsInputShapeAWSREST(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJobsInputShapeAWSJSON(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListWebhooksInputShapeAWSREST(v *types.ListWebhooksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListWebhooksInputShapeAWSJSON(v *types.ListWebhooksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartDeploymentInputShapeAWSREST(v *types.StartDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartDeploymentInputShapeAWSJSON(v *types.StartDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartJobInputShapeAWSREST(v *types.StartJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartJobInputShapeAWSJSON(v *types.StartJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStopJobInputShapeAWSREST(v *types.StopJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStopJobInputShapeAWSJSON(v *types.StopJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateAppInputShapeAWSREST(v *types.UpdateAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateAppInputShapeAWSJSON(v *types.UpdateAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateBranchInputShapeAWSREST(v *types.UpdateBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateBranchInputShapeAWSJSON(v *types.UpdateBranchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDomainAssociationInputShapeAWSREST(v *types.UpdateDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDomainAssociationInputShapeAWSJSON(v *types.UpdateDomainAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateWebhookInputShapeAWSREST(v *types.UpdateWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateWebhookInputShapeAWSJSON(v *types.UpdateWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBranchInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDomainAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDomainAssociationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDomainAssociationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDomainAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDomainAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateWebhookInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBranchInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDomainAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDomainAssociationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDomainAssociationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDomainAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDomainAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteWebhookInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateAccessLogsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateAccessLogsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGenerateAccessLogsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateAccessLogsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateAccessLogs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetArtifactUrlMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetArtifactUrlInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetArtifactUrlInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetArtifactUrlMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetArtifactUrl.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBranchInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainAssociationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDomainAssociationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomainAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetWebhookInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAppsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAppsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListAppsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAppsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApps.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListArtifactsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListArtifactsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListArtifactsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListArtifactsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListArtifacts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBranchesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBranchesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBranchesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBranchesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBranches.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDomainAssociationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDomainAssociationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDomainAssociationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDomainAssociationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDomainAssociations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListWebhooksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListWebhooksInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListWebhooksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListWebhooksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListWebhooks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStopJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBranchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBranchInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateBranchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBranchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBranch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDomainAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDomainAssociationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDomainAssociationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDomainAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDomainAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateWebhookInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
