// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/cognitosync/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BulkPublishMarshaler defines marshaler for BulkPublish operation
type BulkPublishMarshaler struct {
	Input *types.BulkPublishInput
}

// DeleteDatasetMarshaler defines marshaler for DeleteDataset operation
type DeleteDatasetMarshaler struct {
	Input *types.DeleteDatasetInput
}

// DescribeDatasetMarshaler defines marshaler for DescribeDataset operation
type DescribeDatasetMarshaler struct {
	Input *types.DescribeDatasetInput
}

// DescribeIdentityPoolUsageMarshaler defines marshaler for DescribeIdentityPoolUsage operation
type DescribeIdentityPoolUsageMarshaler struct {
	Input *types.DescribeIdentityPoolUsageInput
}

// DescribeIdentityUsageMarshaler defines marshaler for DescribeIdentityUsage operation
type DescribeIdentityUsageMarshaler struct {
	Input *types.DescribeIdentityUsageInput
}

// GetBulkPublishDetailsMarshaler defines marshaler for GetBulkPublishDetails operation
type GetBulkPublishDetailsMarshaler struct {
	Input *types.GetBulkPublishDetailsInput
}

// GetCognitoEventsMarshaler defines marshaler for GetCognitoEvents operation
type GetCognitoEventsMarshaler struct {
	Input *types.GetCognitoEventsInput
}

// GetIdentityPoolConfigurationMarshaler defines marshaler for GetIdentityPoolConfiguration operation
type GetIdentityPoolConfigurationMarshaler struct {
	Input *types.GetIdentityPoolConfigurationInput
}

// ListDatasetsMarshaler defines marshaler for ListDatasets operation
type ListDatasetsMarshaler struct {
	Input *types.ListDatasetsInput
}

// ListIdentityPoolUsageMarshaler defines marshaler for ListIdentityPoolUsage operation
type ListIdentityPoolUsageMarshaler struct {
	Input *types.ListIdentityPoolUsageInput
}

// ListRecordsMarshaler defines marshaler for ListRecords operation
type ListRecordsMarshaler struct {
	Input *types.ListRecordsInput
}

// RegisterDeviceMarshaler defines marshaler for RegisterDevice operation
type RegisterDeviceMarshaler struct {
	Input *types.RegisterDeviceInput
}

// SetCognitoEventsMarshaler defines marshaler for SetCognitoEvents operation
type SetCognitoEventsMarshaler struct {
	Input *types.SetCognitoEventsInput
}

// SetIdentityPoolConfigurationMarshaler defines marshaler for SetIdentityPoolConfiguration operation
type SetIdentityPoolConfigurationMarshaler struct {
	Input *types.SetIdentityPoolConfigurationInput
}

// SubscribeToDatasetMarshaler defines marshaler for SubscribeToDataset operation
type SubscribeToDatasetMarshaler struct {
	Input *types.SubscribeToDatasetInput
}

// UnsubscribeFromDatasetMarshaler defines marshaler for UnsubscribeFromDataset operation
type UnsubscribeFromDatasetMarshaler struct {
	Input *types.UnsubscribeFromDatasetInput
}

// UpdateRecordsMarshaler defines marshaler for UpdateRecords operation
type UpdateRecordsMarshaler struct {
	Input *types.UpdateRecordsInput
}

func MarshalBulkPublishInputShapeAWSREST(v *types.BulkPublishInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBulkPublishInputShapeAWSJSON(v *types.BulkPublishInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDatasetInputShapeAWSREST(v *types.DeleteDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDatasetInputShapeAWSJSON(v *types.DeleteDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeDatasetInputShapeAWSREST(v *types.DescribeDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeDatasetInputShapeAWSJSON(v *types.DescribeDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeIdentityPoolUsageInputShapeAWSREST(v *types.DescribeIdentityPoolUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeIdentityPoolUsageInputShapeAWSJSON(v *types.DescribeIdentityPoolUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeIdentityUsageInputShapeAWSREST(v *types.DescribeIdentityUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeIdentityUsageInputShapeAWSJSON(v *types.DescribeIdentityUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBulkPublishDetailsInputShapeAWSREST(v *types.GetBulkPublishDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBulkPublishDetailsInputShapeAWSJSON(v *types.GetBulkPublishDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCognitoEventsInputShapeAWSREST(v *types.GetCognitoEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCognitoEventsInputShapeAWSJSON(v *types.GetCognitoEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIdentityPoolConfigurationInputShapeAWSREST(v *types.GetIdentityPoolConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIdentityPoolConfigurationInputShapeAWSJSON(v *types.GetIdentityPoolConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDatasetsInputShapeAWSREST(v *types.ListDatasetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDatasetsInputShapeAWSJSON(v *types.ListDatasetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListIdentityPoolUsageInputShapeAWSREST(v *types.ListIdentityPoolUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListIdentityPoolUsageInputShapeAWSJSON(v *types.ListIdentityPoolUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListRecordsInputShapeAWSREST(v *types.ListRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListRecordsInputShapeAWSJSON(v *types.ListRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalRegisterDeviceInputShapeAWSREST(v *types.RegisterDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalRegisterDeviceInputShapeAWSJSON(v *types.RegisterDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSetCognitoEventsInputShapeAWSREST(v *types.SetCognitoEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSetCognitoEventsInputShapeAWSJSON(v *types.SetCognitoEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSetIdentityPoolConfigurationInputShapeAWSREST(v *types.SetIdentityPoolConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSetIdentityPoolConfigurationInputShapeAWSJSON(v *types.SetIdentityPoolConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSubscribeToDatasetInputShapeAWSREST(v *types.SubscribeToDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSubscribeToDatasetInputShapeAWSJSON(v *types.SubscribeToDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUnsubscribeFromDatasetInputShapeAWSREST(v *types.UnsubscribeFromDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUnsubscribeFromDatasetInputShapeAWSJSON(v *types.UnsubscribeFromDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateRecordsInputShapeAWSREST(v *types.UpdateRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateRecordsInputShapeAWSJSON(v *types.UpdateRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m BulkPublishMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBulkPublishInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBulkPublishInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BulkPublishMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BulkPublish.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDatasetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeIdentityPoolUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeIdentityPoolUsageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeIdentityPoolUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeIdentityPoolUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeIdentityPoolUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeIdentityUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeIdentityUsageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeIdentityUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeIdentityUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeIdentityUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBulkPublishDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBulkPublishDetailsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBulkPublishDetailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBulkPublishDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBulkPublishDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCognitoEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCognitoEventsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCognitoEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCognitoEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCognitoEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIdentityPoolConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIdentityPoolConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIdentityPoolConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIdentityPoolConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIdentityPoolConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDatasetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListIdentityPoolUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListIdentityPoolUsageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListIdentityPoolUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListIdentityPoolUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListIdentityPoolUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRecordsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRecordsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListRecordsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRecordsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRecords.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterDeviceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalRegisterDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetCognitoEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetCognitoEventsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSetCognitoEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetCognitoEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetCognitoEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetIdentityPoolConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetIdentityPoolConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSetIdentityPoolConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetIdentityPoolConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetIdentityPoolConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SubscribeToDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSubscribeToDatasetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSubscribeToDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SubscribeToDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SubscribeToDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnsubscribeFromDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnsubscribeFromDatasetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUnsubscribeFromDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnsubscribeFromDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnsubscribeFromDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRecordsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRecordsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateRecordsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRecordsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRecords.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
