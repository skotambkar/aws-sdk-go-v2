// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/snowball/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelClusterMarshaler defines marshaler for CancelCluster operation
type CancelClusterMarshaler struct {
	Input *types.CancelClusterInput
}

// CancelJobMarshaler defines marshaler for CancelJob operation
type CancelJobMarshaler struct {
	Input *types.CancelJobInput
}

// CreateAddressMarshaler defines marshaler for CreateAddress operation
type CreateAddressMarshaler struct {
	Input *types.CreateAddressInput
}

// CreateClusterMarshaler defines marshaler for CreateCluster operation
type CreateClusterMarshaler struct {
	Input *types.CreateClusterInput
}

// CreateJobMarshaler defines marshaler for CreateJob operation
type CreateJobMarshaler struct {
	Input *types.CreateJobInput
}

// DescribeAddressMarshaler defines marshaler for DescribeAddress operation
type DescribeAddressMarshaler struct {
	Input *types.DescribeAddressInput
}

// DescribeAddressesMarshaler defines marshaler for DescribeAddresses operation
type DescribeAddressesMarshaler struct {
	Input *types.DescribeAddressesInput
}

// DescribeClusterMarshaler defines marshaler for DescribeCluster operation
type DescribeClusterMarshaler struct {
	Input *types.DescribeClusterInput
}

// DescribeJobMarshaler defines marshaler for DescribeJob operation
type DescribeJobMarshaler struct {
	Input *types.DescribeJobInput
}

// GetJobManifestMarshaler defines marshaler for GetJobManifest operation
type GetJobManifestMarshaler struct {
	Input *types.GetJobManifestInput
}

// GetJobUnlockCodeMarshaler defines marshaler for GetJobUnlockCode operation
type GetJobUnlockCodeMarshaler struct {
	Input *types.GetJobUnlockCodeInput
}

// GetSnowballUsageMarshaler defines marshaler for GetSnowballUsage operation
type GetSnowballUsageMarshaler struct {
	Input *types.GetSnowballUsageInput
}

// GetSoftwareUpdatesMarshaler defines marshaler for GetSoftwareUpdates operation
type GetSoftwareUpdatesMarshaler struct {
	Input *types.GetSoftwareUpdatesInput
}

// ListClusterJobsMarshaler defines marshaler for ListClusterJobs operation
type ListClusterJobsMarshaler struct {
	Input *types.ListClusterJobsInput
}

// ListClustersMarshaler defines marshaler for ListClusters operation
type ListClustersMarshaler struct {
	Input *types.ListClustersInput
}

// ListCompatibleImagesMarshaler defines marshaler for ListCompatibleImages operation
type ListCompatibleImagesMarshaler struct {
	Input *types.ListCompatibleImagesInput
}

// ListJobsMarshaler defines marshaler for ListJobs operation
type ListJobsMarshaler struct {
	Input *types.ListJobsInput
}

// UpdateClusterMarshaler defines marshaler for UpdateCluster operation
type UpdateClusterMarshaler struct {
	Input *types.UpdateClusterInput
}

// UpdateJobMarshaler defines marshaler for UpdateJob operation
type UpdateJobMarshaler struct {
	Input *types.UpdateJobInput
}

func MarshalCancelClusterInputShapeAWSJSON(v *types.CancelClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCancelJobInputShapeAWSJSON(v *types.CancelJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateAddressInputShapeAWSJSON(v *types.CreateAddressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateClusterInputShapeAWSJSON(v *types.CreateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateJobInputShapeAWSJSON(v *types.CreateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAddressInputShapeAWSJSON(v *types.DescribeAddressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAddressesInputShapeAWSJSON(v *types.DescribeAddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeClusterInputShapeAWSJSON(v *types.DescribeClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeJobInputShapeAWSJSON(v *types.DescribeJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetJobManifestInputShapeAWSJSON(v *types.GetJobManifestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetJobUnlockCodeInputShapeAWSJSON(v *types.GetJobUnlockCodeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetSnowballUsageInputShapeAWSJSON(v *types.GetSnowballUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetSoftwareUpdatesInputShapeAWSJSON(v *types.GetSoftwareUpdatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListClusterJobsInputShapeAWSJSON(v *types.ListClusterJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListClustersInputShapeAWSJSON(v *types.ListClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListCompatibleImagesInputShapeAWSJSON(v *types.ListCompatibleImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListJobsInputShapeAWSJSON(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateClusterInputShapeAWSJSON(v *types.UpdateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateJobInputShapeAWSJSON(v *types.UpdateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CancelClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAddressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAddressInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAddressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAddress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAddressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAddressInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAddressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAddress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAddressesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAddresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobManifestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobManifestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobManifestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJobManifest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobUnlockCodeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobUnlockCodeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobUnlockCodeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJobUnlockCode.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSnowballUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSnowballUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSnowballUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSnowballUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSoftwareUpdatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSoftwareUpdatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSoftwareUpdatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSoftwareUpdates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListClusterJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListClusterJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListClusterJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListClusterJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListClustersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCompatibleImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCompatibleImagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCompatibleImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCompatibleImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
