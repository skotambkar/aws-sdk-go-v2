// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/pinpoint/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateAppMarshaler defines marshaler for CreateApp operation
type CreateAppMarshaler struct {
	Input *types.CreateAppInput
}

// CreateCampaignMarshaler defines marshaler for CreateCampaign operation
type CreateCampaignMarshaler struct {
	Input *types.CreateCampaignInput
}

// CreateEmailTemplateMarshaler defines marshaler for CreateEmailTemplate operation
type CreateEmailTemplateMarshaler struct {
	Input *types.CreateEmailTemplateInput
}

// CreateExportJobMarshaler defines marshaler for CreateExportJob operation
type CreateExportJobMarshaler struct {
	Input *types.CreateExportJobInput
}

// CreateImportJobMarshaler defines marshaler for CreateImportJob operation
type CreateImportJobMarshaler struct {
	Input *types.CreateImportJobInput
}

// CreateJourneyMarshaler defines marshaler for CreateJourney operation
type CreateJourneyMarshaler struct {
	Input *types.CreateJourneyInput
}

// CreatePushTemplateMarshaler defines marshaler for CreatePushTemplate operation
type CreatePushTemplateMarshaler struct {
	Input *types.CreatePushTemplateInput
}

// CreateSegmentMarshaler defines marshaler for CreateSegment operation
type CreateSegmentMarshaler struct {
	Input *types.CreateSegmentInput
}

// CreateSmsTemplateMarshaler defines marshaler for CreateSmsTemplate operation
type CreateSmsTemplateMarshaler struct {
	Input *types.CreateSmsTemplateInput
}

// CreateVoiceTemplateMarshaler defines marshaler for CreateVoiceTemplate operation
type CreateVoiceTemplateMarshaler struct {
	Input *types.CreateVoiceTemplateInput
}

// DeleteAdmChannelMarshaler defines marshaler for DeleteAdmChannel operation
type DeleteAdmChannelMarshaler struct {
	Input *types.DeleteAdmChannelInput
}

// DeleteApnsChannelMarshaler defines marshaler for DeleteApnsChannel operation
type DeleteApnsChannelMarshaler struct {
	Input *types.DeleteApnsChannelInput
}

// DeleteApnsSandboxChannelMarshaler defines marshaler for DeleteApnsSandboxChannel operation
type DeleteApnsSandboxChannelMarshaler struct {
	Input *types.DeleteApnsSandboxChannelInput
}

// DeleteApnsVoipChannelMarshaler defines marshaler for DeleteApnsVoipChannel operation
type DeleteApnsVoipChannelMarshaler struct {
	Input *types.DeleteApnsVoipChannelInput
}

// DeleteApnsVoipSandboxChannelMarshaler defines marshaler for DeleteApnsVoipSandboxChannel operation
type DeleteApnsVoipSandboxChannelMarshaler struct {
	Input *types.DeleteApnsVoipSandboxChannelInput
}

// DeleteAppMarshaler defines marshaler for DeleteApp operation
type DeleteAppMarshaler struct {
	Input *types.DeleteAppInput
}

// DeleteBaiduChannelMarshaler defines marshaler for DeleteBaiduChannel operation
type DeleteBaiduChannelMarshaler struct {
	Input *types.DeleteBaiduChannelInput
}

// DeleteCampaignMarshaler defines marshaler for DeleteCampaign operation
type DeleteCampaignMarshaler struct {
	Input *types.DeleteCampaignInput
}

// DeleteEmailChannelMarshaler defines marshaler for DeleteEmailChannel operation
type DeleteEmailChannelMarshaler struct {
	Input *types.DeleteEmailChannelInput
}

// DeleteEmailTemplateMarshaler defines marshaler for DeleteEmailTemplate operation
type DeleteEmailTemplateMarshaler struct {
	Input *types.DeleteEmailTemplateInput
}

// DeleteEndpointMarshaler defines marshaler for DeleteEndpoint operation
type DeleteEndpointMarshaler struct {
	Input *types.DeleteEndpointInput
}

// DeleteEventStreamMarshaler defines marshaler for DeleteEventStream operation
type DeleteEventStreamMarshaler struct {
	Input *types.DeleteEventStreamInput
}

// DeleteGcmChannelMarshaler defines marshaler for DeleteGcmChannel operation
type DeleteGcmChannelMarshaler struct {
	Input *types.DeleteGcmChannelInput
}

// DeleteJourneyMarshaler defines marshaler for DeleteJourney operation
type DeleteJourneyMarshaler struct {
	Input *types.DeleteJourneyInput
}

// DeletePushTemplateMarshaler defines marshaler for DeletePushTemplate operation
type DeletePushTemplateMarshaler struct {
	Input *types.DeletePushTemplateInput
}

// DeleteSegmentMarshaler defines marshaler for DeleteSegment operation
type DeleteSegmentMarshaler struct {
	Input *types.DeleteSegmentInput
}

// DeleteSmsChannelMarshaler defines marshaler for DeleteSmsChannel operation
type DeleteSmsChannelMarshaler struct {
	Input *types.DeleteSmsChannelInput
}

// DeleteSmsTemplateMarshaler defines marshaler for DeleteSmsTemplate operation
type DeleteSmsTemplateMarshaler struct {
	Input *types.DeleteSmsTemplateInput
}

// DeleteUserEndpointsMarshaler defines marshaler for DeleteUserEndpoints operation
type DeleteUserEndpointsMarshaler struct {
	Input *types.DeleteUserEndpointsInput
}

// DeleteVoiceChannelMarshaler defines marshaler for DeleteVoiceChannel operation
type DeleteVoiceChannelMarshaler struct {
	Input *types.DeleteVoiceChannelInput
}

// DeleteVoiceTemplateMarshaler defines marshaler for DeleteVoiceTemplate operation
type DeleteVoiceTemplateMarshaler struct {
	Input *types.DeleteVoiceTemplateInput
}

// GetAdmChannelMarshaler defines marshaler for GetAdmChannel operation
type GetAdmChannelMarshaler struct {
	Input *types.GetAdmChannelInput
}

// GetApnsChannelMarshaler defines marshaler for GetApnsChannel operation
type GetApnsChannelMarshaler struct {
	Input *types.GetApnsChannelInput
}

// GetApnsSandboxChannelMarshaler defines marshaler for GetApnsSandboxChannel operation
type GetApnsSandboxChannelMarshaler struct {
	Input *types.GetApnsSandboxChannelInput
}

// GetApnsVoipChannelMarshaler defines marshaler for GetApnsVoipChannel operation
type GetApnsVoipChannelMarshaler struct {
	Input *types.GetApnsVoipChannelInput
}

// GetApnsVoipSandboxChannelMarshaler defines marshaler for GetApnsVoipSandboxChannel operation
type GetApnsVoipSandboxChannelMarshaler struct {
	Input *types.GetApnsVoipSandboxChannelInput
}

// GetAppMarshaler defines marshaler for GetApp operation
type GetAppMarshaler struct {
	Input *types.GetAppInput
}

// GetApplicationDateRangeKpiMarshaler defines marshaler for GetApplicationDateRangeKpi operation
type GetApplicationDateRangeKpiMarshaler struct {
	Input *types.GetApplicationDateRangeKpiInput
}

// GetApplicationSettingsMarshaler defines marshaler for GetApplicationSettings operation
type GetApplicationSettingsMarshaler struct {
	Input *types.GetApplicationSettingsInput
}

// GetAppsMarshaler defines marshaler for GetApps operation
type GetAppsMarshaler struct {
	Input *types.GetAppsInput
}

// GetBaiduChannelMarshaler defines marshaler for GetBaiduChannel operation
type GetBaiduChannelMarshaler struct {
	Input *types.GetBaiduChannelInput
}

// GetCampaignMarshaler defines marshaler for GetCampaign operation
type GetCampaignMarshaler struct {
	Input *types.GetCampaignInput
}

// GetCampaignActivitiesMarshaler defines marshaler for GetCampaignActivities operation
type GetCampaignActivitiesMarshaler struct {
	Input *types.GetCampaignActivitiesInput
}

// GetCampaignDateRangeKpiMarshaler defines marshaler for GetCampaignDateRangeKpi operation
type GetCampaignDateRangeKpiMarshaler struct {
	Input *types.GetCampaignDateRangeKpiInput
}

// GetCampaignVersionMarshaler defines marshaler for GetCampaignVersion operation
type GetCampaignVersionMarshaler struct {
	Input *types.GetCampaignVersionInput
}

// GetCampaignVersionsMarshaler defines marshaler for GetCampaignVersions operation
type GetCampaignVersionsMarshaler struct {
	Input *types.GetCampaignVersionsInput
}

// GetCampaignsMarshaler defines marshaler for GetCampaigns operation
type GetCampaignsMarshaler struct {
	Input *types.GetCampaignsInput
}

// GetChannelsMarshaler defines marshaler for GetChannels operation
type GetChannelsMarshaler struct {
	Input *types.GetChannelsInput
}

// GetEmailChannelMarshaler defines marshaler for GetEmailChannel operation
type GetEmailChannelMarshaler struct {
	Input *types.GetEmailChannelInput
}

// GetEmailTemplateMarshaler defines marshaler for GetEmailTemplate operation
type GetEmailTemplateMarshaler struct {
	Input *types.GetEmailTemplateInput
}

// GetEndpointMarshaler defines marshaler for GetEndpoint operation
type GetEndpointMarshaler struct {
	Input *types.GetEndpointInput
}

// GetEventStreamMarshaler defines marshaler for GetEventStream operation
type GetEventStreamMarshaler struct {
	Input *types.GetEventStreamInput
}

// GetExportJobMarshaler defines marshaler for GetExportJob operation
type GetExportJobMarshaler struct {
	Input *types.GetExportJobInput
}

// GetExportJobsMarshaler defines marshaler for GetExportJobs operation
type GetExportJobsMarshaler struct {
	Input *types.GetExportJobsInput
}

// GetGcmChannelMarshaler defines marshaler for GetGcmChannel operation
type GetGcmChannelMarshaler struct {
	Input *types.GetGcmChannelInput
}

// GetImportJobMarshaler defines marshaler for GetImportJob operation
type GetImportJobMarshaler struct {
	Input *types.GetImportJobInput
}

// GetImportJobsMarshaler defines marshaler for GetImportJobs operation
type GetImportJobsMarshaler struct {
	Input *types.GetImportJobsInput
}

// GetJourneyMarshaler defines marshaler for GetJourney operation
type GetJourneyMarshaler struct {
	Input *types.GetJourneyInput
}

// GetJourneyDateRangeKpiMarshaler defines marshaler for GetJourneyDateRangeKpi operation
type GetJourneyDateRangeKpiMarshaler struct {
	Input *types.GetJourneyDateRangeKpiInput
}

// GetJourneyExecutionActivityMetricsMarshaler defines marshaler for GetJourneyExecutionActivityMetrics operation
type GetJourneyExecutionActivityMetricsMarshaler struct {
	Input *types.GetJourneyExecutionActivityMetricsInput
}

// GetJourneyExecutionMetricsMarshaler defines marshaler for GetJourneyExecutionMetrics operation
type GetJourneyExecutionMetricsMarshaler struct {
	Input *types.GetJourneyExecutionMetricsInput
}

// GetPushTemplateMarshaler defines marshaler for GetPushTemplate operation
type GetPushTemplateMarshaler struct {
	Input *types.GetPushTemplateInput
}

// GetSegmentMarshaler defines marshaler for GetSegment operation
type GetSegmentMarshaler struct {
	Input *types.GetSegmentInput
}

// GetSegmentExportJobsMarshaler defines marshaler for GetSegmentExportJobs operation
type GetSegmentExportJobsMarshaler struct {
	Input *types.GetSegmentExportJobsInput
}

// GetSegmentImportJobsMarshaler defines marshaler for GetSegmentImportJobs operation
type GetSegmentImportJobsMarshaler struct {
	Input *types.GetSegmentImportJobsInput
}

// GetSegmentVersionMarshaler defines marshaler for GetSegmentVersion operation
type GetSegmentVersionMarshaler struct {
	Input *types.GetSegmentVersionInput
}

// GetSegmentVersionsMarshaler defines marshaler for GetSegmentVersions operation
type GetSegmentVersionsMarshaler struct {
	Input *types.GetSegmentVersionsInput
}

// GetSegmentsMarshaler defines marshaler for GetSegments operation
type GetSegmentsMarshaler struct {
	Input *types.GetSegmentsInput
}

// GetSmsChannelMarshaler defines marshaler for GetSmsChannel operation
type GetSmsChannelMarshaler struct {
	Input *types.GetSmsChannelInput
}

// GetSmsTemplateMarshaler defines marshaler for GetSmsTemplate operation
type GetSmsTemplateMarshaler struct {
	Input *types.GetSmsTemplateInput
}

// GetUserEndpointsMarshaler defines marshaler for GetUserEndpoints operation
type GetUserEndpointsMarshaler struct {
	Input *types.GetUserEndpointsInput
}

// GetVoiceChannelMarshaler defines marshaler for GetVoiceChannel operation
type GetVoiceChannelMarshaler struct {
	Input *types.GetVoiceChannelInput
}

// GetVoiceTemplateMarshaler defines marshaler for GetVoiceTemplate operation
type GetVoiceTemplateMarshaler struct {
	Input *types.GetVoiceTemplateInput
}

// ListJourneysMarshaler defines marshaler for ListJourneys operation
type ListJourneysMarshaler struct {
	Input *types.ListJourneysInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTemplatesMarshaler defines marshaler for ListTemplates operation
type ListTemplatesMarshaler struct {
	Input *types.ListTemplatesInput
}

// PhoneNumberValidateMarshaler defines marshaler for PhoneNumberValidate operation
type PhoneNumberValidateMarshaler struct {
	Input *types.PhoneNumberValidateInput
}

// PutEventStreamMarshaler defines marshaler for PutEventStream operation
type PutEventStreamMarshaler struct {
	Input *types.PutEventStreamInput
}

// PutEventsMarshaler defines marshaler for PutEvents operation
type PutEventsMarshaler struct {
	Input *types.PutEventsInput
}

// RemoveAttributesMarshaler defines marshaler for RemoveAttributes operation
type RemoveAttributesMarshaler struct {
	Input *types.RemoveAttributesInput
}

// SendMessagesMarshaler defines marshaler for SendMessages operation
type SendMessagesMarshaler struct {
	Input *types.SendMessagesInput
}

// SendUsersMessagesMarshaler defines marshaler for SendUsersMessages operation
type SendUsersMessagesMarshaler struct {
	Input *types.SendUsersMessagesInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateAdmChannelMarshaler defines marshaler for UpdateAdmChannel operation
type UpdateAdmChannelMarshaler struct {
	Input *types.UpdateAdmChannelInput
}

// UpdateApnsChannelMarshaler defines marshaler for UpdateApnsChannel operation
type UpdateApnsChannelMarshaler struct {
	Input *types.UpdateApnsChannelInput
}

// UpdateApnsSandboxChannelMarshaler defines marshaler for UpdateApnsSandboxChannel operation
type UpdateApnsSandboxChannelMarshaler struct {
	Input *types.UpdateApnsSandboxChannelInput
}

// UpdateApnsVoipChannelMarshaler defines marshaler for UpdateApnsVoipChannel operation
type UpdateApnsVoipChannelMarshaler struct {
	Input *types.UpdateApnsVoipChannelInput
}

// UpdateApnsVoipSandboxChannelMarshaler defines marshaler for UpdateApnsVoipSandboxChannel operation
type UpdateApnsVoipSandboxChannelMarshaler struct {
	Input *types.UpdateApnsVoipSandboxChannelInput
}

// UpdateApplicationSettingsMarshaler defines marshaler for UpdateApplicationSettings operation
type UpdateApplicationSettingsMarshaler struct {
	Input *types.UpdateApplicationSettingsInput
}

// UpdateBaiduChannelMarshaler defines marshaler for UpdateBaiduChannel operation
type UpdateBaiduChannelMarshaler struct {
	Input *types.UpdateBaiduChannelInput
}

// UpdateCampaignMarshaler defines marshaler for UpdateCampaign operation
type UpdateCampaignMarshaler struct {
	Input *types.UpdateCampaignInput
}

// UpdateEmailChannelMarshaler defines marshaler for UpdateEmailChannel operation
type UpdateEmailChannelMarshaler struct {
	Input *types.UpdateEmailChannelInput
}

// UpdateEmailTemplateMarshaler defines marshaler for UpdateEmailTemplate operation
type UpdateEmailTemplateMarshaler struct {
	Input *types.UpdateEmailTemplateInput
}

// UpdateEndpointMarshaler defines marshaler for UpdateEndpoint operation
type UpdateEndpointMarshaler struct {
	Input *types.UpdateEndpointInput
}

// UpdateEndpointsBatchMarshaler defines marshaler for UpdateEndpointsBatch operation
type UpdateEndpointsBatchMarshaler struct {
	Input *types.UpdateEndpointsBatchInput
}

// UpdateGcmChannelMarshaler defines marshaler for UpdateGcmChannel operation
type UpdateGcmChannelMarshaler struct {
	Input *types.UpdateGcmChannelInput
}

// UpdateJourneyMarshaler defines marshaler for UpdateJourney operation
type UpdateJourneyMarshaler struct {
	Input *types.UpdateJourneyInput
}

// UpdateJourneyStateMarshaler defines marshaler for UpdateJourneyState operation
type UpdateJourneyStateMarshaler struct {
	Input *types.UpdateJourneyStateInput
}

// UpdatePushTemplateMarshaler defines marshaler for UpdatePushTemplate operation
type UpdatePushTemplateMarshaler struct {
	Input *types.UpdatePushTemplateInput
}

// UpdateSegmentMarshaler defines marshaler for UpdateSegment operation
type UpdateSegmentMarshaler struct {
	Input *types.UpdateSegmentInput
}

// UpdateSmsChannelMarshaler defines marshaler for UpdateSmsChannel operation
type UpdateSmsChannelMarshaler struct {
	Input *types.UpdateSmsChannelInput
}

// UpdateSmsTemplateMarshaler defines marshaler for UpdateSmsTemplate operation
type UpdateSmsTemplateMarshaler struct {
	Input *types.UpdateSmsTemplateInput
}

// UpdateVoiceChannelMarshaler defines marshaler for UpdateVoiceChannel operation
type UpdateVoiceChannelMarshaler struct {
	Input *types.UpdateVoiceChannelInput
}

// UpdateVoiceTemplateMarshaler defines marshaler for UpdateVoiceTemplate operation
type UpdateVoiceTemplateMarshaler struct {
	Input *types.UpdateVoiceTemplateInput
}

func MarshalCreateAppInputShapeAWSREST(v *types.CreateAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateAppInputShapeAWSJSON(v *types.CreateAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateCampaignInputShapeAWSREST(v *types.CreateCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateCampaignInputShapeAWSJSON(v *types.CreateCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateEmailTemplateInputShapeAWSREST(v *types.CreateEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateEmailTemplateInputShapeAWSJSON(v *types.CreateEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateExportJobInputShapeAWSREST(v *types.CreateExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateExportJobInputShapeAWSJSON(v *types.CreateExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateImportJobInputShapeAWSREST(v *types.CreateImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateImportJobInputShapeAWSJSON(v *types.CreateImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateJourneyInputShapeAWSREST(v *types.CreateJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateJourneyInputShapeAWSJSON(v *types.CreateJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreatePushTemplateInputShapeAWSREST(v *types.CreatePushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreatePushTemplateInputShapeAWSJSON(v *types.CreatePushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSegmentInputShapeAWSREST(v *types.CreateSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSegmentInputShapeAWSJSON(v *types.CreateSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSmsTemplateInputShapeAWSREST(v *types.CreateSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSmsTemplateInputShapeAWSJSON(v *types.CreateSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateVoiceTemplateInputShapeAWSREST(v *types.CreateVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateVoiceTemplateInputShapeAWSJSON(v *types.CreateVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteAdmChannelInputShapeAWSREST(v *types.DeleteAdmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteAdmChannelInputShapeAWSJSON(v *types.DeleteAdmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteApnsChannelInputShapeAWSREST(v *types.DeleteApnsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteApnsChannelInputShapeAWSJSON(v *types.DeleteApnsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteApnsSandboxChannelInputShapeAWSREST(v *types.DeleteApnsSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteApnsSandboxChannelInputShapeAWSJSON(v *types.DeleteApnsSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteApnsVoipChannelInputShapeAWSREST(v *types.DeleteApnsVoipChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteApnsVoipChannelInputShapeAWSJSON(v *types.DeleteApnsVoipChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteApnsVoipSandboxChannelInputShapeAWSREST(v *types.DeleteApnsVoipSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteApnsVoipSandboxChannelInputShapeAWSJSON(v *types.DeleteApnsVoipSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteAppInputShapeAWSREST(v *types.DeleteAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteAppInputShapeAWSJSON(v *types.DeleteAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBaiduChannelInputShapeAWSREST(v *types.DeleteBaiduChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBaiduChannelInputShapeAWSJSON(v *types.DeleteBaiduChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteCampaignInputShapeAWSREST(v *types.DeleteCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteCampaignInputShapeAWSJSON(v *types.DeleteCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteEmailChannelInputShapeAWSREST(v *types.DeleteEmailChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteEmailChannelInputShapeAWSJSON(v *types.DeleteEmailChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteEmailTemplateInputShapeAWSREST(v *types.DeleteEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteEmailTemplateInputShapeAWSJSON(v *types.DeleteEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteEndpointInputShapeAWSREST(v *types.DeleteEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteEndpointInputShapeAWSJSON(v *types.DeleteEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteEventStreamInputShapeAWSREST(v *types.DeleteEventStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteEventStreamInputShapeAWSJSON(v *types.DeleteEventStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteGcmChannelInputShapeAWSREST(v *types.DeleteGcmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteGcmChannelInputShapeAWSJSON(v *types.DeleteGcmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteJourneyInputShapeAWSREST(v *types.DeleteJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteJourneyInputShapeAWSJSON(v *types.DeleteJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeletePushTemplateInputShapeAWSREST(v *types.DeletePushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeletePushTemplateInputShapeAWSJSON(v *types.DeletePushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSegmentInputShapeAWSREST(v *types.DeleteSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSegmentInputShapeAWSJSON(v *types.DeleteSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSmsChannelInputShapeAWSREST(v *types.DeleteSmsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSmsChannelInputShapeAWSJSON(v *types.DeleteSmsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSmsTemplateInputShapeAWSREST(v *types.DeleteSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSmsTemplateInputShapeAWSJSON(v *types.DeleteSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteUserEndpointsInputShapeAWSREST(v *types.DeleteUserEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteUserEndpointsInputShapeAWSJSON(v *types.DeleteUserEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteVoiceChannelInputShapeAWSREST(v *types.DeleteVoiceChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteVoiceChannelInputShapeAWSJSON(v *types.DeleteVoiceChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteVoiceTemplateInputShapeAWSREST(v *types.DeleteVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteVoiceTemplateInputShapeAWSJSON(v *types.DeleteVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAdmChannelInputShapeAWSREST(v *types.GetAdmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAdmChannelInputShapeAWSJSON(v *types.GetAdmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApnsChannelInputShapeAWSREST(v *types.GetApnsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApnsChannelInputShapeAWSJSON(v *types.GetApnsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApnsSandboxChannelInputShapeAWSREST(v *types.GetApnsSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApnsSandboxChannelInputShapeAWSJSON(v *types.GetApnsSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApnsVoipChannelInputShapeAWSREST(v *types.GetApnsVoipChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApnsVoipChannelInputShapeAWSJSON(v *types.GetApnsVoipChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApnsVoipSandboxChannelInputShapeAWSREST(v *types.GetApnsVoipSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApnsVoipSandboxChannelInputShapeAWSJSON(v *types.GetApnsVoipSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAppInputShapeAWSREST(v *types.GetAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAppInputShapeAWSJSON(v *types.GetAppInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApplicationDateRangeKpiInputShapeAWSREST(v *types.GetApplicationDateRangeKpiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApplicationDateRangeKpiInputShapeAWSJSON(v *types.GetApplicationDateRangeKpiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApplicationSettingsInputShapeAWSREST(v *types.GetApplicationSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApplicationSettingsInputShapeAWSJSON(v *types.GetApplicationSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAppsInputShapeAWSREST(v *types.GetAppsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAppsInputShapeAWSJSON(v *types.GetAppsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBaiduChannelInputShapeAWSREST(v *types.GetBaiduChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBaiduChannelInputShapeAWSJSON(v *types.GetBaiduChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCampaignInputShapeAWSREST(v *types.GetCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCampaignInputShapeAWSJSON(v *types.GetCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCampaignActivitiesInputShapeAWSREST(v *types.GetCampaignActivitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCampaignActivitiesInputShapeAWSJSON(v *types.GetCampaignActivitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCampaignDateRangeKpiInputShapeAWSREST(v *types.GetCampaignDateRangeKpiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCampaignDateRangeKpiInputShapeAWSJSON(v *types.GetCampaignDateRangeKpiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCampaignVersionInputShapeAWSREST(v *types.GetCampaignVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCampaignVersionInputShapeAWSJSON(v *types.GetCampaignVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCampaignVersionsInputShapeAWSREST(v *types.GetCampaignVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCampaignVersionsInputShapeAWSJSON(v *types.GetCampaignVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCampaignsInputShapeAWSREST(v *types.GetCampaignsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCampaignsInputShapeAWSJSON(v *types.GetCampaignsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetChannelsInputShapeAWSREST(v *types.GetChannelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetChannelsInputShapeAWSJSON(v *types.GetChannelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEmailChannelInputShapeAWSREST(v *types.GetEmailChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEmailChannelInputShapeAWSJSON(v *types.GetEmailChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEmailTemplateInputShapeAWSREST(v *types.GetEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEmailTemplateInputShapeAWSJSON(v *types.GetEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEndpointInputShapeAWSREST(v *types.GetEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEndpointInputShapeAWSJSON(v *types.GetEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEventStreamInputShapeAWSREST(v *types.GetEventStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEventStreamInputShapeAWSJSON(v *types.GetEventStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetExportJobInputShapeAWSREST(v *types.GetExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetExportJobInputShapeAWSJSON(v *types.GetExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetExportJobsInputShapeAWSREST(v *types.GetExportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetExportJobsInputShapeAWSJSON(v *types.GetExportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGcmChannelInputShapeAWSREST(v *types.GetGcmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGcmChannelInputShapeAWSJSON(v *types.GetGcmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetImportJobInputShapeAWSREST(v *types.GetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetImportJobInputShapeAWSJSON(v *types.GetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetImportJobsInputShapeAWSREST(v *types.GetImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetImportJobsInputShapeAWSJSON(v *types.GetImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJourneyInputShapeAWSREST(v *types.GetJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJourneyInputShapeAWSJSON(v *types.GetJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJourneyDateRangeKpiInputShapeAWSREST(v *types.GetJourneyDateRangeKpiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJourneyDateRangeKpiInputShapeAWSJSON(v *types.GetJourneyDateRangeKpiInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJourneyExecutionActivityMetricsInputShapeAWSREST(v *types.GetJourneyExecutionActivityMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJourneyExecutionActivityMetricsInputShapeAWSJSON(v *types.GetJourneyExecutionActivityMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJourneyExecutionMetricsInputShapeAWSREST(v *types.GetJourneyExecutionMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJourneyExecutionMetricsInputShapeAWSJSON(v *types.GetJourneyExecutionMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetPushTemplateInputShapeAWSREST(v *types.GetPushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetPushTemplateInputShapeAWSJSON(v *types.GetPushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSegmentInputShapeAWSREST(v *types.GetSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSegmentInputShapeAWSJSON(v *types.GetSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSegmentExportJobsInputShapeAWSREST(v *types.GetSegmentExportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSegmentExportJobsInputShapeAWSJSON(v *types.GetSegmentExportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSegmentImportJobsInputShapeAWSREST(v *types.GetSegmentImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSegmentImportJobsInputShapeAWSJSON(v *types.GetSegmentImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSegmentVersionInputShapeAWSREST(v *types.GetSegmentVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSegmentVersionInputShapeAWSJSON(v *types.GetSegmentVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSegmentVersionsInputShapeAWSREST(v *types.GetSegmentVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSegmentVersionsInputShapeAWSJSON(v *types.GetSegmentVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSegmentsInputShapeAWSREST(v *types.GetSegmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSegmentsInputShapeAWSJSON(v *types.GetSegmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSmsChannelInputShapeAWSREST(v *types.GetSmsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSmsChannelInputShapeAWSJSON(v *types.GetSmsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSmsTemplateInputShapeAWSREST(v *types.GetSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSmsTemplateInputShapeAWSJSON(v *types.GetSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUserEndpointsInputShapeAWSREST(v *types.GetUserEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUserEndpointsInputShapeAWSJSON(v *types.GetUserEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetVoiceChannelInputShapeAWSREST(v *types.GetVoiceChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetVoiceChannelInputShapeAWSJSON(v *types.GetVoiceChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetVoiceTemplateInputShapeAWSREST(v *types.GetVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetVoiceTemplateInputShapeAWSJSON(v *types.GetVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJourneysInputShapeAWSREST(v *types.ListJourneysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJourneysInputShapeAWSJSON(v *types.ListJourneysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTemplatesInputShapeAWSREST(v *types.ListTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTemplatesInputShapeAWSJSON(v *types.ListTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPhoneNumberValidateInputShapeAWSREST(v *types.PhoneNumberValidateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPhoneNumberValidateInputShapeAWSJSON(v *types.PhoneNumberValidateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutEventStreamInputShapeAWSREST(v *types.PutEventStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutEventStreamInputShapeAWSJSON(v *types.PutEventStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutEventsInputShapeAWSREST(v *types.PutEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutEventsInputShapeAWSJSON(v *types.PutEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalRemoveAttributesInputShapeAWSREST(v *types.RemoveAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalRemoveAttributesInputShapeAWSJSON(v *types.RemoveAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSendMessagesInputShapeAWSREST(v *types.SendMessagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSendMessagesInputShapeAWSJSON(v *types.SendMessagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSendUsersMessagesInputShapeAWSREST(v *types.SendUsersMessagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSendUsersMessagesInputShapeAWSJSON(v *types.SendUsersMessagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateAdmChannelInputShapeAWSREST(v *types.UpdateAdmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateAdmChannelInputShapeAWSJSON(v *types.UpdateAdmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApnsChannelInputShapeAWSREST(v *types.UpdateApnsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApnsChannelInputShapeAWSJSON(v *types.UpdateApnsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApnsSandboxChannelInputShapeAWSREST(v *types.UpdateApnsSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApnsSandboxChannelInputShapeAWSJSON(v *types.UpdateApnsSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApnsVoipChannelInputShapeAWSREST(v *types.UpdateApnsVoipChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApnsVoipChannelInputShapeAWSJSON(v *types.UpdateApnsVoipChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApnsVoipSandboxChannelInputShapeAWSREST(v *types.UpdateApnsVoipSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApnsVoipSandboxChannelInputShapeAWSJSON(v *types.UpdateApnsVoipSandboxChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApplicationSettingsInputShapeAWSREST(v *types.UpdateApplicationSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApplicationSettingsInputShapeAWSJSON(v *types.UpdateApplicationSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateBaiduChannelInputShapeAWSREST(v *types.UpdateBaiduChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateBaiduChannelInputShapeAWSJSON(v *types.UpdateBaiduChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateCampaignInputShapeAWSREST(v *types.UpdateCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateCampaignInputShapeAWSJSON(v *types.UpdateCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateEmailChannelInputShapeAWSREST(v *types.UpdateEmailChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateEmailChannelInputShapeAWSJSON(v *types.UpdateEmailChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateEmailTemplateInputShapeAWSREST(v *types.UpdateEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateEmailTemplateInputShapeAWSJSON(v *types.UpdateEmailTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateEndpointInputShapeAWSREST(v *types.UpdateEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateEndpointInputShapeAWSJSON(v *types.UpdateEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateEndpointsBatchInputShapeAWSREST(v *types.UpdateEndpointsBatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateEndpointsBatchInputShapeAWSJSON(v *types.UpdateEndpointsBatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateGcmChannelInputShapeAWSREST(v *types.UpdateGcmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateGcmChannelInputShapeAWSJSON(v *types.UpdateGcmChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateJourneyInputShapeAWSREST(v *types.UpdateJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateJourneyInputShapeAWSJSON(v *types.UpdateJourneyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateJourneyStateInputShapeAWSREST(v *types.UpdateJourneyStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateJourneyStateInputShapeAWSJSON(v *types.UpdateJourneyStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdatePushTemplateInputShapeAWSREST(v *types.UpdatePushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdatePushTemplateInputShapeAWSJSON(v *types.UpdatePushTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateSegmentInputShapeAWSREST(v *types.UpdateSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateSegmentInputShapeAWSJSON(v *types.UpdateSegmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateSmsChannelInputShapeAWSREST(v *types.UpdateSmsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateSmsChannelInputShapeAWSJSON(v *types.UpdateSmsChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateSmsTemplateInputShapeAWSREST(v *types.UpdateSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateSmsTemplateInputShapeAWSJSON(v *types.UpdateSmsTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateVoiceChannelInputShapeAWSREST(v *types.UpdateVoiceChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateVoiceChannelInputShapeAWSJSON(v *types.UpdateVoiceChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateVoiceTemplateInputShapeAWSREST(v *types.UpdateVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateVoiceTemplateInputShapeAWSJSON(v *types.UpdateVoiceTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCampaignInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEmailTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEmailTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateEmailTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEmailTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEmailTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateExportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateExportJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateExportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateExportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateExportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateImportJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateJourneyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateJourneyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateJourneyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateJourneyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateJourney.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePushTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePushTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreatePushTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePushTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePushTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSegmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSegmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSegmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSegmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSegment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSmsTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSmsTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSmsTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSmsTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSmsTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVoiceTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVoiceTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateVoiceTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVoiceTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVoiceTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAdmChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAdmChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteAdmChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAdmChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAdmChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApnsChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApnsChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteApnsChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApnsChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApnsChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApnsSandboxChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApnsSandboxChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteApnsSandboxChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApnsSandboxChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApnsSandboxChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApnsVoipChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApnsVoipChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteApnsVoipChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApnsVoipChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApnsVoipChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApnsVoipSandboxChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApnsVoipSandboxChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteApnsVoipSandboxChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApnsVoipSandboxChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApnsVoipSandboxChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBaiduChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBaiduChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBaiduChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBaiduChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBaiduChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCampaignInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEmailChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEmailChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteEmailChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEmailChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEmailChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEmailTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEmailTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteEmailTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEmailTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEmailTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEndpointInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventStreamInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteEventStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGcmChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGcmChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteGcmChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGcmChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGcmChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteJourneyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteJourneyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteJourneyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteJourneyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteJourney.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePushTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePushTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeletePushTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePushTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePushTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSegmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSegmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSegmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSegmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSegment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSmsChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSmsChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSmsChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSmsChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSmsChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSmsTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSmsTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSmsTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSmsTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSmsTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserEndpointsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteUserEndpointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVoiceChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVoiceChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteVoiceChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVoiceChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVoiceChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVoiceTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVoiceTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteVoiceTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVoiceTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVoiceTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAdmChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAdmChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAdmChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAdmChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAdmChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApnsChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApnsChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApnsChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApnsChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApnsChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApnsSandboxChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApnsSandboxChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApnsSandboxChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApnsSandboxChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApnsSandboxChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApnsVoipChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApnsVoipChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApnsVoipChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApnsVoipChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApnsVoipChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApnsVoipSandboxChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApnsVoipSandboxChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApnsVoipSandboxChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApnsVoipSandboxChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApnsVoipSandboxChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAppMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAppInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAppInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAppMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApplicationDateRangeKpiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApplicationDateRangeKpiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApplicationDateRangeKpiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApplicationDateRangeKpiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApplicationDateRangeKpi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApplicationSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApplicationSettingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApplicationSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApplicationSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApplicationSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAppsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAppsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAppsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAppsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApps.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBaiduChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBaiduChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBaiduChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBaiduChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBaiduChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCampaignInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCampaignActivitiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCampaignActivitiesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCampaignActivitiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCampaignActivitiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCampaignActivities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCampaignDateRangeKpiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCampaignDateRangeKpiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCampaignDateRangeKpiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCampaignDateRangeKpiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCampaignDateRangeKpi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCampaignVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCampaignVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCampaignVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCampaignVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCampaignVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCampaignVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCampaignVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCampaignVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCampaignVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCampaignVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCampaignsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCampaignsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCampaignsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCampaignsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCampaigns.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetChannelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetChannelsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetChannelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetChannelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetChannels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEmailChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEmailChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEmailChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEmailChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEmailChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEmailTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEmailTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEmailTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEmailTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEmailTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEndpointInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEventStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEventStreamInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEventStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEventStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEventStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetExportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetExportJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetExportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetExportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetExportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetExportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetExportJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetExportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetExportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetExportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGcmChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGcmChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGcmChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGcmChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGcmChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetImportJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetImportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetImportJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetImportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetImportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetImportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJourneyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJourneyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJourneyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJourneyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJourney.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJourneyDateRangeKpiMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJourneyDateRangeKpiInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJourneyDateRangeKpiInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJourneyDateRangeKpiMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJourneyDateRangeKpi.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJourneyExecutionActivityMetricsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJourneyExecutionActivityMetricsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJourneyExecutionActivityMetricsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJourneyExecutionActivityMetricsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJourneyExecutionActivityMetrics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJourneyExecutionMetricsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJourneyExecutionMetricsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJourneyExecutionMetricsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJourneyExecutionMetricsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJourneyExecutionMetrics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPushTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPushTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetPushTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPushTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPushTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSegmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSegmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSegmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSegmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSegment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSegmentExportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSegmentExportJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSegmentExportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSegmentExportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSegmentExportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSegmentImportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSegmentImportJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSegmentImportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSegmentImportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSegmentImportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSegmentVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSegmentVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSegmentVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSegmentVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSegmentVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSegmentVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSegmentVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSegmentVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSegmentVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSegmentVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSegmentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSegmentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSegmentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSegmentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSegments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSmsChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSmsChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSmsChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSmsChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSmsChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSmsTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSmsTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSmsTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSmsTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSmsTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUserEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUserEndpointsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUserEndpointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUserEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUserEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetVoiceChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetVoiceChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetVoiceChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetVoiceChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetVoiceChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetVoiceTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetVoiceTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetVoiceTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetVoiceTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetVoiceTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJourneysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJourneysInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJourneysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJourneysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJourneys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTemplatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTemplatesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTemplatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTemplatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTemplates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PhoneNumberValidateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPhoneNumberValidateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPhoneNumberValidateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PhoneNumberValidateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PhoneNumberValidate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEventStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEventStreamInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutEventStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEventStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEventStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEventsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalRemoveAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendMessagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendMessagesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSendMessagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendMessagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendMessages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendUsersMessagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendUsersMessagesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSendUsersMessagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendUsersMessagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendUsersMessages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAdmChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAdmChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateAdmChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAdmChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAdmChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApnsChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApnsChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApnsChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApnsChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApnsChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApnsSandboxChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApnsSandboxChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApnsSandboxChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApnsSandboxChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApnsSandboxChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApnsVoipChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApnsVoipChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApnsVoipChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApnsVoipChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApnsVoipChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApnsVoipSandboxChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApnsVoipSandboxChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApnsVoipSandboxChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApnsVoipSandboxChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApnsVoipSandboxChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApplicationSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApplicationSettingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApplicationSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApplicationSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApplicationSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBaiduChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBaiduChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateBaiduChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBaiduChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBaiduChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateCampaignInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateEmailChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateEmailChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateEmailChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateEmailChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateEmailChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateEmailTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateEmailTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateEmailTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateEmailTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateEmailTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateEndpointInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateEndpointsBatchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateEndpointsBatchInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateEndpointsBatchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateEndpointsBatchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateEndpointsBatch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGcmChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGcmChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateGcmChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGcmChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGcmChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateJourneyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateJourneyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateJourneyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateJourneyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateJourney.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateJourneyStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateJourneyStateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateJourneyStateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateJourneyStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateJourneyState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePushTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePushTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdatePushTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePushTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePushTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSegmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSegmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateSegmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSegmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSegment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSmsChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSmsChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateSmsChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSmsChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSmsChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSmsTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSmsTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateSmsTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSmsTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSmsTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateVoiceChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateVoiceChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateVoiceChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateVoiceChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateVoiceChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateVoiceTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateVoiceTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateVoiceTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateVoiceTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateVoiceTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
