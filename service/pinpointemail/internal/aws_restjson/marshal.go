// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/pinpointemail/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateConfigurationSetMarshaler defines marshaler for CreateConfigurationSet operation
type CreateConfigurationSetMarshaler struct {
	Input *types.CreateConfigurationSetInput
}

// CreateConfigurationSetEventDestinationMarshaler defines marshaler for CreateConfigurationSetEventDestination operation
type CreateConfigurationSetEventDestinationMarshaler struct {
	Input *types.CreateConfigurationSetEventDestinationInput
}

// CreateDedicatedIpPoolMarshaler defines marshaler for CreateDedicatedIpPool operation
type CreateDedicatedIpPoolMarshaler struct {
	Input *types.CreateDedicatedIpPoolInput
}

// CreateDeliverabilityTestReportMarshaler defines marshaler for CreateDeliverabilityTestReport operation
type CreateDeliverabilityTestReportMarshaler struct {
	Input *types.CreateDeliverabilityTestReportInput
}

// CreateEmailIdentityMarshaler defines marshaler for CreateEmailIdentity operation
type CreateEmailIdentityMarshaler struct {
	Input *types.CreateEmailIdentityInput
}

// DeleteConfigurationSetMarshaler defines marshaler for DeleteConfigurationSet operation
type DeleteConfigurationSetMarshaler struct {
	Input *types.DeleteConfigurationSetInput
}

// DeleteConfigurationSetEventDestinationMarshaler defines marshaler for DeleteConfigurationSetEventDestination operation
type DeleteConfigurationSetEventDestinationMarshaler struct {
	Input *types.DeleteConfigurationSetEventDestinationInput
}

// DeleteDedicatedIpPoolMarshaler defines marshaler for DeleteDedicatedIpPool operation
type DeleteDedicatedIpPoolMarshaler struct {
	Input *types.DeleteDedicatedIpPoolInput
}

// DeleteEmailIdentityMarshaler defines marshaler for DeleteEmailIdentity operation
type DeleteEmailIdentityMarshaler struct {
	Input *types.DeleteEmailIdentityInput
}

// GetAccountMarshaler defines marshaler for GetAccount operation
type GetAccountMarshaler struct {
	Input *types.GetAccountInput
}

// GetBlacklistReportsMarshaler defines marshaler for GetBlacklistReports operation
type GetBlacklistReportsMarshaler struct {
	Input *types.GetBlacklistReportsInput
}

// GetConfigurationSetMarshaler defines marshaler for GetConfigurationSet operation
type GetConfigurationSetMarshaler struct {
	Input *types.GetConfigurationSetInput
}

// GetConfigurationSetEventDestinationsMarshaler defines marshaler for GetConfigurationSetEventDestinations operation
type GetConfigurationSetEventDestinationsMarshaler struct {
	Input *types.GetConfigurationSetEventDestinationsInput
}

// GetDedicatedIpMarshaler defines marshaler for GetDedicatedIp operation
type GetDedicatedIpMarshaler struct {
	Input *types.GetDedicatedIpInput
}

// GetDedicatedIpsMarshaler defines marshaler for GetDedicatedIps operation
type GetDedicatedIpsMarshaler struct {
	Input *types.GetDedicatedIpsInput
}

// GetDeliverabilityDashboardOptionsMarshaler defines marshaler for GetDeliverabilityDashboardOptions operation
type GetDeliverabilityDashboardOptionsMarshaler struct {
	Input *types.GetDeliverabilityDashboardOptionsInput
}

// GetDeliverabilityTestReportMarshaler defines marshaler for GetDeliverabilityTestReport operation
type GetDeliverabilityTestReportMarshaler struct {
	Input *types.GetDeliverabilityTestReportInput
}

// GetDomainDeliverabilityCampaignMarshaler defines marshaler for GetDomainDeliverabilityCampaign operation
type GetDomainDeliverabilityCampaignMarshaler struct {
	Input *types.GetDomainDeliverabilityCampaignInput
}

// GetDomainStatisticsReportMarshaler defines marshaler for GetDomainStatisticsReport operation
type GetDomainStatisticsReportMarshaler struct {
	Input *types.GetDomainStatisticsReportInput
}

// GetEmailIdentityMarshaler defines marshaler for GetEmailIdentity operation
type GetEmailIdentityMarshaler struct {
	Input *types.GetEmailIdentityInput
}

// ListConfigurationSetsMarshaler defines marshaler for ListConfigurationSets operation
type ListConfigurationSetsMarshaler struct {
	Input *types.ListConfigurationSetsInput
}

// ListDedicatedIpPoolsMarshaler defines marshaler for ListDedicatedIpPools operation
type ListDedicatedIpPoolsMarshaler struct {
	Input *types.ListDedicatedIpPoolsInput
}

// ListDeliverabilityTestReportsMarshaler defines marshaler for ListDeliverabilityTestReports operation
type ListDeliverabilityTestReportsMarshaler struct {
	Input *types.ListDeliverabilityTestReportsInput
}

// ListDomainDeliverabilityCampaignsMarshaler defines marshaler for ListDomainDeliverabilityCampaigns operation
type ListDomainDeliverabilityCampaignsMarshaler struct {
	Input *types.ListDomainDeliverabilityCampaignsInput
}

// ListEmailIdentitiesMarshaler defines marshaler for ListEmailIdentities operation
type ListEmailIdentitiesMarshaler struct {
	Input *types.ListEmailIdentitiesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PutAccountDedicatedIpWarmupAttributesMarshaler defines marshaler for PutAccountDedicatedIpWarmupAttributes operation
type PutAccountDedicatedIpWarmupAttributesMarshaler struct {
	Input *types.PutAccountDedicatedIpWarmupAttributesInput
}

// PutAccountSendingAttributesMarshaler defines marshaler for PutAccountSendingAttributes operation
type PutAccountSendingAttributesMarshaler struct {
	Input *types.PutAccountSendingAttributesInput
}

// PutConfigurationSetDeliveryOptionsMarshaler defines marshaler for PutConfigurationSetDeliveryOptions operation
type PutConfigurationSetDeliveryOptionsMarshaler struct {
	Input *types.PutConfigurationSetDeliveryOptionsInput
}

// PutConfigurationSetReputationOptionsMarshaler defines marshaler for PutConfigurationSetReputationOptions operation
type PutConfigurationSetReputationOptionsMarshaler struct {
	Input *types.PutConfigurationSetReputationOptionsInput
}

// PutConfigurationSetSendingOptionsMarshaler defines marshaler for PutConfigurationSetSendingOptions operation
type PutConfigurationSetSendingOptionsMarshaler struct {
	Input *types.PutConfigurationSetSendingOptionsInput
}

// PutConfigurationSetTrackingOptionsMarshaler defines marshaler for PutConfigurationSetTrackingOptions operation
type PutConfigurationSetTrackingOptionsMarshaler struct {
	Input *types.PutConfigurationSetTrackingOptionsInput
}

// PutDedicatedIpInPoolMarshaler defines marshaler for PutDedicatedIpInPool operation
type PutDedicatedIpInPoolMarshaler struct {
	Input *types.PutDedicatedIpInPoolInput
}

// PutDedicatedIpWarmupAttributesMarshaler defines marshaler for PutDedicatedIpWarmupAttributes operation
type PutDedicatedIpWarmupAttributesMarshaler struct {
	Input *types.PutDedicatedIpWarmupAttributesInput
}

// PutDeliverabilityDashboardOptionMarshaler defines marshaler for PutDeliverabilityDashboardOption operation
type PutDeliverabilityDashboardOptionMarshaler struct {
	Input *types.PutDeliverabilityDashboardOptionInput
}

// PutEmailIdentityDkimAttributesMarshaler defines marshaler for PutEmailIdentityDkimAttributes operation
type PutEmailIdentityDkimAttributesMarshaler struct {
	Input *types.PutEmailIdentityDkimAttributesInput
}

// PutEmailIdentityFeedbackAttributesMarshaler defines marshaler for PutEmailIdentityFeedbackAttributes operation
type PutEmailIdentityFeedbackAttributesMarshaler struct {
	Input *types.PutEmailIdentityFeedbackAttributesInput
}

// PutEmailIdentityMailFromAttributesMarshaler defines marshaler for PutEmailIdentityMailFromAttributes operation
type PutEmailIdentityMailFromAttributesMarshaler struct {
	Input *types.PutEmailIdentityMailFromAttributesInput
}

// SendEmailMarshaler defines marshaler for SendEmail operation
type SendEmailMarshaler struct {
	Input *types.SendEmailInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateConfigurationSetEventDestinationMarshaler defines marshaler for UpdateConfigurationSetEventDestination operation
type UpdateConfigurationSetEventDestinationMarshaler struct {
	Input *types.UpdateConfigurationSetEventDestinationInput
}

func MarshalCreateConfigurationSetInputShapeAWSREST(v *types.CreateConfigurationSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateConfigurationSetInputShapeAWSJSON(v *types.CreateConfigurationSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateConfigurationSetEventDestinationInputShapeAWSREST(v *types.CreateConfigurationSetEventDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateConfigurationSetEventDestinationInputShapeAWSJSON(v *types.CreateConfigurationSetEventDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDedicatedIpPoolInputShapeAWSREST(v *types.CreateDedicatedIpPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDedicatedIpPoolInputShapeAWSJSON(v *types.CreateDedicatedIpPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeliverabilityTestReportInputShapeAWSREST(v *types.CreateDeliverabilityTestReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeliverabilityTestReportInputShapeAWSJSON(v *types.CreateDeliverabilityTestReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateEmailIdentityInputShapeAWSREST(v *types.CreateEmailIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateEmailIdentityInputShapeAWSJSON(v *types.CreateEmailIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteConfigurationSetInputShapeAWSREST(v *types.DeleteConfigurationSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteConfigurationSetInputShapeAWSJSON(v *types.DeleteConfigurationSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteConfigurationSetEventDestinationInputShapeAWSREST(v *types.DeleteConfigurationSetEventDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteConfigurationSetEventDestinationInputShapeAWSJSON(v *types.DeleteConfigurationSetEventDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDedicatedIpPoolInputShapeAWSREST(v *types.DeleteDedicatedIpPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDedicatedIpPoolInputShapeAWSJSON(v *types.DeleteDedicatedIpPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteEmailIdentityInputShapeAWSREST(v *types.DeleteEmailIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteEmailIdentityInputShapeAWSJSON(v *types.DeleteEmailIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAccountInputShapeAWSREST(v *types.GetAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAccountInputShapeAWSJSON(v *types.GetAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBlacklistReportsInputShapeAWSREST(v *types.GetBlacklistReportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBlacklistReportsInputShapeAWSJSON(v *types.GetBlacklistReportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetConfigurationSetInputShapeAWSREST(v *types.GetConfigurationSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetConfigurationSetInputShapeAWSJSON(v *types.GetConfigurationSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetConfigurationSetEventDestinationsInputShapeAWSREST(v *types.GetConfigurationSetEventDestinationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetConfigurationSetEventDestinationsInputShapeAWSJSON(v *types.GetConfigurationSetEventDestinationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDedicatedIpInputShapeAWSREST(v *types.GetDedicatedIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDedicatedIpInputShapeAWSJSON(v *types.GetDedicatedIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDedicatedIpsInputShapeAWSREST(v *types.GetDedicatedIpsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDedicatedIpsInputShapeAWSJSON(v *types.GetDedicatedIpsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeliverabilityDashboardOptionsInputShapeAWSREST(v *types.GetDeliverabilityDashboardOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeliverabilityDashboardOptionsInputShapeAWSJSON(v *types.GetDeliverabilityDashboardOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeliverabilityTestReportInputShapeAWSREST(v *types.GetDeliverabilityTestReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeliverabilityTestReportInputShapeAWSJSON(v *types.GetDeliverabilityTestReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDomainDeliverabilityCampaignInputShapeAWSREST(v *types.GetDomainDeliverabilityCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDomainDeliverabilityCampaignInputShapeAWSJSON(v *types.GetDomainDeliverabilityCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDomainStatisticsReportInputShapeAWSREST(v *types.GetDomainStatisticsReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDomainStatisticsReportInputShapeAWSJSON(v *types.GetDomainStatisticsReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEmailIdentityInputShapeAWSREST(v *types.GetEmailIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEmailIdentityInputShapeAWSJSON(v *types.GetEmailIdentityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListConfigurationSetsInputShapeAWSREST(v *types.ListConfigurationSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListConfigurationSetsInputShapeAWSJSON(v *types.ListConfigurationSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDedicatedIpPoolsInputShapeAWSREST(v *types.ListDedicatedIpPoolsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDedicatedIpPoolsInputShapeAWSJSON(v *types.ListDedicatedIpPoolsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDeliverabilityTestReportsInputShapeAWSREST(v *types.ListDeliverabilityTestReportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDeliverabilityTestReportsInputShapeAWSJSON(v *types.ListDeliverabilityTestReportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDomainDeliverabilityCampaignsInputShapeAWSREST(v *types.ListDomainDeliverabilityCampaignsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDomainDeliverabilityCampaignsInputShapeAWSJSON(v *types.ListDomainDeliverabilityCampaignsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListEmailIdentitiesInputShapeAWSREST(v *types.ListEmailIdentitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListEmailIdentitiesInputShapeAWSJSON(v *types.ListEmailIdentitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutAccountDedicatedIpWarmupAttributesInputShapeAWSREST(v *types.PutAccountDedicatedIpWarmupAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutAccountDedicatedIpWarmupAttributesInputShapeAWSJSON(v *types.PutAccountDedicatedIpWarmupAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutAccountSendingAttributesInputShapeAWSREST(v *types.PutAccountSendingAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutAccountSendingAttributesInputShapeAWSJSON(v *types.PutAccountSendingAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutConfigurationSetDeliveryOptionsInputShapeAWSREST(v *types.PutConfigurationSetDeliveryOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutConfigurationSetDeliveryOptionsInputShapeAWSJSON(v *types.PutConfigurationSetDeliveryOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutConfigurationSetReputationOptionsInputShapeAWSREST(v *types.PutConfigurationSetReputationOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutConfigurationSetReputationOptionsInputShapeAWSJSON(v *types.PutConfigurationSetReputationOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutConfigurationSetSendingOptionsInputShapeAWSREST(v *types.PutConfigurationSetSendingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutConfigurationSetSendingOptionsInputShapeAWSJSON(v *types.PutConfigurationSetSendingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutConfigurationSetTrackingOptionsInputShapeAWSREST(v *types.PutConfigurationSetTrackingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutConfigurationSetTrackingOptionsInputShapeAWSJSON(v *types.PutConfigurationSetTrackingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutDedicatedIpInPoolInputShapeAWSREST(v *types.PutDedicatedIpInPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutDedicatedIpInPoolInputShapeAWSJSON(v *types.PutDedicatedIpInPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutDedicatedIpWarmupAttributesInputShapeAWSREST(v *types.PutDedicatedIpWarmupAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutDedicatedIpWarmupAttributesInputShapeAWSJSON(v *types.PutDedicatedIpWarmupAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutDeliverabilityDashboardOptionInputShapeAWSREST(v *types.PutDeliverabilityDashboardOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutDeliverabilityDashboardOptionInputShapeAWSJSON(v *types.PutDeliverabilityDashboardOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutEmailIdentityDkimAttributesInputShapeAWSREST(v *types.PutEmailIdentityDkimAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutEmailIdentityDkimAttributesInputShapeAWSJSON(v *types.PutEmailIdentityDkimAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutEmailIdentityFeedbackAttributesInputShapeAWSREST(v *types.PutEmailIdentityFeedbackAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutEmailIdentityFeedbackAttributesInputShapeAWSJSON(v *types.PutEmailIdentityFeedbackAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutEmailIdentityMailFromAttributesInputShapeAWSREST(v *types.PutEmailIdentityMailFromAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutEmailIdentityMailFromAttributesInputShapeAWSJSON(v *types.PutEmailIdentityMailFromAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSendEmailInputShapeAWSREST(v *types.SendEmailInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSendEmailInputShapeAWSJSON(v *types.SendEmailInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateConfigurationSetEventDestinationInputShapeAWSREST(v *types.UpdateConfigurationSetEventDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateConfigurationSetEventDestinationInputShapeAWSJSON(v *types.UpdateConfigurationSetEventDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateConfigurationSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConfigurationSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateConfigurationSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConfigurationSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConfigurationSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateConfigurationSetEventDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConfigurationSetEventDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateConfigurationSetEventDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConfigurationSetEventDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConfigurationSetEventDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDedicatedIpPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDedicatedIpPoolInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDedicatedIpPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDedicatedIpPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDedicatedIpPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeliverabilityTestReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeliverabilityTestReportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeliverabilityTestReportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeliverabilityTestReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeliverabilityTestReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEmailIdentityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEmailIdentityInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateEmailIdentityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEmailIdentityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEmailIdentity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConfigurationSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConfigurationSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteConfigurationSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConfigurationSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConfigurationSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConfigurationSetEventDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConfigurationSetEventDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteConfigurationSetEventDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConfigurationSetEventDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConfigurationSetEventDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDedicatedIpPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDedicatedIpPoolInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDedicatedIpPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDedicatedIpPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDedicatedIpPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEmailIdentityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEmailIdentityInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteEmailIdentityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEmailIdentityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEmailIdentity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBlacklistReportsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBlacklistReportsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBlacklistReportsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBlacklistReportsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBlacklistReports.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConfigurationSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConfigurationSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetConfigurationSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConfigurationSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConfigurationSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConfigurationSetEventDestinationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConfigurationSetEventDestinationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetConfigurationSetEventDestinationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConfigurationSetEventDestinationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConfigurationSetEventDestinations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDedicatedIpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDedicatedIpInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDedicatedIpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDedicatedIpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDedicatedIp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDedicatedIpsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDedicatedIpsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDedicatedIpsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDedicatedIpsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDedicatedIps.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeliverabilityDashboardOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeliverabilityDashboardOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeliverabilityDashboardOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeliverabilityDashboardOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeliverabilityDashboardOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeliverabilityTestReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeliverabilityTestReportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeliverabilityTestReportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeliverabilityTestReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeliverabilityTestReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainDeliverabilityCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainDeliverabilityCampaignInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDomainDeliverabilityCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainDeliverabilityCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomainDeliverabilityCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainStatisticsReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainStatisticsReportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDomainStatisticsReportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainStatisticsReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomainStatisticsReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEmailIdentityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEmailIdentityInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEmailIdentityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEmailIdentityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEmailIdentity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListConfigurationSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListConfigurationSetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListConfigurationSetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListConfigurationSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListConfigurationSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDedicatedIpPoolsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDedicatedIpPoolsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDedicatedIpPoolsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDedicatedIpPoolsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDedicatedIpPools.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeliverabilityTestReportsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeliverabilityTestReportsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDeliverabilityTestReportsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeliverabilityTestReportsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeliverabilityTestReports.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDomainDeliverabilityCampaignsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDomainDeliverabilityCampaignsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDomainDeliverabilityCampaignsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDomainDeliverabilityCampaignsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDomainDeliverabilityCampaigns.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEmailIdentitiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEmailIdentitiesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListEmailIdentitiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEmailIdentitiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEmailIdentities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAccountDedicatedIpWarmupAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAccountDedicatedIpWarmupAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutAccountDedicatedIpWarmupAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAccountDedicatedIpWarmupAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAccountDedicatedIpWarmupAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAccountSendingAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAccountSendingAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutAccountSendingAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAccountSendingAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAccountSendingAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutConfigurationSetDeliveryOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutConfigurationSetDeliveryOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutConfigurationSetDeliveryOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutConfigurationSetDeliveryOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutConfigurationSetDeliveryOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutConfigurationSetReputationOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutConfigurationSetReputationOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutConfigurationSetReputationOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutConfigurationSetReputationOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutConfigurationSetReputationOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutConfigurationSetSendingOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutConfigurationSetSendingOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutConfigurationSetSendingOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutConfigurationSetSendingOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutConfigurationSetSendingOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutConfigurationSetTrackingOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutConfigurationSetTrackingOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutConfigurationSetTrackingOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutConfigurationSetTrackingOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutConfigurationSetTrackingOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutDedicatedIpInPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutDedicatedIpInPoolInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutDedicatedIpInPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutDedicatedIpInPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutDedicatedIpInPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutDedicatedIpWarmupAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutDedicatedIpWarmupAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutDedicatedIpWarmupAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutDedicatedIpWarmupAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutDedicatedIpWarmupAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutDeliverabilityDashboardOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutDeliverabilityDashboardOptionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutDeliverabilityDashboardOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutDeliverabilityDashboardOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutDeliverabilityDashboardOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEmailIdentityDkimAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEmailIdentityDkimAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutEmailIdentityDkimAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEmailIdentityDkimAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEmailIdentityDkimAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEmailIdentityFeedbackAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEmailIdentityFeedbackAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutEmailIdentityFeedbackAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEmailIdentityFeedbackAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEmailIdentityFeedbackAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEmailIdentityMailFromAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEmailIdentityMailFromAttributesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutEmailIdentityMailFromAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEmailIdentityMailFromAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEmailIdentityMailFromAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendEmailMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendEmailInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSendEmailInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendEmailMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendEmail.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateConfigurationSetEventDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateConfigurationSetEventDestinationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateConfigurationSetEventDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateConfigurationSetEventDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateConfigurationSetEventDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
