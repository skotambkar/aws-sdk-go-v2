// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/polly/types"
)

var _ bytes.Buffer
var _ awserr.Error

// DeleteLexiconMarshaler defines marshaler for DeleteLexicon operation
type DeleteLexiconMarshaler struct {
	Input *types.DeleteLexiconInput
}

// DescribeVoicesMarshaler defines marshaler for DescribeVoices operation
type DescribeVoicesMarshaler struct {
	Input *types.DescribeVoicesInput
}

// GetLexiconMarshaler defines marshaler for GetLexicon operation
type GetLexiconMarshaler struct {
	Input *types.GetLexiconInput
}

// GetSpeechSynthesisTaskMarshaler defines marshaler for GetSpeechSynthesisTask operation
type GetSpeechSynthesisTaskMarshaler struct {
	Input *types.GetSpeechSynthesisTaskInput
}

// ListLexiconsMarshaler defines marshaler for ListLexicons operation
type ListLexiconsMarshaler struct {
	Input *types.ListLexiconsInput
}

// ListSpeechSynthesisTasksMarshaler defines marshaler for ListSpeechSynthesisTasks operation
type ListSpeechSynthesisTasksMarshaler struct {
	Input *types.ListSpeechSynthesisTasksInput
}

// PutLexiconMarshaler defines marshaler for PutLexicon operation
type PutLexiconMarshaler struct {
	Input *types.PutLexiconInput
}

// StartSpeechSynthesisTaskMarshaler defines marshaler for StartSpeechSynthesisTask operation
type StartSpeechSynthesisTaskMarshaler struct {
	Input *types.StartSpeechSynthesisTaskInput
}

// SynthesizeSpeechMarshaler defines marshaler for SynthesizeSpeech operation
type SynthesizeSpeechMarshaler struct {
	Input *types.SynthesizeSpeechInput
}

func MarshalDeleteLexiconInputShapeAWSREST(v *types.DeleteLexiconInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteLexiconInputShapeAWSJSON(v *types.DeleteLexiconInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeVoicesInputShapeAWSREST(v *types.DescribeVoicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeVoicesInputShapeAWSJSON(v *types.DescribeVoicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetLexiconInputShapeAWSREST(v *types.GetLexiconInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetLexiconInputShapeAWSJSON(v *types.GetLexiconInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSpeechSynthesisTaskInputShapeAWSREST(v *types.GetSpeechSynthesisTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSpeechSynthesisTaskInputShapeAWSJSON(v *types.GetSpeechSynthesisTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListLexiconsInputShapeAWSREST(v *types.ListLexiconsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListLexiconsInputShapeAWSJSON(v *types.ListLexiconsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSpeechSynthesisTasksInputShapeAWSREST(v *types.ListSpeechSynthesisTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSpeechSynthesisTasksInputShapeAWSJSON(v *types.ListSpeechSynthesisTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutLexiconInputShapeAWSREST(v *types.PutLexiconInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutLexiconInputShapeAWSJSON(v *types.PutLexiconInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartSpeechSynthesisTaskInputShapeAWSREST(v *types.StartSpeechSynthesisTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartSpeechSynthesisTaskInputShapeAWSJSON(v *types.StartSpeechSynthesisTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSynthesizeSpeechInputShapeAWSREST(v *types.SynthesizeSpeechInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSynthesizeSpeechInputShapeAWSJSON(v *types.SynthesizeSpeechInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m DeleteLexiconMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLexiconInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteLexiconInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLexiconMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLexicon.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVoicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVoicesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeVoicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVoicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVoices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLexiconMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLexiconInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetLexiconInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLexiconMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLexicon.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSpeechSynthesisTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSpeechSynthesisTaskInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSpeechSynthesisTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSpeechSynthesisTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSpeechSynthesisTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLexiconsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLexiconsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListLexiconsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLexiconsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLexicons.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSpeechSynthesisTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSpeechSynthesisTasksInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSpeechSynthesisTasksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSpeechSynthesisTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSpeechSynthesisTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutLexiconMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutLexiconInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutLexiconInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutLexiconMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutLexicon.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartSpeechSynthesisTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartSpeechSynthesisTaskInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartSpeechSynthesisTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartSpeechSynthesisTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartSpeechSynthesisTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SynthesizeSpeechMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSynthesizeSpeechInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSynthesizeSpeechInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SynthesizeSpeechMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SynthesizeSpeech.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
