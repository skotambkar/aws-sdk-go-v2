// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/iotdataplane/types"
)

var _ bytes.Buffer
var _ awserr.Error

// DeleteThingShadowMarshaler defines marshaler for DeleteThingShadow operation
type DeleteThingShadowMarshaler struct {
	Input *types.DeleteThingShadowInput
}

// GetThingShadowMarshaler defines marshaler for GetThingShadow operation
type GetThingShadowMarshaler struct {
	Input *types.GetThingShadowInput
}

// PublishMarshaler defines marshaler for Publish operation
type PublishMarshaler struct {
	Input *types.PublishInput
}

// UpdateThingShadowMarshaler defines marshaler for UpdateThingShadow operation
type UpdateThingShadowMarshaler struct {
	Input *types.UpdateThingShadowInput
}

func MarshalDeleteThingShadowInputShapeAWSREST(v *types.DeleteThingShadowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteThingShadowInputShapeAWSJSON(v *types.DeleteThingShadowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetThingShadowInputShapeAWSREST(v *types.GetThingShadowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetThingShadowInputShapeAWSJSON(v *types.GetThingShadowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPublishInputShapeAWSREST(v *types.PublishInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPublishInputShapeAWSJSON(v *types.PublishInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateThingShadowInputShapeAWSREST(v *types.UpdateThingShadowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateThingShadowInputShapeAWSJSON(v *types.UpdateThingShadowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m DeleteThingShadowMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteThingShadowInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteThingShadowInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteThingShadowMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteThingShadow.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetThingShadowMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetThingShadowInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetThingShadowInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetThingShadowMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetThingShadow.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PublishMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPublishInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPublishInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PublishMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Publish.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateThingShadowMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateThingShadowInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateThingShadowInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateThingShadowMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateThingShadow.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
