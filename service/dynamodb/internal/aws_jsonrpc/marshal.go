// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchGetItemMarshaler defines marshaler for BatchGetItem operation
type BatchGetItemMarshaler struct {
	Input *types.BatchGetItemInput
}

// BatchWriteItemMarshaler defines marshaler for BatchWriteItem operation
type BatchWriteItemMarshaler struct {
	Input *types.BatchWriteItemInput
}

// CreateBackupMarshaler defines marshaler for CreateBackup operation
type CreateBackupMarshaler struct {
	Input *types.CreateBackupInput
}

// CreateGlobalTableMarshaler defines marshaler for CreateGlobalTable operation
type CreateGlobalTableMarshaler struct {
	Input *types.CreateGlobalTableInput
}

// CreateTableMarshaler defines marshaler for CreateTable operation
type CreateTableMarshaler struct {
	Input *types.CreateTableInput
}

// DeleteBackupMarshaler defines marshaler for DeleteBackup operation
type DeleteBackupMarshaler struct {
	Input *types.DeleteBackupInput
}

// DeleteItemMarshaler defines marshaler for DeleteItem operation
type DeleteItemMarshaler struct {
	Input *types.DeleteItemInput
}

// DeleteTableMarshaler defines marshaler for DeleteTable operation
type DeleteTableMarshaler struct {
	Input *types.DeleteTableInput
}

// DescribeBackupMarshaler defines marshaler for DescribeBackup operation
type DescribeBackupMarshaler struct {
	Input *types.DescribeBackupInput
}

// DescribeContinuousBackupsMarshaler defines marshaler for DescribeContinuousBackups operation
type DescribeContinuousBackupsMarshaler struct {
	Input *types.DescribeContinuousBackupsInput
}

// DescribeEndpointsMarshaler defines marshaler for DescribeEndpoints operation
type DescribeEndpointsMarshaler struct {
	Input *types.DescribeEndpointsInput
}

// DescribeGlobalTableMarshaler defines marshaler for DescribeGlobalTable operation
type DescribeGlobalTableMarshaler struct {
	Input *types.DescribeGlobalTableInput
}

// DescribeGlobalTableSettingsMarshaler defines marshaler for DescribeGlobalTableSettings operation
type DescribeGlobalTableSettingsMarshaler struct {
	Input *types.DescribeGlobalTableSettingsInput
}

// DescribeLimitsMarshaler defines marshaler for DescribeLimits operation
type DescribeLimitsMarshaler struct {
	Input *types.DescribeLimitsInput
}

// DescribeTableMarshaler defines marshaler for DescribeTable operation
type DescribeTableMarshaler struct {
	Input *types.DescribeTableInput
}

// DescribeTimeToLiveMarshaler defines marshaler for DescribeTimeToLive operation
type DescribeTimeToLiveMarshaler struct {
	Input *types.DescribeTimeToLiveInput
}

// GetItemMarshaler defines marshaler for GetItem operation
type GetItemMarshaler struct {
	Input *types.GetItemInput
}

// ListBackupsMarshaler defines marshaler for ListBackups operation
type ListBackupsMarshaler struct {
	Input *types.ListBackupsInput
}

// ListGlobalTablesMarshaler defines marshaler for ListGlobalTables operation
type ListGlobalTablesMarshaler struct {
	Input *types.ListGlobalTablesInput
}

// ListTablesMarshaler defines marshaler for ListTables operation
type ListTablesMarshaler struct {
	Input *types.ListTablesInput
}

// ListTagsOfResourceMarshaler defines marshaler for ListTagsOfResource operation
type ListTagsOfResourceMarshaler struct {
	Input *types.ListTagsOfResourceInput
}

// PutItemMarshaler defines marshaler for PutItem operation
type PutItemMarshaler struct {
	Input *types.PutItemInput
}

// QueryMarshaler defines marshaler for Query operation
type QueryMarshaler struct {
	Input *types.QueryInput
}

// RestoreTableFromBackupMarshaler defines marshaler for RestoreTableFromBackup operation
type RestoreTableFromBackupMarshaler struct {
	Input *types.RestoreTableFromBackupInput
}

// RestoreTableToPointInTimeMarshaler defines marshaler for RestoreTableToPointInTime operation
type RestoreTableToPointInTimeMarshaler struct {
	Input *types.RestoreTableToPointInTimeInput
}

// ScanMarshaler defines marshaler for Scan operation
type ScanMarshaler struct {
	Input *types.ScanInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// TransactGetItemsMarshaler defines marshaler for TransactGetItems operation
type TransactGetItemsMarshaler struct {
	Input *types.TransactGetItemsInput
}

// TransactWriteItemsMarshaler defines marshaler for TransactWriteItems operation
type TransactWriteItemsMarshaler struct {
	Input *types.TransactWriteItemsInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateContinuousBackupsMarshaler defines marshaler for UpdateContinuousBackups operation
type UpdateContinuousBackupsMarshaler struct {
	Input *types.UpdateContinuousBackupsInput
}

// UpdateGlobalTableMarshaler defines marshaler for UpdateGlobalTable operation
type UpdateGlobalTableMarshaler struct {
	Input *types.UpdateGlobalTableInput
}

// UpdateGlobalTableSettingsMarshaler defines marshaler for UpdateGlobalTableSettings operation
type UpdateGlobalTableSettingsMarshaler struct {
	Input *types.UpdateGlobalTableSettingsInput
}

// UpdateItemMarshaler defines marshaler for UpdateItem operation
type UpdateItemMarshaler struct {
	Input *types.UpdateItemInput
}

// UpdateTableMarshaler defines marshaler for UpdateTable operation
type UpdateTableMarshaler struct {
	Input *types.UpdateTableInput
}

// UpdateTimeToLiveMarshaler defines marshaler for UpdateTimeToLive operation
type UpdateTimeToLiveMarshaler struct {
	Input *types.UpdateTimeToLiveInput
}

func MarshalBatchGetItemInputShapeAWSJSON(v *types.BatchGetItemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchWriteItemInputShapeAWSJSON(v *types.BatchWriteItemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateBackupInputShapeAWSJSON(v *types.CreateBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateGlobalTableInputShapeAWSJSON(v *types.CreateGlobalTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTableInputShapeAWSJSON(v *types.CreateTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteBackupInputShapeAWSJSON(v *types.DeleteBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteItemInputShapeAWSJSON(v *types.DeleteItemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTableInputShapeAWSJSON(v *types.DeleteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeBackupInputShapeAWSJSON(v *types.DescribeBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeContinuousBackupsInputShapeAWSJSON(v *types.DescribeContinuousBackupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEndpointsInputShapeAWSJSON(v *types.DescribeEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGlobalTableInputShapeAWSJSON(v *types.DescribeGlobalTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGlobalTableSettingsInputShapeAWSJSON(v *types.DescribeGlobalTableSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeLimitsInputShapeAWSJSON(v *types.DescribeLimitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTableInputShapeAWSJSON(v *types.DescribeTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTimeToLiveInputShapeAWSJSON(v *types.DescribeTimeToLiveInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetItemInputShapeAWSJSON(v *types.GetItemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBackupsInputShapeAWSJSON(v *types.ListBackupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListGlobalTablesInputShapeAWSJSON(v *types.ListGlobalTablesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTablesInputShapeAWSJSON(v *types.ListTablesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsOfResourceInputShapeAWSJSON(v *types.ListTagsOfResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutItemInputShapeAWSJSON(v *types.PutItemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalQueryInputShapeAWSJSON(v *types.QueryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRestoreTableFromBackupInputShapeAWSJSON(v *types.RestoreTableFromBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRestoreTableToPointInTimeInputShapeAWSJSON(v *types.RestoreTableToPointInTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalScanInputShapeAWSJSON(v *types.ScanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTransactGetItemsInputShapeAWSJSON(v *types.TransactGetItemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTransactWriteItemsInputShapeAWSJSON(v *types.TransactWriteItemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateContinuousBackupsInputShapeAWSJSON(v *types.UpdateContinuousBackupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGlobalTableInputShapeAWSJSON(v *types.UpdateGlobalTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGlobalTableSettingsInputShapeAWSJSON(v *types.UpdateGlobalTableSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateItemInputShapeAWSJSON(v *types.UpdateItemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTableInputShapeAWSJSON(v *types.UpdateTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTimeToLiveInputShapeAWSJSON(v *types.UpdateTimeToLiveInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m BatchGetItemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetItemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetItemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetItem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchWriteItemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchWriteItemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchWriteItemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchWriteItem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBackupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGlobalTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGlobalTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGlobalTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGlobalTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteItemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteItemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteItemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteItem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBackupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeContinuousBackupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeContinuousBackupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeContinuousBackupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeContinuousBackups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEndpointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGlobalTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGlobalTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGlobalTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGlobalTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGlobalTableSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGlobalTableSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGlobalTableSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGlobalTableSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLimitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLimitsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLimitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLimits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTimeToLiveMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTimeToLiveInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTimeToLiveMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTimeToLive.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetItemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetItemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetItemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetItem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGlobalTablesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGlobalTablesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGlobalTablesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGlobalTables.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTablesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTablesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTablesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTables.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsOfResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsOfResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsOfResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsOfResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutItemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutItemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutItemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutItem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m QueryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalQueryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m QueryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Query.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreTableFromBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreTableFromBackupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreTableFromBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreTableFromBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreTableToPointInTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreTableToPointInTimeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreTableToPointInTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreTableToPointInTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ScanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalScanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ScanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Scan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TransactGetItemsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTransactGetItemsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TransactGetItemsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TransactGetItems.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TransactWriteItemsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTransactWriteItemsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TransactWriteItemsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TransactWriteItems.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateContinuousBackupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateContinuousBackupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateContinuousBackupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateContinuousBackups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGlobalTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGlobalTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGlobalTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGlobalTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGlobalTableSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGlobalTableSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGlobalTableSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGlobalTableSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateItemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateItemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateItemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateItem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTableInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTimeToLiveMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTimeToLiveInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTimeToLiveMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTimeToLive.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
