// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/lightsail/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AllocateStaticIpMarshaler defines marshaler for AllocateStaticIp operation
type AllocateStaticIpMarshaler struct {
	Input *types.AllocateStaticIpInput
}

// AttachDiskMarshaler defines marshaler for AttachDisk operation
type AttachDiskMarshaler struct {
	Input *types.AttachDiskInput
}

// AttachInstancesToLoadBalancerMarshaler defines marshaler for AttachInstancesToLoadBalancer operation
type AttachInstancesToLoadBalancerMarshaler struct {
	Input *types.AttachInstancesToLoadBalancerInput
}

// AttachLoadBalancerTlsCertificateMarshaler defines marshaler for AttachLoadBalancerTlsCertificate operation
type AttachLoadBalancerTlsCertificateMarshaler struct {
	Input *types.AttachLoadBalancerTlsCertificateInput
}

// AttachStaticIpMarshaler defines marshaler for AttachStaticIp operation
type AttachStaticIpMarshaler struct {
	Input *types.AttachStaticIpInput
}

// CloseInstancePublicPortsMarshaler defines marshaler for CloseInstancePublicPorts operation
type CloseInstancePublicPortsMarshaler struct {
	Input *types.CloseInstancePublicPortsInput
}

// CopySnapshotMarshaler defines marshaler for CopySnapshot operation
type CopySnapshotMarshaler struct {
	Input *types.CopySnapshotInput
}

// CreateCloudFormationStackMarshaler defines marshaler for CreateCloudFormationStack operation
type CreateCloudFormationStackMarshaler struct {
	Input *types.CreateCloudFormationStackInput
}

// CreateDiskMarshaler defines marshaler for CreateDisk operation
type CreateDiskMarshaler struct {
	Input *types.CreateDiskInput
}

// CreateDiskFromSnapshotMarshaler defines marshaler for CreateDiskFromSnapshot operation
type CreateDiskFromSnapshotMarshaler struct {
	Input *types.CreateDiskFromSnapshotInput
}

// CreateDiskSnapshotMarshaler defines marshaler for CreateDiskSnapshot operation
type CreateDiskSnapshotMarshaler struct {
	Input *types.CreateDiskSnapshotInput
}

// CreateDomainMarshaler defines marshaler for CreateDomain operation
type CreateDomainMarshaler struct {
	Input *types.CreateDomainInput
}

// CreateDomainEntryMarshaler defines marshaler for CreateDomainEntry operation
type CreateDomainEntryMarshaler struct {
	Input *types.CreateDomainEntryInput
}

// CreateInstanceSnapshotMarshaler defines marshaler for CreateInstanceSnapshot operation
type CreateInstanceSnapshotMarshaler struct {
	Input *types.CreateInstanceSnapshotInput
}

// CreateInstancesMarshaler defines marshaler for CreateInstances operation
type CreateInstancesMarshaler struct {
	Input *types.CreateInstancesInput
}

// CreateInstancesFromSnapshotMarshaler defines marshaler for CreateInstancesFromSnapshot operation
type CreateInstancesFromSnapshotMarshaler struct {
	Input *types.CreateInstancesFromSnapshotInput
}

// CreateKeyPairMarshaler defines marshaler for CreateKeyPair operation
type CreateKeyPairMarshaler struct {
	Input *types.CreateKeyPairInput
}

// CreateLoadBalancerMarshaler defines marshaler for CreateLoadBalancer operation
type CreateLoadBalancerMarshaler struct {
	Input *types.CreateLoadBalancerInput
}

// CreateLoadBalancerTlsCertificateMarshaler defines marshaler for CreateLoadBalancerTlsCertificate operation
type CreateLoadBalancerTlsCertificateMarshaler struct {
	Input *types.CreateLoadBalancerTlsCertificateInput
}

// CreateRelationalDatabaseMarshaler defines marshaler for CreateRelationalDatabase operation
type CreateRelationalDatabaseMarshaler struct {
	Input *types.CreateRelationalDatabaseInput
}

// CreateRelationalDatabaseFromSnapshotMarshaler defines marshaler for CreateRelationalDatabaseFromSnapshot operation
type CreateRelationalDatabaseFromSnapshotMarshaler struct {
	Input *types.CreateRelationalDatabaseFromSnapshotInput
}

// CreateRelationalDatabaseSnapshotMarshaler defines marshaler for CreateRelationalDatabaseSnapshot operation
type CreateRelationalDatabaseSnapshotMarshaler struct {
	Input *types.CreateRelationalDatabaseSnapshotInput
}

// DeleteAutoSnapshotMarshaler defines marshaler for DeleteAutoSnapshot operation
type DeleteAutoSnapshotMarshaler struct {
	Input *types.DeleteAutoSnapshotInput
}

// DeleteDiskMarshaler defines marshaler for DeleteDisk operation
type DeleteDiskMarshaler struct {
	Input *types.DeleteDiskInput
}

// DeleteDiskSnapshotMarshaler defines marshaler for DeleteDiskSnapshot operation
type DeleteDiskSnapshotMarshaler struct {
	Input *types.DeleteDiskSnapshotInput
}

// DeleteDomainMarshaler defines marshaler for DeleteDomain operation
type DeleteDomainMarshaler struct {
	Input *types.DeleteDomainInput
}

// DeleteDomainEntryMarshaler defines marshaler for DeleteDomainEntry operation
type DeleteDomainEntryMarshaler struct {
	Input *types.DeleteDomainEntryInput
}

// DeleteInstanceMarshaler defines marshaler for DeleteInstance operation
type DeleteInstanceMarshaler struct {
	Input *types.DeleteInstanceInput
}

// DeleteInstanceSnapshotMarshaler defines marshaler for DeleteInstanceSnapshot operation
type DeleteInstanceSnapshotMarshaler struct {
	Input *types.DeleteInstanceSnapshotInput
}

// DeleteKeyPairMarshaler defines marshaler for DeleteKeyPair operation
type DeleteKeyPairMarshaler struct {
	Input *types.DeleteKeyPairInput
}

// DeleteKnownHostKeysMarshaler defines marshaler for DeleteKnownHostKeys operation
type DeleteKnownHostKeysMarshaler struct {
	Input *types.DeleteKnownHostKeysInput
}

// DeleteLoadBalancerMarshaler defines marshaler for DeleteLoadBalancer operation
type DeleteLoadBalancerMarshaler struct {
	Input *types.DeleteLoadBalancerInput
}

// DeleteLoadBalancerTlsCertificateMarshaler defines marshaler for DeleteLoadBalancerTlsCertificate operation
type DeleteLoadBalancerTlsCertificateMarshaler struct {
	Input *types.DeleteLoadBalancerTlsCertificateInput
}

// DeleteRelationalDatabaseMarshaler defines marshaler for DeleteRelationalDatabase operation
type DeleteRelationalDatabaseMarshaler struct {
	Input *types.DeleteRelationalDatabaseInput
}

// DeleteRelationalDatabaseSnapshotMarshaler defines marshaler for DeleteRelationalDatabaseSnapshot operation
type DeleteRelationalDatabaseSnapshotMarshaler struct {
	Input *types.DeleteRelationalDatabaseSnapshotInput
}

// DetachDiskMarshaler defines marshaler for DetachDisk operation
type DetachDiskMarshaler struct {
	Input *types.DetachDiskInput
}

// DetachInstancesFromLoadBalancerMarshaler defines marshaler for DetachInstancesFromLoadBalancer operation
type DetachInstancesFromLoadBalancerMarshaler struct {
	Input *types.DetachInstancesFromLoadBalancerInput
}

// DetachStaticIpMarshaler defines marshaler for DetachStaticIp operation
type DetachStaticIpMarshaler struct {
	Input *types.DetachStaticIpInput
}

// DisableAddOnMarshaler defines marshaler for DisableAddOn operation
type DisableAddOnMarshaler struct {
	Input *types.DisableAddOnInput
}

// DownloadDefaultKeyPairMarshaler defines marshaler for DownloadDefaultKeyPair operation
type DownloadDefaultKeyPairMarshaler struct {
	Input *types.DownloadDefaultKeyPairInput
}

// EnableAddOnMarshaler defines marshaler for EnableAddOn operation
type EnableAddOnMarshaler struct {
	Input *types.EnableAddOnInput
}

// ExportSnapshotMarshaler defines marshaler for ExportSnapshot operation
type ExportSnapshotMarshaler struct {
	Input *types.ExportSnapshotInput
}

// GetActiveNamesMarshaler defines marshaler for GetActiveNames operation
type GetActiveNamesMarshaler struct {
	Input *types.GetActiveNamesInput
}

// GetAutoSnapshotsMarshaler defines marshaler for GetAutoSnapshots operation
type GetAutoSnapshotsMarshaler struct {
	Input *types.GetAutoSnapshotsInput
}

// GetBlueprintsMarshaler defines marshaler for GetBlueprints operation
type GetBlueprintsMarshaler struct {
	Input *types.GetBlueprintsInput
}

// GetBundlesMarshaler defines marshaler for GetBundles operation
type GetBundlesMarshaler struct {
	Input *types.GetBundlesInput
}

// GetCloudFormationStackRecordsMarshaler defines marshaler for GetCloudFormationStackRecords operation
type GetCloudFormationStackRecordsMarshaler struct {
	Input *types.GetCloudFormationStackRecordsInput
}

// GetDiskMarshaler defines marshaler for GetDisk operation
type GetDiskMarshaler struct {
	Input *types.GetDiskInput
}

// GetDiskSnapshotMarshaler defines marshaler for GetDiskSnapshot operation
type GetDiskSnapshotMarshaler struct {
	Input *types.GetDiskSnapshotInput
}

// GetDiskSnapshotsMarshaler defines marshaler for GetDiskSnapshots operation
type GetDiskSnapshotsMarshaler struct {
	Input *types.GetDiskSnapshotsInput
}

// GetDisksMarshaler defines marshaler for GetDisks operation
type GetDisksMarshaler struct {
	Input *types.GetDisksInput
}

// GetDomainMarshaler defines marshaler for GetDomain operation
type GetDomainMarshaler struct {
	Input *types.GetDomainInput
}

// GetDomainsMarshaler defines marshaler for GetDomains operation
type GetDomainsMarshaler struct {
	Input *types.GetDomainsInput
}

// GetExportSnapshotRecordsMarshaler defines marshaler for GetExportSnapshotRecords operation
type GetExportSnapshotRecordsMarshaler struct {
	Input *types.GetExportSnapshotRecordsInput
}

// GetInstanceMarshaler defines marshaler for GetInstance operation
type GetInstanceMarshaler struct {
	Input *types.GetInstanceInput
}

// GetInstanceAccessDetailsMarshaler defines marshaler for GetInstanceAccessDetails operation
type GetInstanceAccessDetailsMarshaler struct {
	Input *types.GetInstanceAccessDetailsInput
}

// GetInstanceMetricDataMarshaler defines marshaler for GetInstanceMetricData operation
type GetInstanceMetricDataMarshaler struct {
	Input *types.GetInstanceMetricDataInput
}

// GetInstancePortStatesMarshaler defines marshaler for GetInstancePortStates operation
type GetInstancePortStatesMarshaler struct {
	Input *types.GetInstancePortStatesInput
}

// GetInstanceSnapshotMarshaler defines marshaler for GetInstanceSnapshot operation
type GetInstanceSnapshotMarshaler struct {
	Input *types.GetInstanceSnapshotInput
}

// GetInstanceSnapshotsMarshaler defines marshaler for GetInstanceSnapshots operation
type GetInstanceSnapshotsMarshaler struct {
	Input *types.GetInstanceSnapshotsInput
}

// GetInstanceStateMarshaler defines marshaler for GetInstanceState operation
type GetInstanceStateMarshaler struct {
	Input *types.GetInstanceStateInput
}

// GetInstancesMarshaler defines marshaler for GetInstances operation
type GetInstancesMarshaler struct {
	Input *types.GetInstancesInput
}

// GetKeyPairMarshaler defines marshaler for GetKeyPair operation
type GetKeyPairMarshaler struct {
	Input *types.GetKeyPairInput
}

// GetKeyPairsMarshaler defines marshaler for GetKeyPairs operation
type GetKeyPairsMarshaler struct {
	Input *types.GetKeyPairsInput
}

// GetLoadBalancerMarshaler defines marshaler for GetLoadBalancer operation
type GetLoadBalancerMarshaler struct {
	Input *types.GetLoadBalancerInput
}

// GetLoadBalancerMetricDataMarshaler defines marshaler for GetLoadBalancerMetricData operation
type GetLoadBalancerMetricDataMarshaler struct {
	Input *types.GetLoadBalancerMetricDataInput
}

// GetLoadBalancerTlsCertificatesMarshaler defines marshaler for GetLoadBalancerTlsCertificates operation
type GetLoadBalancerTlsCertificatesMarshaler struct {
	Input *types.GetLoadBalancerTlsCertificatesInput
}

// GetLoadBalancersMarshaler defines marshaler for GetLoadBalancers operation
type GetLoadBalancersMarshaler struct {
	Input *types.GetLoadBalancersInput
}

// GetOperationMarshaler defines marshaler for GetOperation operation
type GetOperationMarshaler struct {
	Input *types.GetOperationInput
}

// GetOperationsMarshaler defines marshaler for GetOperations operation
type GetOperationsMarshaler struct {
	Input *types.GetOperationsInput
}

// GetOperationsForResourceMarshaler defines marshaler for GetOperationsForResource operation
type GetOperationsForResourceMarshaler struct {
	Input *types.GetOperationsForResourceInput
}

// GetRegionsMarshaler defines marshaler for GetRegions operation
type GetRegionsMarshaler struct {
	Input *types.GetRegionsInput
}

// GetRelationalDatabaseMarshaler defines marshaler for GetRelationalDatabase operation
type GetRelationalDatabaseMarshaler struct {
	Input *types.GetRelationalDatabaseInput
}

// GetRelationalDatabaseBlueprintsMarshaler defines marshaler for GetRelationalDatabaseBlueprints operation
type GetRelationalDatabaseBlueprintsMarshaler struct {
	Input *types.GetRelationalDatabaseBlueprintsInput
}

// GetRelationalDatabaseBundlesMarshaler defines marshaler for GetRelationalDatabaseBundles operation
type GetRelationalDatabaseBundlesMarshaler struct {
	Input *types.GetRelationalDatabaseBundlesInput
}

// GetRelationalDatabaseEventsMarshaler defines marshaler for GetRelationalDatabaseEvents operation
type GetRelationalDatabaseEventsMarshaler struct {
	Input *types.GetRelationalDatabaseEventsInput
}

// GetRelationalDatabaseLogEventsMarshaler defines marshaler for GetRelationalDatabaseLogEvents operation
type GetRelationalDatabaseLogEventsMarshaler struct {
	Input *types.GetRelationalDatabaseLogEventsInput
}

// GetRelationalDatabaseLogStreamsMarshaler defines marshaler for GetRelationalDatabaseLogStreams operation
type GetRelationalDatabaseLogStreamsMarshaler struct {
	Input *types.GetRelationalDatabaseLogStreamsInput
}

// GetRelationalDatabaseMasterUserPasswordMarshaler defines marshaler for GetRelationalDatabaseMasterUserPassword operation
type GetRelationalDatabaseMasterUserPasswordMarshaler struct {
	Input *types.GetRelationalDatabaseMasterUserPasswordInput
}

// GetRelationalDatabaseMetricDataMarshaler defines marshaler for GetRelationalDatabaseMetricData operation
type GetRelationalDatabaseMetricDataMarshaler struct {
	Input *types.GetRelationalDatabaseMetricDataInput
}

// GetRelationalDatabaseParametersMarshaler defines marshaler for GetRelationalDatabaseParameters operation
type GetRelationalDatabaseParametersMarshaler struct {
	Input *types.GetRelationalDatabaseParametersInput
}

// GetRelationalDatabaseSnapshotMarshaler defines marshaler for GetRelationalDatabaseSnapshot operation
type GetRelationalDatabaseSnapshotMarshaler struct {
	Input *types.GetRelationalDatabaseSnapshotInput
}

// GetRelationalDatabaseSnapshotsMarshaler defines marshaler for GetRelationalDatabaseSnapshots operation
type GetRelationalDatabaseSnapshotsMarshaler struct {
	Input *types.GetRelationalDatabaseSnapshotsInput
}

// GetRelationalDatabasesMarshaler defines marshaler for GetRelationalDatabases operation
type GetRelationalDatabasesMarshaler struct {
	Input *types.GetRelationalDatabasesInput
}

// GetStaticIpMarshaler defines marshaler for GetStaticIp operation
type GetStaticIpMarshaler struct {
	Input *types.GetStaticIpInput
}

// GetStaticIpsMarshaler defines marshaler for GetStaticIps operation
type GetStaticIpsMarshaler struct {
	Input *types.GetStaticIpsInput
}

// ImportKeyPairMarshaler defines marshaler for ImportKeyPair operation
type ImportKeyPairMarshaler struct {
	Input *types.ImportKeyPairInput
}

// IsVpcPeeredMarshaler defines marshaler for IsVpcPeered operation
type IsVpcPeeredMarshaler struct {
	Input *types.IsVpcPeeredInput
}

// OpenInstancePublicPortsMarshaler defines marshaler for OpenInstancePublicPorts operation
type OpenInstancePublicPortsMarshaler struct {
	Input *types.OpenInstancePublicPortsInput
}

// PeerVpcMarshaler defines marshaler for PeerVpc operation
type PeerVpcMarshaler struct {
	Input *types.PeerVpcInput
}

// PutInstancePublicPortsMarshaler defines marshaler for PutInstancePublicPorts operation
type PutInstancePublicPortsMarshaler struct {
	Input *types.PutInstancePublicPortsInput
}

// RebootInstanceMarshaler defines marshaler for RebootInstance operation
type RebootInstanceMarshaler struct {
	Input *types.RebootInstanceInput
}

// RebootRelationalDatabaseMarshaler defines marshaler for RebootRelationalDatabase operation
type RebootRelationalDatabaseMarshaler struct {
	Input *types.RebootRelationalDatabaseInput
}

// ReleaseStaticIpMarshaler defines marshaler for ReleaseStaticIp operation
type ReleaseStaticIpMarshaler struct {
	Input *types.ReleaseStaticIpInput
}

// StartInstanceMarshaler defines marshaler for StartInstance operation
type StartInstanceMarshaler struct {
	Input *types.StartInstanceInput
}

// StartRelationalDatabaseMarshaler defines marshaler for StartRelationalDatabase operation
type StartRelationalDatabaseMarshaler struct {
	Input *types.StartRelationalDatabaseInput
}

// StopInstanceMarshaler defines marshaler for StopInstance operation
type StopInstanceMarshaler struct {
	Input *types.StopInstanceInput
}

// StopRelationalDatabaseMarshaler defines marshaler for StopRelationalDatabase operation
type StopRelationalDatabaseMarshaler struct {
	Input *types.StopRelationalDatabaseInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UnpeerVpcMarshaler defines marshaler for UnpeerVpc operation
type UnpeerVpcMarshaler struct {
	Input *types.UnpeerVpcInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateDomainEntryMarshaler defines marshaler for UpdateDomainEntry operation
type UpdateDomainEntryMarshaler struct {
	Input *types.UpdateDomainEntryInput
}

// UpdateLoadBalancerAttributeMarshaler defines marshaler for UpdateLoadBalancerAttribute operation
type UpdateLoadBalancerAttributeMarshaler struct {
	Input *types.UpdateLoadBalancerAttributeInput
}

// UpdateRelationalDatabaseMarshaler defines marshaler for UpdateRelationalDatabase operation
type UpdateRelationalDatabaseMarshaler struct {
	Input *types.UpdateRelationalDatabaseInput
}

// UpdateRelationalDatabaseParametersMarshaler defines marshaler for UpdateRelationalDatabaseParameters operation
type UpdateRelationalDatabaseParametersMarshaler struct {
	Input *types.UpdateRelationalDatabaseParametersInput
}

func MarshalAllocateStaticIpInputShapeAWSJSON(v *types.AllocateStaticIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAttachDiskInputShapeAWSJSON(v *types.AttachDiskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAttachInstancesToLoadBalancerInputShapeAWSJSON(v *types.AttachInstancesToLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAttachLoadBalancerTlsCertificateInputShapeAWSJSON(v *types.AttachLoadBalancerTlsCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAttachStaticIpInputShapeAWSJSON(v *types.AttachStaticIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCloseInstancePublicPortsInputShapeAWSJSON(v *types.CloseInstancePublicPortsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCopySnapshotInputShapeAWSJSON(v *types.CopySnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCloudFormationStackInputShapeAWSJSON(v *types.CreateCloudFormationStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDiskInputShapeAWSJSON(v *types.CreateDiskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDiskFromSnapshotInputShapeAWSJSON(v *types.CreateDiskFromSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDiskSnapshotInputShapeAWSJSON(v *types.CreateDiskSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDomainInputShapeAWSJSON(v *types.CreateDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDomainEntryInputShapeAWSJSON(v *types.CreateDomainEntryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateInstanceSnapshotInputShapeAWSJSON(v *types.CreateInstanceSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateInstancesInputShapeAWSJSON(v *types.CreateInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateInstancesFromSnapshotInputShapeAWSJSON(v *types.CreateInstancesFromSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateKeyPairInputShapeAWSJSON(v *types.CreateKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateLoadBalancerInputShapeAWSJSON(v *types.CreateLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateLoadBalancerTlsCertificateInputShapeAWSJSON(v *types.CreateLoadBalancerTlsCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRelationalDatabaseInputShapeAWSJSON(v *types.CreateRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRelationalDatabaseFromSnapshotInputShapeAWSJSON(v *types.CreateRelationalDatabaseFromSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRelationalDatabaseSnapshotInputShapeAWSJSON(v *types.CreateRelationalDatabaseSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteAutoSnapshotInputShapeAWSJSON(v *types.DeleteAutoSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDiskInputShapeAWSJSON(v *types.DeleteDiskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDiskSnapshotInputShapeAWSJSON(v *types.DeleteDiskSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDomainInputShapeAWSJSON(v *types.DeleteDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDomainEntryInputShapeAWSJSON(v *types.DeleteDomainEntryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteInstanceInputShapeAWSJSON(v *types.DeleteInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteInstanceSnapshotInputShapeAWSJSON(v *types.DeleteInstanceSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteKeyPairInputShapeAWSJSON(v *types.DeleteKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteKnownHostKeysInputShapeAWSJSON(v *types.DeleteKnownHostKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteLoadBalancerInputShapeAWSJSON(v *types.DeleteLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteLoadBalancerTlsCertificateInputShapeAWSJSON(v *types.DeleteLoadBalancerTlsCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRelationalDatabaseInputShapeAWSJSON(v *types.DeleteRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRelationalDatabaseSnapshotInputShapeAWSJSON(v *types.DeleteRelationalDatabaseSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetachDiskInputShapeAWSJSON(v *types.DetachDiskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetachInstancesFromLoadBalancerInputShapeAWSJSON(v *types.DetachInstancesFromLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetachStaticIpInputShapeAWSJSON(v *types.DetachStaticIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableAddOnInputShapeAWSJSON(v *types.DisableAddOnInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDownloadDefaultKeyPairInputShapeAWSJSON(v *types.DownloadDefaultKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableAddOnInputShapeAWSJSON(v *types.EnableAddOnInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalExportSnapshotInputShapeAWSJSON(v *types.ExportSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetActiveNamesInputShapeAWSJSON(v *types.GetActiveNamesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAutoSnapshotsInputShapeAWSJSON(v *types.GetAutoSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetBlueprintsInputShapeAWSJSON(v *types.GetBlueprintsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetBundlesInputShapeAWSJSON(v *types.GetBundlesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCloudFormationStackRecordsInputShapeAWSJSON(v *types.GetCloudFormationStackRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDiskInputShapeAWSJSON(v *types.GetDiskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDiskSnapshotInputShapeAWSJSON(v *types.GetDiskSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDiskSnapshotsInputShapeAWSJSON(v *types.GetDiskSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDisksInputShapeAWSJSON(v *types.GetDisksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDomainInputShapeAWSJSON(v *types.GetDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDomainsInputShapeAWSJSON(v *types.GetDomainsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetExportSnapshotRecordsInputShapeAWSJSON(v *types.GetExportSnapshotRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceInputShapeAWSJSON(v *types.GetInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceAccessDetailsInputShapeAWSJSON(v *types.GetInstanceAccessDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceMetricDataInputShapeAWSJSON(v *types.GetInstanceMetricDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstancePortStatesInputShapeAWSJSON(v *types.GetInstancePortStatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceSnapshotInputShapeAWSJSON(v *types.GetInstanceSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceSnapshotsInputShapeAWSJSON(v *types.GetInstanceSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceStateInputShapeAWSJSON(v *types.GetInstanceStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstancesInputShapeAWSJSON(v *types.GetInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetKeyPairInputShapeAWSJSON(v *types.GetKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetKeyPairsInputShapeAWSJSON(v *types.GetKeyPairsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLoadBalancerInputShapeAWSJSON(v *types.GetLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLoadBalancerMetricDataInputShapeAWSJSON(v *types.GetLoadBalancerMetricDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLoadBalancerTlsCertificatesInputShapeAWSJSON(v *types.GetLoadBalancerTlsCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLoadBalancersInputShapeAWSJSON(v *types.GetLoadBalancersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetOperationInputShapeAWSJSON(v *types.GetOperationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetOperationsInputShapeAWSJSON(v *types.GetOperationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetOperationsForResourceInputShapeAWSJSON(v *types.GetOperationsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRegionsInputShapeAWSJSON(v *types.GetRegionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseInputShapeAWSJSON(v *types.GetRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseBlueprintsInputShapeAWSJSON(v *types.GetRelationalDatabaseBlueprintsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseBundlesInputShapeAWSJSON(v *types.GetRelationalDatabaseBundlesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseEventsInputShapeAWSJSON(v *types.GetRelationalDatabaseEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseLogEventsInputShapeAWSJSON(v *types.GetRelationalDatabaseLogEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseLogStreamsInputShapeAWSJSON(v *types.GetRelationalDatabaseLogStreamsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseMasterUserPasswordInputShapeAWSJSON(v *types.GetRelationalDatabaseMasterUserPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseMetricDataInputShapeAWSJSON(v *types.GetRelationalDatabaseMetricDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseParametersInputShapeAWSJSON(v *types.GetRelationalDatabaseParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseSnapshotInputShapeAWSJSON(v *types.GetRelationalDatabaseSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabaseSnapshotsInputShapeAWSJSON(v *types.GetRelationalDatabaseSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRelationalDatabasesInputShapeAWSJSON(v *types.GetRelationalDatabasesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetStaticIpInputShapeAWSJSON(v *types.GetStaticIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetStaticIpsInputShapeAWSJSON(v *types.GetStaticIpsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalImportKeyPairInputShapeAWSJSON(v *types.ImportKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalIsVpcPeeredInputShapeAWSJSON(v *types.IsVpcPeeredInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalOpenInstancePublicPortsInputShapeAWSJSON(v *types.OpenInstancePublicPortsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPeerVpcInputShapeAWSJSON(v *types.PeerVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutInstancePublicPortsInputShapeAWSJSON(v *types.PutInstancePublicPortsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRebootInstanceInputShapeAWSJSON(v *types.RebootInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRebootRelationalDatabaseInputShapeAWSJSON(v *types.RebootRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalReleaseStaticIpInputShapeAWSJSON(v *types.ReleaseStaticIpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartInstanceInputShapeAWSJSON(v *types.StartInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartRelationalDatabaseInputShapeAWSJSON(v *types.StartRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopInstanceInputShapeAWSJSON(v *types.StopInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopRelationalDatabaseInputShapeAWSJSON(v *types.StopRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUnpeerVpcInputShapeAWSJSON(v *types.UnpeerVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDomainEntryInputShapeAWSJSON(v *types.UpdateDomainEntryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateLoadBalancerAttributeInputShapeAWSJSON(v *types.UpdateLoadBalancerAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateRelationalDatabaseInputShapeAWSJSON(v *types.UpdateRelationalDatabaseInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateRelationalDatabaseParametersInputShapeAWSJSON(v *types.UpdateRelationalDatabaseParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AllocateStaticIpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAllocateStaticIpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AllocateStaticIpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AllocateStaticIp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachDiskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachDiskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachDiskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachDisk.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachInstancesToLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachInstancesToLoadBalancerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachInstancesToLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachInstancesToLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachLoadBalancerTlsCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachLoadBalancerTlsCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachLoadBalancerTlsCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachLoadBalancerTlsCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachStaticIpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachStaticIpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachStaticIpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachStaticIp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CloseInstancePublicPortsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCloseInstancePublicPortsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CloseInstancePublicPortsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CloseInstancePublicPorts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopySnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopySnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopySnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopySnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCloudFormationStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCloudFormationStackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCloudFormationStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCloudFormationStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDiskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDiskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDiskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDisk.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDiskFromSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDiskFromSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDiskFromSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDiskFromSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDiskSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDiskSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDiskSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDiskSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDomainEntryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDomainEntryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDomainEntryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDomainEntry.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInstanceSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInstanceSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInstanceSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInstanceSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInstancesFromSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInstancesFromSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInstancesFromSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInstancesFromSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateKeyPairInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoadBalancerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoadBalancerTlsCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoadBalancerTlsCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoadBalancerTlsCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoadBalancerTlsCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRelationalDatabaseFromSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRelationalDatabaseFromSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRelationalDatabaseFromSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRelationalDatabaseFromSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRelationalDatabaseSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRelationalDatabaseSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRelationalDatabaseSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRelationalDatabaseSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAutoSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAutoSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAutoSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAutoSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDiskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDiskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDiskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDisk.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDiskSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDiskSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDiskSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDiskSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDomainEntryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDomainEntryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDomainEntryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDomainEntry.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInstanceSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInstanceSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInstanceSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInstanceSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteKeyPairInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteKnownHostKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteKnownHostKeysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteKnownHostKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteKnownHostKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoadBalancerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoadBalancerTlsCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoadBalancerTlsCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoadBalancerTlsCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoadBalancerTlsCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRelationalDatabaseSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRelationalDatabaseSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRelationalDatabaseSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRelationalDatabaseSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachDiskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachDiskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachDiskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachDisk.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachInstancesFromLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachInstancesFromLoadBalancerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachInstancesFromLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachInstancesFromLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachStaticIpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachStaticIpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachStaticIpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachStaticIp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableAddOnMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableAddOnInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableAddOnMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableAddOn.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DownloadDefaultKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDownloadDefaultKeyPairInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DownloadDefaultKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DownloadDefaultKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableAddOnMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableAddOnInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableAddOnMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableAddOn.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetActiveNamesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetActiveNamesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetActiveNamesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetActiveNames.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAutoSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAutoSnapshotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAutoSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAutoSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBlueprintsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBlueprintsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBlueprintsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBlueprints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBundlesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBundlesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBundlesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBundles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCloudFormationStackRecordsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCloudFormationStackRecordsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCloudFormationStackRecordsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCloudFormationStackRecords.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDiskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDiskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDiskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDisk.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDiskSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDiskSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDiskSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDiskSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDiskSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDiskSnapshotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDiskSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDiskSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDisksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDisksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDisksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDisks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDomainsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDomainsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDomainsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDomains.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetExportSnapshotRecordsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetExportSnapshotRecordsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetExportSnapshotRecordsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetExportSnapshotRecords.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceAccessDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceAccessDetailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceAccessDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceAccessDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceMetricDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceMetricDataInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceMetricDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceMetricData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstancePortStatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstancePortStatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstancePortStatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstancePortStates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceSnapshotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceStateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetKeyPairInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetKeyPairsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetKeyPairsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetKeyPairsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetKeyPairs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoadBalancerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoadBalancerMetricDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoadBalancerMetricDataInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoadBalancerMetricDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoadBalancerMetricData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoadBalancerTlsCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoadBalancerTlsCertificatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoadBalancerTlsCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoadBalancerTlsCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoadBalancersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoadBalancersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoadBalancersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoadBalancers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOperationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOperationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOperationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOperation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOperationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOperationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOperationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOperations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOperationsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOperationsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOperationsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOperationsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRegionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRegionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRegionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRegions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseBlueprintsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseBlueprintsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseBlueprintsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseBlueprints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseBundlesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseBundlesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseBundlesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseBundles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseLogEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseLogEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseLogEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseLogEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseLogStreamsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseLogStreamsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseLogStreamsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseLogStreams.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseMasterUserPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseMasterUserPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseMasterUserPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseMasterUserPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseMetricDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseMetricDataInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseMetricDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseMetricData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseParametersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabaseSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabaseSnapshotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabaseSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabaseSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRelationalDatabasesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRelationalDatabasesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRelationalDatabasesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRelationalDatabases.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetStaticIpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetStaticIpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetStaticIpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetStaticIp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetStaticIpsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetStaticIpsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetStaticIpsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetStaticIps.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportKeyPairInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m IsVpcPeeredMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalIsVpcPeeredInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m IsVpcPeeredMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "IsVpcPeered.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m OpenInstancePublicPortsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalOpenInstancePublicPortsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m OpenInstancePublicPortsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "OpenInstancePublicPorts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PeerVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPeerVpcInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PeerVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PeerVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutInstancePublicPortsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutInstancePublicPortsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutInstancePublicPortsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutInstancePublicPorts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReleaseStaticIpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReleaseStaticIpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReleaseStaticIpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReleaseStaticIp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnpeerVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnpeerVpcInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnpeerVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnpeerVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDomainEntryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDomainEntryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDomainEntryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDomainEntry.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateLoadBalancerAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateLoadBalancerAttributeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateLoadBalancerAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateLoadBalancerAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRelationalDatabaseMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRelationalDatabaseInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRelationalDatabaseMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRelationalDatabase.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRelationalDatabaseParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRelationalDatabaseParametersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRelationalDatabaseParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRelationalDatabaseParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
