// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/rekognition/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CompareFacesMarshaler defines marshaler for CompareFaces operation
type CompareFacesMarshaler struct {
	Input *types.CompareFacesInput
}

// CreateCollectionMarshaler defines marshaler for CreateCollection operation
type CreateCollectionMarshaler struct {
	Input *types.CreateCollectionInput
}

// CreateStreamProcessorMarshaler defines marshaler for CreateStreamProcessor operation
type CreateStreamProcessorMarshaler struct {
	Input *types.CreateStreamProcessorInput
}

// DeleteCollectionMarshaler defines marshaler for DeleteCollection operation
type DeleteCollectionMarshaler struct {
	Input *types.DeleteCollectionInput
}

// DeleteFacesMarshaler defines marshaler for DeleteFaces operation
type DeleteFacesMarshaler struct {
	Input *types.DeleteFacesInput
}

// DeleteStreamProcessorMarshaler defines marshaler for DeleteStreamProcessor operation
type DeleteStreamProcessorMarshaler struct {
	Input *types.DeleteStreamProcessorInput
}

// DescribeCollectionMarshaler defines marshaler for DescribeCollection operation
type DescribeCollectionMarshaler struct {
	Input *types.DescribeCollectionInput
}

// DescribeStreamProcessorMarshaler defines marshaler for DescribeStreamProcessor operation
type DescribeStreamProcessorMarshaler struct {
	Input *types.DescribeStreamProcessorInput
}

// DetectFacesMarshaler defines marshaler for DetectFaces operation
type DetectFacesMarshaler struct {
	Input *types.DetectFacesInput
}

// DetectLabelsMarshaler defines marshaler for DetectLabels operation
type DetectLabelsMarshaler struct {
	Input *types.DetectLabelsInput
}

// DetectModerationLabelsMarshaler defines marshaler for DetectModerationLabels operation
type DetectModerationLabelsMarshaler struct {
	Input *types.DetectModerationLabelsInput
}

// DetectTextMarshaler defines marshaler for DetectText operation
type DetectTextMarshaler struct {
	Input *types.DetectTextInput
}

// GetCelebrityInfoMarshaler defines marshaler for GetCelebrityInfo operation
type GetCelebrityInfoMarshaler struct {
	Input *types.GetCelebrityInfoInput
}

// GetCelebrityRecognitionMarshaler defines marshaler for GetCelebrityRecognition operation
type GetCelebrityRecognitionMarshaler struct {
	Input *types.GetCelebrityRecognitionInput
}

// GetContentModerationMarshaler defines marshaler for GetContentModeration operation
type GetContentModerationMarshaler struct {
	Input *types.GetContentModerationInput
}

// GetFaceDetectionMarshaler defines marshaler for GetFaceDetection operation
type GetFaceDetectionMarshaler struct {
	Input *types.GetFaceDetectionInput
}

// GetFaceSearchMarshaler defines marshaler for GetFaceSearch operation
type GetFaceSearchMarshaler struct {
	Input *types.GetFaceSearchInput
}

// GetLabelDetectionMarshaler defines marshaler for GetLabelDetection operation
type GetLabelDetectionMarshaler struct {
	Input *types.GetLabelDetectionInput
}

// GetPersonTrackingMarshaler defines marshaler for GetPersonTracking operation
type GetPersonTrackingMarshaler struct {
	Input *types.GetPersonTrackingInput
}

// IndexFacesMarshaler defines marshaler for IndexFaces operation
type IndexFacesMarshaler struct {
	Input *types.IndexFacesInput
}

// ListCollectionsMarshaler defines marshaler for ListCollections operation
type ListCollectionsMarshaler struct {
	Input *types.ListCollectionsInput
}

// ListFacesMarshaler defines marshaler for ListFaces operation
type ListFacesMarshaler struct {
	Input *types.ListFacesInput
}

// ListStreamProcessorsMarshaler defines marshaler for ListStreamProcessors operation
type ListStreamProcessorsMarshaler struct {
	Input *types.ListStreamProcessorsInput
}

// RecognizeCelebritiesMarshaler defines marshaler for RecognizeCelebrities operation
type RecognizeCelebritiesMarshaler struct {
	Input *types.RecognizeCelebritiesInput
}

// SearchFacesMarshaler defines marshaler for SearchFaces operation
type SearchFacesMarshaler struct {
	Input *types.SearchFacesInput
}

// SearchFacesByImageMarshaler defines marshaler for SearchFacesByImage operation
type SearchFacesByImageMarshaler struct {
	Input *types.SearchFacesByImageInput
}

// StartCelebrityRecognitionMarshaler defines marshaler for StartCelebrityRecognition operation
type StartCelebrityRecognitionMarshaler struct {
	Input *types.StartCelebrityRecognitionInput
}

// StartContentModerationMarshaler defines marshaler for StartContentModeration operation
type StartContentModerationMarshaler struct {
	Input *types.StartContentModerationInput
}

// StartFaceDetectionMarshaler defines marshaler for StartFaceDetection operation
type StartFaceDetectionMarshaler struct {
	Input *types.StartFaceDetectionInput
}

// StartFaceSearchMarshaler defines marshaler for StartFaceSearch operation
type StartFaceSearchMarshaler struct {
	Input *types.StartFaceSearchInput
}

// StartLabelDetectionMarshaler defines marshaler for StartLabelDetection operation
type StartLabelDetectionMarshaler struct {
	Input *types.StartLabelDetectionInput
}

// StartPersonTrackingMarshaler defines marshaler for StartPersonTracking operation
type StartPersonTrackingMarshaler struct {
	Input *types.StartPersonTrackingInput
}

// StartStreamProcessorMarshaler defines marshaler for StartStreamProcessor operation
type StartStreamProcessorMarshaler struct {
	Input *types.StartStreamProcessorInput
}

// StopStreamProcessorMarshaler defines marshaler for StopStreamProcessor operation
type StopStreamProcessorMarshaler struct {
	Input *types.StopStreamProcessorInput
}

func MarshalCompareFacesInputShapeAWSJSON(v *types.CompareFacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCollectionInputShapeAWSJSON(v *types.CreateCollectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateStreamProcessorInputShapeAWSJSON(v *types.CreateStreamProcessorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteCollectionInputShapeAWSJSON(v *types.DeleteCollectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteFacesInputShapeAWSJSON(v *types.DeleteFacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteStreamProcessorInputShapeAWSJSON(v *types.DeleteStreamProcessorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCollectionInputShapeAWSJSON(v *types.DescribeCollectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeStreamProcessorInputShapeAWSJSON(v *types.DescribeStreamProcessorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetectFacesInputShapeAWSJSON(v *types.DetectFacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetectLabelsInputShapeAWSJSON(v *types.DetectLabelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetectModerationLabelsInputShapeAWSJSON(v *types.DetectModerationLabelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetectTextInputShapeAWSJSON(v *types.DetectTextInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCelebrityInfoInputShapeAWSJSON(v *types.GetCelebrityInfoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCelebrityRecognitionInputShapeAWSJSON(v *types.GetCelebrityRecognitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetContentModerationInputShapeAWSJSON(v *types.GetContentModerationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetFaceDetectionInputShapeAWSJSON(v *types.GetFaceDetectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetFaceSearchInputShapeAWSJSON(v *types.GetFaceSearchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLabelDetectionInputShapeAWSJSON(v *types.GetLabelDetectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPersonTrackingInputShapeAWSJSON(v *types.GetPersonTrackingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalIndexFacesInputShapeAWSJSON(v *types.IndexFacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListCollectionsInputShapeAWSJSON(v *types.ListCollectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListFacesInputShapeAWSJSON(v *types.ListFacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListStreamProcessorsInputShapeAWSJSON(v *types.ListStreamProcessorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRecognizeCelebritiesInputShapeAWSJSON(v *types.RecognizeCelebritiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSearchFacesInputShapeAWSJSON(v *types.SearchFacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSearchFacesByImageInputShapeAWSJSON(v *types.SearchFacesByImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartCelebrityRecognitionInputShapeAWSJSON(v *types.StartCelebrityRecognitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartContentModerationInputShapeAWSJSON(v *types.StartContentModerationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartFaceDetectionInputShapeAWSJSON(v *types.StartFaceDetectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartFaceSearchInputShapeAWSJSON(v *types.StartFaceSearchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartLabelDetectionInputShapeAWSJSON(v *types.StartLabelDetectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartPersonTrackingInputShapeAWSJSON(v *types.StartPersonTrackingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartStreamProcessorInputShapeAWSJSON(v *types.StartStreamProcessorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopStreamProcessorInputShapeAWSJSON(v *types.StopStreamProcessorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CompareFacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCompareFacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CompareFacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CompareFaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCollectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCollectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCollectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCollection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStreamProcessorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStreamProcessorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStreamProcessorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStreamProcessor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCollectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCollectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCollectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCollection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStreamProcessorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStreamProcessorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStreamProcessorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStreamProcessor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCollectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCollectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCollectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCollection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStreamProcessorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStreamProcessorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStreamProcessorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStreamProcessor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectFacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectFacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectFacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectFaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectLabelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectLabelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectLabelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectLabels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectModerationLabelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectModerationLabelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectModerationLabelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectModerationLabels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectTextMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectTextInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectTextMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectText.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCelebrityInfoMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCelebrityInfoInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCelebrityInfoMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCelebrityInfo.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCelebrityRecognitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCelebrityRecognitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCelebrityRecognitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCelebrityRecognition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetContentModerationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetContentModerationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetContentModerationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetContentModeration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFaceDetectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFaceDetectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFaceDetectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFaceDetection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFaceSearchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFaceSearchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFaceSearchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFaceSearch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLabelDetectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLabelDetectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLabelDetectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLabelDetection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPersonTrackingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPersonTrackingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPersonTrackingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPersonTracking.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m IndexFacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalIndexFacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m IndexFacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "IndexFaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCollectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCollectionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCollectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCollections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStreamProcessorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStreamProcessorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStreamProcessorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStreamProcessors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RecognizeCelebritiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRecognizeCelebritiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RecognizeCelebritiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RecognizeCelebrities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchFacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchFacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchFacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchFaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchFacesByImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchFacesByImageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchFacesByImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchFacesByImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartCelebrityRecognitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartCelebrityRecognitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartCelebrityRecognitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartCelebrityRecognition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartContentModerationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartContentModerationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartContentModerationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartContentModeration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartFaceDetectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartFaceDetectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartFaceDetectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartFaceDetection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartFaceSearchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartFaceSearchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartFaceSearchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartFaceSearch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartLabelDetectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartLabelDetectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartLabelDetectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartLabelDetection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartPersonTrackingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartPersonTrackingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartPersonTrackingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartPersonTracking.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartStreamProcessorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartStreamProcessorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartStreamProcessorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartStreamProcessor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopStreamProcessorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopStreamProcessorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopStreamProcessorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopStreamProcessor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
