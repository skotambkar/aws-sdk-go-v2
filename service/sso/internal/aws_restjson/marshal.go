// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/sso/types"
)

var _ bytes.Buffer
var _ awserr.Error

// GetRoleCredentialsMarshaler defines marshaler for GetRoleCredentials operation
type GetRoleCredentialsMarshaler struct {
	Input *types.GetRoleCredentialsInput
}

// ListAccountRolesMarshaler defines marshaler for ListAccountRoles operation
type ListAccountRolesMarshaler struct {
	Input *types.ListAccountRolesInput
}

// ListAccountsMarshaler defines marshaler for ListAccounts operation
type ListAccountsMarshaler struct {
	Input *types.ListAccountsInput
}

// LogoutMarshaler defines marshaler for Logout operation
type LogoutMarshaler struct {
	Input *types.LogoutInput
}

func MarshalGetRoleCredentialsInputShapeAWSREST(v *types.GetRoleCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRoleCredentialsInputShapeAWSJSON(v *types.GetRoleCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListAccountRolesInputShapeAWSREST(v *types.ListAccountRolesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListAccountRolesInputShapeAWSJSON(v *types.ListAccountRolesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListAccountsInputShapeAWSREST(v *types.ListAccountsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListAccountsInputShapeAWSJSON(v *types.ListAccountsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalLogoutInputShapeAWSREST(v *types.LogoutInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalLogoutInputShapeAWSJSON(v *types.LogoutInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m GetRoleCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRoleCredentialsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRoleCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRoleCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRoleCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccountRolesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccountRolesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListAccountRolesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccountRolesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccountRoles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccountsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccountsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListAccountsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccountsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccounts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m LogoutMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalLogoutInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalLogoutInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m LogoutMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Logout.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
