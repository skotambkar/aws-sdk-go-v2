// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/rds/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddRoleToDBClusterMarshaler defines marshaler for AddRoleToDBCluster operation
type AddRoleToDBClusterMarshaler struct {
	Input *types.AddRoleToDBClusterInput
}

// AddRoleToDBInstanceMarshaler defines marshaler for AddRoleToDBInstance operation
type AddRoleToDBInstanceMarshaler struct {
	Input *types.AddRoleToDBInstanceInput
}

// AddSourceIdentifierToSubscriptionMarshaler defines marshaler for AddSourceIdentifierToSubscription operation
type AddSourceIdentifierToSubscriptionMarshaler struct {
	Input *types.AddSourceIdentifierToSubscriptionInput
}

// AddTagsToResourceMarshaler defines marshaler for AddTagsToResource operation
type AddTagsToResourceMarshaler struct {
	Input *types.AddTagsToResourceInput
}

// ApplyPendingMaintenanceActionMarshaler defines marshaler for ApplyPendingMaintenanceAction operation
type ApplyPendingMaintenanceActionMarshaler struct {
	Input *types.ApplyPendingMaintenanceActionInput
}

// AuthorizeDBSecurityGroupIngressMarshaler defines marshaler for AuthorizeDBSecurityGroupIngress operation
type AuthorizeDBSecurityGroupIngressMarshaler struct {
	Input *types.AuthorizeDBSecurityGroupIngressInput
}

// BacktrackDBClusterMarshaler defines marshaler for BacktrackDBCluster operation
type BacktrackDBClusterMarshaler struct {
	Input *types.BacktrackDBClusterInput
}

// CopyDBClusterParameterGroupMarshaler defines marshaler for CopyDBClusterParameterGroup operation
type CopyDBClusterParameterGroupMarshaler struct {
	Input *types.CopyDBClusterParameterGroupInput
}

// CopyDBClusterSnapshotMarshaler defines marshaler for CopyDBClusterSnapshot operation
type CopyDBClusterSnapshotMarshaler struct {
	Input *types.CopyDBClusterSnapshotInput
}

// CopyDBParameterGroupMarshaler defines marshaler for CopyDBParameterGroup operation
type CopyDBParameterGroupMarshaler struct {
	Input *types.CopyDBParameterGroupInput
}

// CopyDBSnapshotMarshaler defines marshaler for CopyDBSnapshot operation
type CopyDBSnapshotMarshaler struct {
	Input *types.CopyDBSnapshotInput
}

// CopyOptionGroupMarshaler defines marshaler for CopyOptionGroup operation
type CopyOptionGroupMarshaler struct {
	Input *types.CopyOptionGroupInput
}

// CreateCustomAvailabilityZoneMarshaler defines marshaler for CreateCustomAvailabilityZone operation
type CreateCustomAvailabilityZoneMarshaler struct {
	Input *types.CreateCustomAvailabilityZoneInput
}

// CreateDBClusterMarshaler defines marshaler for CreateDBCluster operation
type CreateDBClusterMarshaler struct {
	Input *types.CreateDBClusterInput
}

// CreateDBClusterEndpointMarshaler defines marshaler for CreateDBClusterEndpoint operation
type CreateDBClusterEndpointMarshaler struct {
	Input *types.CreateDBClusterEndpointInput
}

// CreateDBClusterParameterGroupMarshaler defines marshaler for CreateDBClusterParameterGroup operation
type CreateDBClusterParameterGroupMarshaler struct {
	Input *types.CreateDBClusterParameterGroupInput
}

// CreateDBClusterSnapshotMarshaler defines marshaler for CreateDBClusterSnapshot operation
type CreateDBClusterSnapshotMarshaler struct {
	Input *types.CreateDBClusterSnapshotInput
}

// CreateDBInstanceMarshaler defines marshaler for CreateDBInstance operation
type CreateDBInstanceMarshaler struct {
	Input *types.CreateDBInstanceInput
}

// CreateDBInstanceReadReplicaMarshaler defines marshaler for CreateDBInstanceReadReplica operation
type CreateDBInstanceReadReplicaMarshaler struct {
	Input *types.CreateDBInstanceReadReplicaInput
}

// CreateDBParameterGroupMarshaler defines marshaler for CreateDBParameterGroup operation
type CreateDBParameterGroupMarshaler struct {
	Input *types.CreateDBParameterGroupInput
}

// CreateDBSecurityGroupMarshaler defines marshaler for CreateDBSecurityGroup operation
type CreateDBSecurityGroupMarshaler struct {
	Input *types.CreateDBSecurityGroupInput
}

// CreateDBSnapshotMarshaler defines marshaler for CreateDBSnapshot operation
type CreateDBSnapshotMarshaler struct {
	Input *types.CreateDBSnapshotInput
}

// CreateDBSubnetGroupMarshaler defines marshaler for CreateDBSubnetGroup operation
type CreateDBSubnetGroupMarshaler struct {
	Input *types.CreateDBSubnetGroupInput
}

// CreateEventSubscriptionMarshaler defines marshaler for CreateEventSubscription operation
type CreateEventSubscriptionMarshaler struct {
	Input *types.CreateEventSubscriptionInput
}

// CreateGlobalClusterMarshaler defines marshaler for CreateGlobalCluster operation
type CreateGlobalClusterMarshaler struct {
	Input *types.CreateGlobalClusterInput
}

// CreateOptionGroupMarshaler defines marshaler for CreateOptionGroup operation
type CreateOptionGroupMarshaler struct {
	Input *types.CreateOptionGroupInput
}

// DeleteCustomAvailabilityZoneMarshaler defines marshaler for DeleteCustomAvailabilityZone operation
type DeleteCustomAvailabilityZoneMarshaler struct {
	Input *types.DeleteCustomAvailabilityZoneInput
}

// DeleteDBClusterMarshaler defines marshaler for DeleteDBCluster operation
type DeleteDBClusterMarshaler struct {
	Input *types.DeleteDBClusterInput
}

// DeleteDBClusterEndpointMarshaler defines marshaler for DeleteDBClusterEndpoint operation
type DeleteDBClusterEndpointMarshaler struct {
	Input *types.DeleteDBClusterEndpointInput
}

// DeleteDBClusterParameterGroupMarshaler defines marshaler for DeleteDBClusterParameterGroup operation
type DeleteDBClusterParameterGroupMarshaler struct {
	Input *types.DeleteDBClusterParameterGroupInput
}

// DeleteDBClusterSnapshotMarshaler defines marshaler for DeleteDBClusterSnapshot operation
type DeleteDBClusterSnapshotMarshaler struct {
	Input *types.DeleteDBClusterSnapshotInput
}

// DeleteDBInstanceMarshaler defines marshaler for DeleteDBInstance operation
type DeleteDBInstanceMarshaler struct {
	Input *types.DeleteDBInstanceInput
}

// DeleteDBInstanceAutomatedBackupMarshaler defines marshaler for DeleteDBInstanceAutomatedBackup operation
type DeleteDBInstanceAutomatedBackupMarshaler struct {
	Input *types.DeleteDBInstanceAutomatedBackupInput
}

// DeleteDBParameterGroupMarshaler defines marshaler for DeleteDBParameterGroup operation
type DeleteDBParameterGroupMarshaler struct {
	Input *types.DeleteDBParameterGroupInput
}

// DeleteDBSecurityGroupMarshaler defines marshaler for DeleteDBSecurityGroup operation
type DeleteDBSecurityGroupMarshaler struct {
	Input *types.DeleteDBSecurityGroupInput
}

// DeleteDBSnapshotMarshaler defines marshaler for DeleteDBSnapshot operation
type DeleteDBSnapshotMarshaler struct {
	Input *types.DeleteDBSnapshotInput
}

// DeleteDBSubnetGroupMarshaler defines marshaler for DeleteDBSubnetGroup operation
type DeleteDBSubnetGroupMarshaler struct {
	Input *types.DeleteDBSubnetGroupInput
}

// DeleteEventSubscriptionMarshaler defines marshaler for DeleteEventSubscription operation
type DeleteEventSubscriptionMarshaler struct {
	Input *types.DeleteEventSubscriptionInput
}

// DeleteGlobalClusterMarshaler defines marshaler for DeleteGlobalCluster operation
type DeleteGlobalClusterMarshaler struct {
	Input *types.DeleteGlobalClusterInput
}

// DeleteInstallationMediaMarshaler defines marshaler for DeleteInstallationMedia operation
type DeleteInstallationMediaMarshaler struct {
	Input *types.DeleteInstallationMediaInput
}

// DeleteOptionGroupMarshaler defines marshaler for DeleteOptionGroup operation
type DeleteOptionGroupMarshaler struct {
	Input *types.DeleteOptionGroupInput
}

// DescribeAccountAttributesMarshaler defines marshaler for DescribeAccountAttributes operation
type DescribeAccountAttributesMarshaler struct {
	Input *types.DescribeAccountAttributesInput
}

// DescribeCertificatesMarshaler defines marshaler for DescribeCertificates operation
type DescribeCertificatesMarshaler struct {
	Input *types.DescribeCertificatesInput
}

// DescribeCustomAvailabilityZonesMarshaler defines marshaler for DescribeCustomAvailabilityZones operation
type DescribeCustomAvailabilityZonesMarshaler struct {
	Input *types.DescribeCustomAvailabilityZonesInput
}

// DescribeDBClusterBacktracksMarshaler defines marshaler for DescribeDBClusterBacktracks operation
type DescribeDBClusterBacktracksMarshaler struct {
	Input *types.DescribeDBClusterBacktracksInput
}

// DescribeDBClusterEndpointsMarshaler defines marshaler for DescribeDBClusterEndpoints operation
type DescribeDBClusterEndpointsMarshaler struct {
	Input *types.DescribeDBClusterEndpointsInput
}

// DescribeDBClusterParameterGroupsMarshaler defines marshaler for DescribeDBClusterParameterGroups operation
type DescribeDBClusterParameterGroupsMarshaler struct {
	Input *types.DescribeDBClusterParameterGroupsInput
}

// DescribeDBClusterParametersMarshaler defines marshaler for DescribeDBClusterParameters operation
type DescribeDBClusterParametersMarshaler struct {
	Input *types.DescribeDBClusterParametersInput
}

// DescribeDBClusterSnapshotAttributesMarshaler defines marshaler for DescribeDBClusterSnapshotAttributes operation
type DescribeDBClusterSnapshotAttributesMarshaler struct {
	Input *types.DescribeDBClusterSnapshotAttributesInput
}

// DescribeDBClusterSnapshotsMarshaler defines marshaler for DescribeDBClusterSnapshots operation
type DescribeDBClusterSnapshotsMarshaler struct {
	Input *types.DescribeDBClusterSnapshotsInput
}

// DescribeDBClustersMarshaler defines marshaler for DescribeDBClusters operation
type DescribeDBClustersMarshaler struct {
	Input *types.DescribeDBClustersInput
}

// DescribeDBEngineVersionsMarshaler defines marshaler for DescribeDBEngineVersions operation
type DescribeDBEngineVersionsMarshaler struct {
	Input *types.DescribeDBEngineVersionsInput
}

// DescribeDBInstanceAutomatedBackupsMarshaler defines marshaler for DescribeDBInstanceAutomatedBackups operation
type DescribeDBInstanceAutomatedBackupsMarshaler struct {
	Input *types.DescribeDBInstanceAutomatedBackupsInput
}

// DescribeDBInstancesMarshaler defines marshaler for DescribeDBInstances operation
type DescribeDBInstancesMarshaler struct {
	Input *types.DescribeDBInstancesInput
}

// DescribeDBLogFilesMarshaler defines marshaler for DescribeDBLogFiles operation
type DescribeDBLogFilesMarshaler struct {
	Input *types.DescribeDBLogFilesInput
}

// DescribeDBParameterGroupsMarshaler defines marshaler for DescribeDBParameterGroups operation
type DescribeDBParameterGroupsMarshaler struct {
	Input *types.DescribeDBParameterGroupsInput
}

// DescribeDBParametersMarshaler defines marshaler for DescribeDBParameters operation
type DescribeDBParametersMarshaler struct {
	Input *types.DescribeDBParametersInput
}

// DescribeDBSecurityGroupsMarshaler defines marshaler for DescribeDBSecurityGroups operation
type DescribeDBSecurityGroupsMarshaler struct {
	Input *types.DescribeDBSecurityGroupsInput
}

// DescribeDBSnapshotAttributesMarshaler defines marshaler for DescribeDBSnapshotAttributes operation
type DescribeDBSnapshotAttributesMarshaler struct {
	Input *types.DescribeDBSnapshotAttributesInput
}

// DescribeDBSnapshotsMarshaler defines marshaler for DescribeDBSnapshots operation
type DescribeDBSnapshotsMarshaler struct {
	Input *types.DescribeDBSnapshotsInput
}

// DescribeDBSubnetGroupsMarshaler defines marshaler for DescribeDBSubnetGroups operation
type DescribeDBSubnetGroupsMarshaler struct {
	Input *types.DescribeDBSubnetGroupsInput
}

// DescribeEngineDefaultClusterParametersMarshaler defines marshaler for DescribeEngineDefaultClusterParameters operation
type DescribeEngineDefaultClusterParametersMarshaler struct {
	Input *types.DescribeEngineDefaultClusterParametersInput
}

// DescribeEngineDefaultParametersMarshaler defines marshaler for DescribeEngineDefaultParameters operation
type DescribeEngineDefaultParametersMarshaler struct {
	Input *types.DescribeEngineDefaultParametersInput
}

// DescribeEventCategoriesMarshaler defines marshaler for DescribeEventCategories operation
type DescribeEventCategoriesMarshaler struct {
	Input *types.DescribeEventCategoriesInput
}

// DescribeEventSubscriptionsMarshaler defines marshaler for DescribeEventSubscriptions operation
type DescribeEventSubscriptionsMarshaler struct {
	Input *types.DescribeEventSubscriptionsInput
}

// DescribeEventsMarshaler defines marshaler for DescribeEvents operation
type DescribeEventsMarshaler struct {
	Input *types.DescribeEventsInput
}

// DescribeGlobalClustersMarshaler defines marshaler for DescribeGlobalClusters operation
type DescribeGlobalClustersMarshaler struct {
	Input *types.DescribeGlobalClustersInput
}

// DescribeInstallationMediaMarshaler defines marshaler for DescribeInstallationMedia operation
type DescribeInstallationMediaMarshaler struct {
	Input *types.DescribeInstallationMediaInput
}

// DescribeOptionGroupOptionsMarshaler defines marshaler for DescribeOptionGroupOptions operation
type DescribeOptionGroupOptionsMarshaler struct {
	Input *types.DescribeOptionGroupOptionsInput
}

// DescribeOptionGroupsMarshaler defines marshaler for DescribeOptionGroups operation
type DescribeOptionGroupsMarshaler struct {
	Input *types.DescribeOptionGroupsInput
}

// DescribeOrderableDBInstanceOptionsMarshaler defines marshaler for DescribeOrderableDBInstanceOptions operation
type DescribeOrderableDBInstanceOptionsMarshaler struct {
	Input *types.DescribeOrderableDBInstanceOptionsInput
}

// DescribePendingMaintenanceActionsMarshaler defines marshaler for DescribePendingMaintenanceActions operation
type DescribePendingMaintenanceActionsMarshaler struct {
	Input *types.DescribePendingMaintenanceActionsInput
}

// DescribeReservedDBInstancesMarshaler defines marshaler for DescribeReservedDBInstances operation
type DescribeReservedDBInstancesMarshaler struct {
	Input *types.DescribeReservedDBInstancesInput
}

// DescribeReservedDBInstancesOfferingsMarshaler defines marshaler for DescribeReservedDBInstancesOfferings operation
type DescribeReservedDBInstancesOfferingsMarshaler struct {
	Input *types.DescribeReservedDBInstancesOfferingsInput
}

// DescribeSourceRegionsMarshaler defines marshaler for DescribeSourceRegions operation
type DescribeSourceRegionsMarshaler struct {
	Input *types.DescribeSourceRegionsInput
}

// DescribeValidDBInstanceModificationsMarshaler defines marshaler for DescribeValidDBInstanceModifications operation
type DescribeValidDBInstanceModificationsMarshaler struct {
	Input *types.DescribeValidDBInstanceModificationsInput
}

// DownloadDBLogFilePortionMarshaler defines marshaler for DownloadDBLogFilePortion operation
type DownloadDBLogFilePortionMarshaler struct {
	Input *types.DownloadDBLogFilePortionInput
}

// FailoverDBClusterMarshaler defines marshaler for FailoverDBCluster operation
type FailoverDBClusterMarshaler struct {
	Input *types.FailoverDBClusterInput
}

// ImportInstallationMediaMarshaler defines marshaler for ImportInstallationMedia operation
type ImportInstallationMediaMarshaler struct {
	Input *types.ImportInstallationMediaInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ModifyCurrentDBClusterCapacityMarshaler defines marshaler for ModifyCurrentDBClusterCapacity operation
type ModifyCurrentDBClusterCapacityMarshaler struct {
	Input *types.ModifyCurrentDBClusterCapacityInput
}

// ModifyDBClusterMarshaler defines marshaler for ModifyDBCluster operation
type ModifyDBClusterMarshaler struct {
	Input *types.ModifyDBClusterInput
}

// ModifyDBClusterEndpointMarshaler defines marshaler for ModifyDBClusterEndpoint operation
type ModifyDBClusterEndpointMarshaler struct {
	Input *types.ModifyDBClusterEndpointInput
}

// ModifyDBClusterParameterGroupMarshaler defines marshaler for ModifyDBClusterParameterGroup operation
type ModifyDBClusterParameterGroupMarshaler struct {
	Input *types.ModifyDBClusterParameterGroupInput
}

// ModifyDBClusterSnapshotAttributeMarshaler defines marshaler for ModifyDBClusterSnapshotAttribute operation
type ModifyDBClusterSnapshotAttributeMarshaler struct {
	Input *types.ModifyDBClusterSnapshotAttributeInput
}

// ModifyDBInstanceMarshaler defines marshaler for ModifyDBInstance operation
type ModifyDBInstanceMarshaler struct {
	Input *types.ModifyDBInstanceInput
}

// ModifyDBParameterGroupMarshaler defines marshaler for ModifyDBParameterGroup operation
type ModifyDBParameterGroupMarshaler struct {
	Input *types.ModifyDBParameterGroupInput
}

// ModifyDBSnapshotMarshaler defines marshaler for ModifyDBSnapshot operation
type ModifyDBSnapshotMarshaler struct {
	Input *types.ModifyDBSnapshotInput
}

// ModifyDBSnapshotAttributeMarshaler defines marshaler for ModifyDBSnapshotAttribute operation
type ModifyDBSnapshotAttributeMarshaler struct {
	Input *types.ModifyDBSnapshotAttributeInput
}

// ModifyDBSubnetGroupMarshaler defines marshaler for ModifyDBSubnetGroup operation
type ModifyDBSubnetGroupMarshaler struct {
	Input *types.ModifyDBSubnetGroupInput
}

// ModifyEventSubscriptionMarshaler defines marshaler for ModifyEventSubscription operation
type ModifyEventSubscriptionMarshaler struct {
	Input *types.ModifyEventSubscriptionInput
}

// ModifyGlobalClusterMarshaler defines marshaler for ModifyGlobalCluster operation
type ModifyGlobalClusterMarshaler struct {
	Input *types.ModifyGlobalClusterInput
}

// ModifyOptionGroupMarshaler defines marshaler for ModifyOptionGroup operation
type ModifyOptionGroupMarshaler struct {
	Input *types.ModifyOptionGroupInput
}

// PromoteReadReplicaMarshaler defines marshaler for PromoteReadReplica operation
type PromoteReadReplicaMarshaler struct {
	Input *types.PromoteReadReplicaInput
}

// PromoteReadReplicaDBClusterMarshaler defines marshaler for PromoteReadReplicaDBCluster operation
type PromoteReadReplicaDBClusterMarshaler struct {
	Input *types.PromoteReadReplicaDBClusterInput
}

// PurchaseReservedDBInstancesOfferingMarshaler defines marshaler for PurchaseReservedDBInstancesOffering operation
type PurchaseReservedDBInstancesOfferingMarshaler struct {
	Input *types.PurchaseReservedDBInstancesOfferingInput
}

// RebootDBInstanceMarshaler defines marshaler for RebootDBInstance operation
type RebootDBInstanceMarshaler struct {
	Input *types.RebootDBInstanceInput
}

// RemoveFromGlobalClusterMarshaler defines marshaler for RemoveFromGlobalCluster operation
type RemoveFromGlobalClusterMarshaler struct {
	Input *types.RemoveFromGlobalClusterInput
}

// RemoveRoleFromDBClusterMarshaler defines marshaler for RemoveRoleFromDBCluster operation
type RemoveRoleFromDBClusterMarshaler struct {
	Input *types.RemoveRoleFromDBClusterInput
}

// RemoveRoleFromDBInstanceMarshaler defines marshaler for RemoveRoleFromDBInstance operation
type RemoveRoleFromDBInstanceMarshaler struct {
	Input *types.RemoveRoleFromDBInstanceInput
}

// RemoveSourceIdentifierFromSubscriptionMarshaler defines marshaler for RemoveSourceIdentifierFromSubscription operation
type RemoveSourceIdentifierFromSubscriptionMarshaler struct {
	Input *types.RemoveSourceIdentifierFromSubscriptionInput
}

// RemoveTagsFromResourceMarshaler defines marshaler for RemoveTagsFromResource operation
type RemoveTagsFromResourceMarshaler struct {
	Input *types.RemoveTagsFromResourceInput
}

// ResetDBClusterParameterGroupMarshaler defines marshaler for ResetDBClusterParameterGroup operation
type ResetDBClusterParameterGroupMarshaler struct {
	Input *types.ResetDBClusterParameterGroupInput
}

// ResetDBParameterGroupMarshaler defines marshaler for ResetDBParameterGroup operation
type ResetDBParameterGroupMarshaler struct {
	Input *types.ResetDBParameterGroupInput
}

// RestoreDBClusterFromS3Marshaler defines marshaler for RestoreDBClusterFromS3 operation
type RestoreDBClusterFromS3Marshaler struct {
	Input *types.RestoreDBClusterFromS3Input
}

// RestoreDBClusterFromSnapshotMarshaler defines marshaler for RestoreDBClusterFromSnapshot operation
type RestoreDBClusterFromSnapshotMarshaler struct {
	Input *types.RestoreDBClusterFromSnapshotInput
}

// RestoreDBClusterToPointInTimeMarshaler defines marshaler for RestoreDBClusterToPointInTime operation
type RestoreDBClusterToPointInTimeMarshaler struct {
	Input *types.RestoreDBClusterToPointInTimeInput
}

// RestoreDBInstanceFromDBSnapshotMarshaler defines marshaler for RestoreDBInstanceFromDBSnapshot operation
type RestoreDBInstanceFromDBSnapshotMarshaler struct {
	Input *types.RestoreDBInstanceFromDBSnapshotInput
}

// RestoreDBInstanceFromS3Marshaler defines marshaler for RestoreDBInstanceFromS3 operation
type RestoreDBInstanceFromS3Marshaler struct {
	Input *types.RestoreDBInstanceFromS3Input
}

// RestoreDBInstanceToPointInTimeMarshaler defines marshaler for RestoreDBInstanceToPointInTime operation
type RestoreDBInstanceToPointInTimeMarshaler struct {
	Input *types.RestoreDBInstanceToPointInTimeInput
}

// RevokeDBSecurityGroupIngressMarshaler defines marshaler for RevokeDBSecurityGroupIngress operation
type RevokeDBSecurityGroupIngressMarshaler struct {
	Input *types.RevokeDBSecurityGroupIngressInput
}

// StartActivityStreamMarshaler defines marshaler for StartActivityStream operation
type StartActivityStreamMarshaler struct {
	Input *types.StartActivityStreamInput
}

// StartDBClusterMarshaler defines marshaler for StartDBCluster operation
type StartDBClusterMarshaler struct {
	Input *types.StartDBClusterInput
}

// StartDBInstanceMarshaler defines marshaler for StartDBInstance operation
type StartDBInstanceMarshaler struct {
	Input *types.StartDBInstanceInput
}

// StopActivityStreamMarshaler defines marshaler for StopActivityStream operation
type StopActivityStreamMarshaler struct {
	Input *types.StopActivityStreamInput
}

// StopDBClusterMarshaler defines marshaler for StopDBCluster operation
type StopDBClusterMarshaler struct {
	Input *types.StopDBClusterInput
}

// StopDBInstanceMarshaler defines marshaler for StopDBInstance operation
type StopDBInstanceMarshaler struct {
	Input *types.StopDBInstanceInput
}

func MarshalAddRoleToDBClusterInputShapeAWSQuery(v *types.AddRoleToDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddRoleToDBInstanceInputShapeAWSQuery(v *types.AddRoleToDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddSourceIdentifierToSubscriptionInputShapeAWSQuery(v *types.AddSourceIdentifierToSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddTagsToResourceInputShapeAWSQuery(v *types.AddTagsToResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalApplyPendingMaintenanceActionInputShapeAWSQuery(v *types.ApplyPendingMaintenanceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAuthorizeDBSecurityGroupIngressInputShapeAWSQuery(v *types.AuthorizeDBSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalBacktrackDBClusterInputShapeAWSQuery(v *types.BacktrackDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBClusterParameterGroupInputShapeAWSQuery(v *types.CopyDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBClusterSnapshotInputShapeAWSQuery(v *types.CopyDBClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBParameterGroupInputShapeAWSQuery(v *types.CopyDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBSnapshotInputShapeAWSQuery(v *types.CopyDBSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyOptionGroupInputShapeAWSQuery(v *types.CopyOptionGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateCustomAvailabilityZoneInputShapeAWSQuery(v *types.CreateCustomAvailabilityZoneInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterInputShapeAWSQuery(v *types.CreateDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterEndpointInputShapeAWSQuery(v *types.CreateDBClusterEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterParameterGroupInputShapeAWSQuery(v *types.CreateDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterSnapshotInputShapeAWSQuery(v *types.CreateDBClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBInstanceInputShapeAWSQuery(v *types.CreateDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBInstanceReadReplicaInputShapeAWSQuery(v *types.CreateDBInstanceReadReplicaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBParameterGroupInputShapeAWSQuery(v *types.CreateDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBSecurityGroupInputShapeAWSQuery(v *types.CreateDBSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBSnapshotInputShapeAWSQuery(v *types.CreateDBSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBSubnetGroupInputShapeAWSQuery(v *types.CreateDBSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateEventSubscriptionInputShapeAWSQuery(v *types.CreateEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateGlobalClusterInputShapeAWSQuery(v *types.CreateGlobalClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateOptionGroupInputShapeAWSQuery(v *types.CreateOptionGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteCustomAvailabilityZoneInputShapeAWSQuery(v *types.DeleteCustomAvailabilityZoneInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterInputShapeAWSQuery(v *types.DeleteDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterEndpointInputShapeAWSQuery(v *types.DeleteDBClusterEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterParameterGroupInputShapeAWSQuery(v *types.DeleteDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterSnapshotInputShapeAWSQuery(v *types.DeleteDBClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBInstanceInputShapeAWSQuery(v *types.DeleteDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBInstanceAutomatedBackupInputShapeAWSQuery(v *types.DeleteDBInstanceAutomatedBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBParameterGroupInputShapeAWSQuery(v *types.DeleteDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBSecurityGroupInputShapeAWSQuery(v *types.DeleteDBSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBSnapshotInputShapeAWSQuery(v *types.DeleteDBSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBSubnetGroupInputShapeAWSQuery(v *types.DeleteDBSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteEventSubscriptionInputShapeAWSQuery(v *types.DeleteEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteGlobalClusterInputShapeAWSQuery(v *types.DeleteGlobalClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteInstallationMediaInputShapeAWSQuery(v *types.DeleteInstallationMediaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteOptionGroupInputShapeAWSQuery(v *types.DeleteOptionGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAccountAttributesInputShapeAWSQuery(v *types.DescribeAccountAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCertificatesInputShapeAWSQuery(v *types.DescribeCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCustomAvailabilityZonesInputShapeAWSQuery(v *types.DescribeCustomAvailabilityZonesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterBacktracksInputShapeAWSQuery(v *types.DescribeDBClusterBacktracksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterEndpointsInputShapeAWSQuery(v *types.DescribeDBClusterEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterParameterGroupsInputShapeAWSQuery(v *types.DescribeDBClusterParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterParametersInputShapeAWSQuery(v *types.DescribeDBClusterParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterSnapshotAttributesInputShapeAWSQuery(v *types.DescribeDBClusterSnapshotAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterSnapshotsInputShapeAWSQuery(v *types.DescribeDBClusterSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClustersInputShapeAWSQuery(v *types.DescribeDBClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBEngineVersionsInputShapeAWSQuery(v *types.DescribeDBEngineVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBInstanceAutomatedBackupsInputShapeAWSQuery(v *types.DescribeDBInstanceAutomatedBackupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBInstancesInputShapeAWSQuery(v *types.DescribeDBInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBLogFilesInputShapeAWSQuery(v *types.DescribeDBLogFilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBParameterGroupsInputShapeAWSQuery(v *types.DescribeDBParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBParametersInputShapeAWSQuery(v *types.DescribeDBParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBSecurityGroupsInputShapeAWSQuery(v *types.DescribeDBSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBSnapshotAttributesInputShapeAWSQuery(v *types.DescribeDBSnapshotAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBSnapshotsInputShapeAWSQuery(v *types.DescribeDBSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBSubnetGroupsInputShapeAWSQuery(v *types.DescribeDBSubnetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEngineDefaultClusterParametersInputShapeAWSQuery(v *types.DescribeEngineDefaultClusterParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEngineDefaultParametersInputShapeAWSQuery(v *types.DescribeEngineDefaultParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventCategoriesInputShapeAWSQuery(v *types.DescribeEventCategoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventSubscriptionsInputShapeAWSQuery(v *types.DescribeEventSubscriptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventsInputShapeAWSQuery(v *types.DescribeEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeGlobalClustersInputShapeAWSQuery(v *types.DescribeGlobalClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeInstallationMediaInputShapeAWSQuery(v *types.DescribeInstallationMediaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeOptionGroupOptionsInputShapeAWSQuery(v *types.DescribeOptionGroupOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeOptionGroupsInputShapeAWSQuery(v *types.DescribeOptionGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeOrderableDBInstanceOptionsInputShapeAWSQuery(v *types.DescribeOrderableDBInstanceOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribePendingMaintenanceActionsInputShapeAWSQuery(v *types.DescribePendingMaintenanceActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReservedDBInstancesInputShapeAWSQuery(v *types.DescribeReservedDBInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReservedDBInstancesOfferingsInputShapeAWSQuery(v *types.DescribeReservedDBInstancesOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeSourceRegionsInputShapeAWSQuery(v *types.DescribeSourceRegionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeValidDBInstanceModificationsInputShapeAWSQuery(v *types.DescribeValidDBInstanceModificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDownloadDBLogFilePortionInputShapeAWSQuery(v *types.DownloadDBLogFilePortionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalFailoverDBClusterInputShapeAWSQuery(v *types.FailoverDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalImportInstallationMediaInputShapeAWSQuery(v *types.ImportInstallationMediaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSQuery(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyCurrentDBClusterCapacityInputShapeAWSQuery(v *types.ModifyCurrentDBClusterCapacityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterInputShapeAWSQuery(v *types.ModifyDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterEndpointInputShapeAWSQuery(v *types.ModifyDBClusterEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterParameterGroupInputShapeAWSQuery(v *types.ModifyDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterSnapshotAttributeInputShapeAWSQuery(v *types.ModifyDBClusterSnapshotAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBInstanceInputShapeAWSQuery(v *types.ModifyDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBParameterGroupInputShapeAWSQuery(v *types.ModifyDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBSnapshotInputShapeAWSQuery(v *types.ModifyDBSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBSnapshotAttributeInputShapeAWSQuery(v *types.ModifyDBSnapshotAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBSubnetGroupInputShapeAWSQuery(v *types.ModifyDBSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyEventSubscriptionInputShapeAWSQuery(v *types.ModifyEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyGlobalClusterInputShapeAWSQuery(v *types.ModifyGlobalClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyOptionGroupInputShapeAWSQuery(v *types.ModifyOptionGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPromoteReadReplicaInputShapeAWSQuery(v *types.PromoteReadReplicaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPromoteReadReplicaDBClusterInputShapeAWSQuery(v *types.PromoteReadReplicaDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPurchaseReservedDBInstancesOfferingInputShapeAWSQuery(v *types.PurchaseReservedDBInstancesOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRebootDBInstanceInputShapeAWSQuery(v *types.RebootDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveFromGlobalClusterInputShapeAWSQuery(v *types.RemoveFromGlobalClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveRoleFromDBClusterInputShapeAWSQuery(v *types.RemoveRoleFromDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveRoleFromDBInstanceInputShapeAWSQuery(v *types.RemoveRoleFromDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveSourceIdentifierFromSubscriptionInputShapeAWSQuery(v *types.RemoveSourceIdentifierFromSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveTagsFromResourceInputShapeAWSQuery(v *types.RemoveTagsFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetDBClusterParameterGroupInputShapeAWSQuery(v *types.ResetDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetDBParameterGroupInputShapeAWSQuery(v *types.ResetDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBClusterFromS3InputShapeAWSQuery(v *types.RestoreDBClusterFromS3Input, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBClusterFromSnapshotInputShapeAWSQuery(v *types.RestoreDBClusterFromSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBClusterToPointInTimeInputShapeAWSQuery(v *types.RestoreDBClusterToPointInTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBInstanceFromDBSnapshotInputShapeAWSQuery(v *types.RestoreDBInstanceFromDBSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBInstanceFromS3InputShapeAWSQuery(v *types.RestoreDBInstanceFromS3Input, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBInstanceToPointInTimeInputShapeAWSQuery(v *types.RestoreDBInstanceToPointInTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRevokeDBSecurityGroupIngressInputShapeAWSQuery(v *types.RevokeDBSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStartActivityStreamInputShapeAWSQuery(v *types.StartActivityStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStartDBClusterInputShapeAWSQuery(v *types.StartDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStartDBInstanceInputShapeAWSQuery(v *types.StartDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStopActivityStreamInputShapeAWSQuery(v *types.StopActivityStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStopDBClusterInputShapeAWSQuery(v *types.StopDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStopDBInstanceInputShapeAWSQuery(v *types.StopDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AddRoleToDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddRoleToDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddRoleToDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddRoleToDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddRoleToDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddRoleToDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddRoleToDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddRoleToDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddSourceIdentifierToSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddSourceIdentifierToSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddSourceIdentifierToSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddSourceIdentifierToSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddTagsToResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ApplyPendingMaintenanceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalApplyPendingMaintenanceActionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ApplyPendingMaintenanceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ApplyPendingMaintenanceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeDBSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeDBSecurityGroupIngressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeDBSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeDBSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BacktrackDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBacktrackDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BacktrackDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BacktrackDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyOptionGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyOptionGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyOptionGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyOptionGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCustomAvailabilityZoneMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCustomAvailabilityZoneInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCustomAvailabilityZoneMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCustomAvailabilityZone.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterEndpointInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBClusterEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBInstanceReadReplicaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBInstanceReadReplicaInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBInstanceReadReplicaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBInstanceReadReplica.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBSecurityGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGlobalClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGlobalClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGlobalClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGlobalCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateOptionGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateOptionGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateOptionGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateOptionGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCustomAvailabilityZoneMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCustomAvailabilityZoneInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCustomAvailabilityZoneMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCustomAvailabilityZone.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterEndpointInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBClusterEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBInstanceAutomatedBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBInstanceAutomatedBackupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBInstanceAutomatedBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBInstanceAutomatedBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBSecurityGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGlobalClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGlobalClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGlobalClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGlobalCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInstallationMediaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInstallationMediaInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInstallationMediaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInstallationMedia.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteOptionGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteOptionGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteOptionGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteOptionGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccountAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCertificatesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCustomAvailabilityZonesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCustomAvailabilityZonesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCustomAvailabilityZonesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCustomAvailabilityZones.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterBacktracksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterBacktracksInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterBacktracksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterBacktracks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterEndpointsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterParameterGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterSnapshotAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterSnapshotAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterSnapshotAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterSnapshotAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClustersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBEngineVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBEngineVersionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBEngineVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBEngineVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBInstanceAutomatedBackupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBInstanceAutomatedBackupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBInstanceAutomatedBackupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBInstanceAutomatedBackups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBLogFilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBLogFilesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBLogFilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBLogFiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBParameterGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBSecurityGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBSnapshotAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBSnapshotAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBSnapshotAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBSnapshotAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBSubnetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBSubnetGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBSubnetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBSubnetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEngineDefaultClusterParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEngineDefaultClusterParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEngineDefaultClusterParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEngineDefaultClusterParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEngineDefaultParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEngineDefaultParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEngineDefaultParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEngineDefaultParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventCategoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventCategoriesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventCategoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventCategories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventSubscriptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventSubscriptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventSubscriptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventSubscriptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGlobalClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGlobalClustersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGlobalClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGlobalClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstallationMediaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstallationMediaInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstallationMediaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstallationMedia.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOptionGroupOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOptionGroupOptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOptionGroupOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOptionGroupOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOptionGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOptionGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOptionGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOptionGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOrderableDBInstanceOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOrderableDBInstanceOptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOrderableDBInstanceOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOrderableDBInstanceOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePendingMaintenanceActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePendingMaintenanceActionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePendingMaintenanceActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePendingMaintenanceActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedDBInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedDBInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedDBInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedDBInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedDBInstancesOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedDBInstancesOfferingsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedDBInstancesOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedDBInstancesOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSourceRegionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSourceRegionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSourceRegionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSourceRegions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeValidDBInstanceModificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeValidDBInstanceModificationsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeValidDBInstanceModificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeValidDBInstanceModifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DownloadDBLogFilePortionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDownloadDBLogFilePortionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DownloadDBLogFilePortionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DownloadDBLogFilePortion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m FailoverDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalFailoverDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m FailoverDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "FailoverDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportInstallationMediaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportInstallationMediaInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportInstallationMediaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportInstallationMedia.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyCurrentDBClusterCapacityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyCurrentDBClusterCapacityInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyCurrentDBClusterCapacityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyCurrentDBClusterCapacity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterEndpointInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBClusterEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterSnapshotAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterSnapshotAttributeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterSnapshotAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBClusterSnapshotAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBSnapshotAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBSnapshotAttributeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBSnapshotAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBSnapshotAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyGlobalClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyGlobalClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyGlobalClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyGlobalCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyOptionGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyOptionGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyOptionGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyOptionGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PromoteReadReplicaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPromoteReadReplicaInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PromoteReadReplicaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PromoteReadReplica.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PromoteReadReplicaDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPromoteReadReplicaDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PromoteReadReplicaDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PromoteReadReplicaDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseReservedDBInstancesOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseReservedDBInstancesOfferingInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseReservedDBInstancesOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseReservedDBInstancesOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveFromGlobalClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveFromGlobalClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveFromGlobalClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveFromGlobalCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveRoleFromDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveRoleFromDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveRoleFromDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveRoleFromDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveRoleFromDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveRoleFromDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveRoleFromDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveRoleFromDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveSourceIdentifierFromSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveSourceIdentifierFromSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveSourceIdentifierFromSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveSourceIdentifierFromSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBClusterFromS3Marshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBClusterFromS3InputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBClusterFromS3Marshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBClusterFromS3.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBClusterFromSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBClusterFromSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBClusterFromSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBClusterFromSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBClusterToPointInTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBClusterToPointInTimeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBClusterToPointInTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBClusterToPointInTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBInstanceFromDBSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBInstanceFromDBSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBInstanceFromDBSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBInstanceFromDBSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBInstanceFromS3Marshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBInstanceFromS3InputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBInstanceFromS3Marshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBInstanceFromS3.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBInstanceToPointInTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBInstanceToPointInTimeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBInstanceToPointInTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBInstanceToPointInTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeDBSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeDBSecurityGroupIngressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeDBSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeDBSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartActivityStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartActivityStreamInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartActivityStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartActivityStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopActivityStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopActivityStreamInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopActivityStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopActivityStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
