// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/iot1clickprojects/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssociateDeviceWithPlacementMarshaler defines marshaler for AssociateDeviceWithPlacement operation
type AssociateDeviceWithPlacementMarshaler struct {
	Input *types.AssociateDeviceWithPlacementInput
}

// CreatePlacementMarshaler defines marshaler for CreatePlacement operation
type CreatePlacementMarshaler struct {
	Input *types.CreatePlacementInput
}

// CreateProjectMarshaler defines marshaler for CreateProject operation
type CreateProjectMarshaler struct {
	Input *types.CreateProjectInput
}

// DeletePlacementMarshaler defines marshaler for DeletePlacement operation
type DeletePlacementMarshaler struct {
	Input *types.DeletePlacementInput
}

// DeleteProjectMarshaler defines marshaler for DeleteProject operation
type DeleteProjectMarshaler struct {
	Input *types.DeleteProjectInput
}

// DescribePlacementMarshaler defines marshaler for DescribePlacement operation
type DescribePlacementMarshaler struct {
	Input *types.DescribePlacementInput
}

// DescribeProjectMarshaler defines marshaler for DescribeProject operation
type DescribeProjectMarshaler struct {
	Input *types.DescribeProjectInput
}

// DisassociateDeviceFromPlacementMarshaler defines marshaler for DisassociateDeviceFromPlacement operation
type DisassociateDeviceFromPlacementMarshaler struct {
	Input *types.DisassociateDeviceFromPlacementInput
}

// GetDevicesInPlacementMarshaler defines marshaler for GetDevicesInPlacement operation
type GetDevicesInPlacementMarshaler struct {
	Input *types.GetDevicesInPlacementInput
}

// ListPlacementsMarshaler defines marshaler for ListPlacements operation
type ListPlacementsMarshaler struct {
	Input *types.ListPlacementsInput
}

// ListProjectsMarshaler defines marshaler for ListProjects operation
type ListProjectsMarshaler struct {
	Input *types.ListProjectsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdatePlacementMarshaler defines marshaler for UpdatePlacement operation
type UpdatePlacementMarshaler struct {
	Input *types.UpdatePlacementInput
}

// UpdateProjectMarshaler defines marshaler for UpdateProject operation
type UpdateProjectMarshaler struct {
	Input *types.UpdateProjectInput
}

func MarshalAssociateDeviceWithPlacementInputShapeAWSREST(v *types.AssociateDeviceWithPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalAssociateDeviceWithPlacementInputShapeAWSJSON(v *types.AssociateDeviceWithPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreatePlacementInputShapeAWSREST(v *types.CreatePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreatePlacementInputShapeAWSJSON(v *types.CreatePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateProjectInputShapeAWSREST(v *types.CreateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateProjectInputShapeAWSJSON(v *types.CreateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeletePlacementInputShapeAWSREST(v *types.DeletePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeletePlacementInputShapeAWSJSON(v *types.DeletePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteProjectInputShapeAWSREST(v *types.DeleteProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteProjectInputShapeAWSJSON(v *types.DeleteProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribePlacementInputShapeAWSREST(v *types.DescribePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribePlacementInputShapeAWSJSON(v *types.DescribePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeProjectInputShapeAWSREST(v *types.DescribeProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeProjectInputShapeAWSJSON(v *types.DescribeProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateDeviceFromPlacementInputShapeAWSREST(v *types.DisassociateDeviceFromPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateDeviceFromPlacementInputShapeAWSJSON(v *types.DisassociateDeviceFromPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDevicesInPlacementInputShapeAWSREST(v *types.GetDevicesInPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDevicesInPlacementInputShapeAWSJSON(v *types.GetDevicesInPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListPlacementsInputShapeAWSREST(v *types.ListPlacementsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListPlacementsInputShapeAWSJSON(v *types.ListPlacementsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListProjectsInputShapeAWSREST(v *types.ListProjectsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListProjectsInputShapeAWSJSON(v *types.ListProjectsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdatePlacementInputShapeAWSREST(v *types.UpdatePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdatePlacementInputShapeAWSJSON(v *types.UpdatePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateProjectInputShapeAWSREST(v *types.UpdateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateProjectInputShapeAWSJSON(v *types.UpdateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m AssociateDeviceWithPlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateDeviceWithPlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalAssociateDeviceWithPlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateDeviceWithPlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateDeviceWithPlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreatePlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeletePlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribePlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateDeviceFromPlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateDeviceFromPlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateDeviceFromPlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateDeviceFromPlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateDeviceFromPlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDevicesInPlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDevicesInPlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDevicesInPlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDevicesInPlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDevicesInPlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPlacementsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPlacementsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListPlacementsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPlacementsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPlacements.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProjectsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProjectsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListProjectsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProjectsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProjects.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePlacementInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdatePlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProjectInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
