// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/devicefarm/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateDevicePoolMarshaler defines marshaler for CreateDevicePool operation
type CreateDevicePoolMarshaler struct {
	Input *types.CreateDevicePoolInput
}

// CreateInstanceProfileMarshaler defines marshaler for CreateInstanceProfile operation
type CreateInstanceProfileMarshaler struct {
	Input *types.CreateInstanceProfileInput
}

// CreateNetworkProfileMarshaler defines marshaler for CreateNetworkProfile operation
type CreateNetworkProfileMarshaler struct {
	Input *types.CreateNetworkProfileInput
}

// CreateProjectMarshaler defines marshaler for CreateProject operation
type CreateProjectMarshaler struct {
	Input *types.CreateProjectInput
}

// CreateRemoteAccessSessionMarshaler defines marshaler for CreateRemoteAccessSession operation
type CreateRemoteAccessSessionMarshaler struct {
	Input *types.CreateRemoteAccessSessionInput
}

// CreateUploadMarshaler defines marshaler for CreateUpload operation
type CreateUploadMarshaler struct {
	Input *types.CreateUploadInput
}

// CreateVPCEConfigurationMarshaler defines marshaler for CreateVPCEConfiguration operation
type CreateVPCEConfigurationMarshaler struct {
	Input *types.CreateVPCEConfigurationInput
}

// DeleteDevicePoolMarshaler defines marshaler for DeleteDevicePool operation
type DeleteDevicePoolMarshaler struct {
	Input *types.DeleteDevicePoolInput
}

// DeleteInstanceProfileMarshaler defines marshaler for DeleteInstanceProfile operation
type DeleteInstanceProfileMarshaler struct {
	Input *types.DeleteInstanceProfileInput
}

// DeleteNetworkProfileMarshaler defines marshaler for DeleteNetworkProfile operation
type DeleteNetworkProfileMarshaler struct {
	Input *types.DeleteNetworkProfileInput
}

// DeleteProjectMarshaler defines marshaler for DeleteProject operation
type DeleteProjectMarshaler struct {
	Input *types.DeleteProjectInput
}

// DeleteRemoteAccessSessionMarshaler defines marshaler for DeleteRemoteAccessSession operation
type DeleteRemoteAccessSessionMarshaler struct {
	Input *types.DeleteRemoteAccessSessionInput
}

// DeleteRunMarshaler defines marshaler for DeleteRun operation
type DeleteRunMarshaler struct {
	Input *types.DeleteRunInput
}

// DeleteUploadMarshaler defines marshaler for DeleteUpload operation
type DeleteUploadMarshaler struct {
	Input *types.DeleteUploadInput
}

// DeleteVPCEConfigurationMarshaler defines marshaler for DeleteVPCEConfiguration operation
type DeleteVPCEConfigurationMarshaler struct {
	Input *types.DeleteVPCEConfigurationInput
}

// GetAccountSettingsMarshaler defines marshaler for GetAccountSettings operation
type GetAccountSettingsMarshaler struct {
	Input *types.GetAccountSettingsInput
}

// GetDeviceMarshaler defines marshaler for GetDevice operation
type GetDeviceMarshaler struct {
	Input *types.GetDeviceInput
}

// GetDeviceInstanceMarshaler defines marshaler for GetDeviceInstance operation
type GetDeviceInstanceMarshaler struct {
	Input *types.GetDeviceInstanceInput
}

// GetDevicePoolMarshaler defines marshaler for GetDevicePool operation
type GetDevicePoolMarshaler struct {
	Input *types.GetDevicePoolInput
}

// GetDevicePoolCompatibilityMarshaler defines marshaler for GetDevicePoolCompatibility operation
type GetDevicePoolCompatibilityMarshaler struct {
	Input *types.GetDevicePoolCompatibilityInput
}

// GetInstanceProfileMarshaler defines marshaler for GetInstanceProfile operation
type GetInstanceProfileMarshaler struct {
	Input *types.GetInstanceProfileInput
}

// GetJobMarshaler defines marshaler for GetJob operation
type GetJobMarshaler struct {
	Input *types.GetJobInput
}

// GetNetworkProfileMarshaler defines marshaler for GetNetworkProfile operation
type GetNetworkProfileMarshaler struct {
	Input *types.GetNetworkProfileInput
}

// GetOfferingStatusMarshaler defines marshaler for GetOfferingStatus operation
type GetOfferingStatusMarshaler struct {
	Input *types.GetOfferingStatusInput
}

// GetProjectMarshaler defines marshaler for GetProject operation
type GetProjectMarshaler struct {
	Input *types.GetProjectInput
}

// GetRemoteAccessSessionMarshaler defines marshaler for GetRemoteAccessSession operation
type GetRemoteAccessSessionMarshaler struct {
	Input *types.GetRemoteAccessSessionInput
}

// GetRunMarshaler defines marshaler for GetRun operation
type GetRunMarshaler struct {
	Input *types.GetRunInput
}

// GetSuiteMarshaler defines marshaler for GetSuite operation
type GetSuiteMarshaler struct {
	Input *types.GetSuiteInput
}

// GetTestMarshaler defines marshaler for GetTest operation
type GetTestMarshaler struct {
	Input *types.GetTestInput
}

// GetUploadMarshaler defines marshaler for GetUpload operation
type GetUploadMarshaler struct {
	Input *types.GetUploadInput
}

// GetVPCEConfigurationMarshaler defines marshaler for GetVPCEConfiguration operation
type GetVPCEConfigurationMarshaler struct {
	Input *types.GetVPCEConfigurationInput
}

// InstallToRemoteAccessSessionMarshaler defines marshaler for InstallToRemoteAccessSession operation
type InstallToRemoteAccessSessionMarshaler struct {
	Input *types.InstallToRemoteAccessSessionInput
}

// ListArtifactsMarshaler defines marshaler for ListArtifacts operation
type ListArtifactsMarshaler struct {
	Input *types.ListArtifactsInput
}

// ListDeviceInstancesMarshaler defines marshaler for ListDeviceInstances operation
type ListDeviceInstancesMarshaler struct {
	Input *types.ListDeviceInstancesInput
}

// ListDevicePoolsMarshaler defines marshaler for ListDevicePools operation
type ListDevicePoolsMarshaler struct {
	Input *types.ListDevicePoolsInput
}

// ListDevicesMarshaler defines marshaler for ListDevices operation
type ListDevicesMarshaler struct {
	Input *types.ListDevicesInput
}

// ListInstanceProfilesMarshaler defines marshaler for ListInstanceProfiles operation
type ListInstanceProfilesMarshaler struct {
	Input *types.ListInstanceProfilesInput
}

// ListJobsMarshaler defines marshaler for ListJobs operation
type ListJobsMarshaler struct {
	Input *types.ListJobsInput
}

// ListNetworkProfilesMarshaler defines marshaler for ListNetworkProfiles operation
type ListNetworkProfilesMarshaler struct {
	Input *types.ListNetworkProfilesInput
}

// ListOfferingPromotionsMarshaler defines marshaler for ListOfferingPromotions operation
type ListOfferingPromotionsMarshaler struct {
	Input *types.ListOfferingPromotionsInput
}

// ListOfferingTransactionsMarshaler defines marshaler for ListOfferingTransactions operation
type ListOfferingTransactionsMarshaler struct {
	Input *types.ListOfferingTransactionsInput
}

// ListOfferingsMarshaler defines marshaler for ListOfferings operation
type ListOfferingsMarshaler struct {
	Input *types.ListOfferingsInput
}

// ListProjectsMarshaler defines marshaler for ListProjects operation
type ListProjectsMarshaler struct {
	Input *types.ListProjectsInput
}

// ListRemoteAccessSessionsMarshaler defines marshaler for ListRemoteAccessSessions operation
type ListRemoteAccessSessionsMarshaler struct {
	Input *types.ListRemoteAccessSessionsInput
}

// ListRunsMarshaler defines marshaler for ListRuns operation
type ListRunsMarshaler struct {
	Input *types.ListRunsInput
}

// ListSamplesMarshaler defines marshaler for ListSamples operation
type ListSamplesMarshaler struct {
	Input *types.ListSamplesInput
}

// ListSuitesMarshaler defines marshaler for ListSuites operation
type ListSuitesMarshaler struct {
	Input *types.ListSuitesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTestsMarshaler defines marshaler for ListTests operation
type ListTestsMarshaler struct {
	Input *types.ListTestsInput
}

// ListUniqueProblemsMarshaler defines marshaler for ListUniqueProblems operation
type ListUniqueProblemsMarshaler struct {
	Input *types.ListUniqueProblemsInput
}

// ListUploadsMarshaler defines marshaler for ListUploads operation
type ListUploadsMarshaler struct {
	Input *types.ListUploadsInput
}

// ListVPCEConfigurationsMarshaler defines marshaler for ListVPCEConfigurations operation
type ListVPCEConfigurationsMarshaler struct {
	Input *types.ListVPCEConfigurationsInput
}

// PurchaseOfferingMarshaler defines marshaler for PurchaseOffering operation
type PurchaseOfferingMarshaler struct {
	Input *types.PurchaseOfferingInput
}

// RenewOfferingMarshaler defines marshaler for RenewOffering operation
type RenewOfferingMarshaler struct {
	Input *types.RenewOfferingInput
}

// ScheduleRunMarshaler defines marshaler for ScheduleRun operation
type ScheduleRunMarshaler struct {
	Input *types.ScheduleRunInput
}

// StopJobMarshaler defines marshaler for StopJob operation
type StopJobMarshaler struct {
	Input *types.StopJobInput
}

// StopRemoteAccessSessionMarshaler defines marshaler for StopRemoteAccessSession operation
type StopRemoteAccessSessionMarshaler struct {
	Input *types.StopRemoteAccessSessionInput
}

// StopRunMarshaler defines marshaler for StopRun operation
type StopRunMarshaler struct {
	Input *types.StopRunInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateDeviceInstanceMarshaler defines marshaler for UpdateDeviceInstance operation
type UpdateDeviceInstanceMarshaler struct {
	Input *types.UpdateDeviceInstanceInput
}

// UpdateDevicePoolMarshaler defines marshaler for UpdateDevicePool operation
type UpdateDevicePoolMarshaler struct {
	Input *types.UpdateDevicePoolInput
}

// UpdateInstanceProfileMarshaler defines marshaler for UpdateInstanceProfile operation
type UpdateInstanceProfileMarshaler struct {
	Input *types.UpdateInstanceProfileInput
}

// UpdateNetworkProfileMarshaler defines marshaler for UpdateNetworkProfile operation
type UpdateNetworkProfileMarshaler struct {
	Input *types.UpdateNetworkProfileInput
}

// UpdateProjectMarshaler defines marshaler for UpdateProject operation
type UpdateProjectMarshaler struct {
	Input *types.UpdateProjectInput
}

// UpdateUploadMarshaler defines marshaler for UpdateUpload operation
type UpdateUploadMarshaler struct {
	Input *types.UpdateUploadInput
}

// UpdateVPCEConfigurationMarshaler defines marshaler for UpdateVPCEConfiguration operation
type UpdateVPCEConfigurationMarshaler struct {
	Input *types.UpdateVPCEConfigurationInput
}

func MarshalCreateDevicePoolInputShapeAWSJSON(v *types.CreateDevicePoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateInstanceProfileInputShapeAWSJSON(v *types.CreateInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateNetworkProfileInputShapeAWSJSON(v *types.CreateNetworkProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateProjectInputShapeAWSJSON(v *types.CreateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRemoteAccessSessionInputShapeAWSJSON(v *types.CreateRemoteAccessSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUploadInputShapeAWSJSON(v *types.CreateUploadInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateVPCEConfigurationInputShapeAWSJSON(v *types.CreateVPCEConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDevicePoolInputShapeAWSJSON(v *types.DeleteDevicePoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteInstanceProfileInputShapeAWSJSON(v *types.DeleteInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteNetworkProfileInputShapeAWSJSON(v *types.DeleteNetworkProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteProjectInputShapeAWSJSON(v *types.DeleteProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRemoteAccessSessionInputShapeAWSJSON(v *types.DeleteRemoteAccessSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRunInputShapeAWSJSON(v *types.DeleteRunInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUploadInputShapeAWSJSON(v *types.DeleteUploadInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteVPCEConfigurationInputShapeAWSJSON(v *types.DeleteVPCEConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAccountSettingsInputShapeAWSJSON(v *types.GetAccountSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeviceInputShapeAWSJSON(v *types.GetDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeviceInstanceInputShapeAWSJSON(v *types.GetDeviceInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDevicePoolInputShapeAWSJSON(v *types.GetDevicePoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDevicePoolCompatibilityInputShapeAWSJSON(v *types.GetDevicePoolCompatibilityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceProfileInputShapeAWSJSON(v *types.GetInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetJobInputShapeAWSJSON(v *types.GetJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetNetworkProfileInputShapeAWSJSON(v *types.GetNetworkProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetOfferingStatusInputShapeAWSJSON(v *types.GetOfferingStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetProjectInputShapeAWSJSON(v *types.GetProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRemoteAccessSessionInputShapeAWSJSON(v *types.GetRemoteAccessSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRunInputShapeAWSJSON(v *types.GetRunInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetSuiteInputShapeAWSJSON(v *types.GetSuiteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetTestInputShapeAWSJSON(v *types.GetTestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetUploadInputShapeAWSJSON(v *types.GetUploadInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetVPCEConfigurationInputShapeAWSJSON(v *types.GetVPCEConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalInstallToRemoteAccessSessionInputShapeAWSJSON(v *types.InstallToRemoteAccessSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListArtifactsInputShapeAWSJSON(v *types.ListArtifactsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeviceInstancesInputShapeAWSJSON(v *types.ListDeviceInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDevicePoolsInputShapeAWSJSON(v *types.ListDevicePoolsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDevicesInputShapeAWSJSON(v *types.ListDevicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListInstanceProfilesInputShapeAWSJSON(v *types.ListInstanceProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListJobsInputShapeAWSJSON(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListNetworkProfilesInputShapeAWSJSON(v *types.ListNetworkProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOfferingPromotionsInputShapeAWSJSON(v *types.ListOfferingPromotionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOfferingTransactionsInputShapeAWSJSON(v *types.ListOfferingTransactionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOfferingsInputShapeAWSJSON(v *types.ListOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProjectsInputShapeAWSJSON(v *types.ListProjectsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRemoteAccessSessionsInputShapeAWSJSON(v *types.ListRemoteAccessSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRunsInputShapeAWSJSON(v *types.ListRunsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSamplesInputShapeAWSJSON(v *types.ListSamplesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSuitesInputShapeAWSJSON(v *types.ListSuitesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTestsInputShapeAWSJSON(v *types.ListTestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUniqueProblemsInputShapeAWSJSON(v *types.ListUniqueProblemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUploadsInputShapeAWSJSON(v *types.ListUploadsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListVPCEConfigurationsInputShapeAWSJSON(v *types.ListVPCEConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPurchaseOfferingInputShapeAWSJSON(v *types.PurchaseOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRenewOfferingInputShapeAWSJSON(v *types.RenewOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalScheduleRunInputShapeAWSJSON(v *types.ScheduleRunInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopJobInputShapeAWSJSON(v *types.StopJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopRemoteAccessSessionInputShapeAWSJSON(v *types.StopRemoteAccessSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopRunInputShapeAWSJSON(v *types.StopRunInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDeviceInstanceInputShapeAWSJSON(v *types.UpdateDeviceInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDevicePoolInputShapeAWSJSON(v *types.UpdateDevicePoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateInstanceProfileInputShapeAWSJSON(v *types.UpdateInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateNetworkProfileInputShapeAWSJSON(v *types.UpdateNetworkProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProjectInputShapeAWSJSON(v *types.UpdateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUploadInputShapeAWSJSON(v *types.UpdateUploadInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateVPCEConfigurationInputShapeAWSJSON(v *types.UpdateVPCEConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateDevicePoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDevicePoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDevicePoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDevicePool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInstanceProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNetworkProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNetworkProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNetworkProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNetworkProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRemoteAccessSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRemoteAccessSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRemoteAccessSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRemoteAccessSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUploadMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUploadInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUploadMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUpload.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVPCEConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVPCEConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVPCEConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVPCEConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDevicePoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDevicePoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDevicePoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDevicePool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInstanceProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNetworkProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNetworkProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNetworkProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNetworkProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRemoteAccessSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRemoteAccessSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRemoteAccessSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRemoteAccessSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRunMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRunInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRunMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRun.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUploadMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUploadInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUploadMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUpload.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVPCEConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVPCEConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVPCEConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVPCEConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccountSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeviceInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeviceInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeviceInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeviceInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDevicePoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDevicePoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDevicePoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDevicePool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDevicePoolCompatibilityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDevicePoolCompatibilityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDevicePoolCompatibilityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDevicePoolCompatibility.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetNetworkProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetNetworkProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetNetworkProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetNetworkProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOfferingStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOfferingStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOfferingStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOfferingStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRemoteAccessSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRemoteAccessSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRemoteAccessSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRemoteAccessSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRunMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRunInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRunMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRun.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSuiteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSuiteInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSuiteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSuite.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUploadMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUploadInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUploadMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUpload.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetVPCEConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetVPCEConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetVPCEConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetVPCEConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InstallToRemoteAccessSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInstallToRemoteAccessSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InstallToRemoteAccessSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InstallToRemoteAccessSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListArtifactsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListArtifactsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListArtifactsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListArtifacts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeviceInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeviceInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeviceInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeviceInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDevicePoolsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDevicePoolsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDevicePoolsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDevicePools.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDevicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDevicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDevicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDevices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInstanceProfilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInstanceProfilesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInstanceProfilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInstanceProfiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListNetworkProfilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListNetworkProfilesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListNetworkProfilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListNetworkProfiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOfferingPromotionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOfferingPromotionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOfferingPromotionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOfferingPromotions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOfferingTransactionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOfferingTransactionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOfferingTransactionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOfferingTransactions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOfferingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProjectsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProjectsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProjectsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProjects.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRemoteAccessSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRemoteAccessSessionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRemoteAccessSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRemoteAccessSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRunsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRunsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRunsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRuns.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSamplesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSamplesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSamplesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSamples.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSuitesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSuitesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSuitesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSuites.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTestsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUniqueProblemsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUniqueProblemsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUniqueProblemsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUniqueProblems.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUploadsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUploadsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUploadsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUploads.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListVPCEConfigurationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListVPCEConfigurationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListVPCEConfigurationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListVPCEConfigurations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseOfferingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RenewOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRenewOfferingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RenewOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RenewOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ScheduleRunMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalScheduleRunInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ScheduleRunMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ScheduleRun.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopRemoteAccessSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopRemoteAccessSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopRemoteAccessSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopRemoteAccessSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopRunMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopRunInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopRunMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopRun.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDeviceInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDeviceInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDeviceInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDeviceInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDevicePoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDevicePoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDevicePoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDevicePool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateInstanceProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateNetworkProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateNetworkProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateNetworkProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateNetworkProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUploadMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUploadInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUploadMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUpload.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateVPCEConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateVPCEConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateVPCEConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateVPCEConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
