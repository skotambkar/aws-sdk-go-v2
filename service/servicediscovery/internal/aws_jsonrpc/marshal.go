// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/servicediscovery/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateHttpNamespaceMarshaler defines marshaler for CreateHttpNamespace operation
type CreateHttpNamespaceMarshaler struct {
	Input *types.CreateHttpNamespaceInput
}

// CreatePrivateDnsNamespaceMarshaler defines marshaler for CreatePrivateDnsNamespace operation
type CreatePrivateDnsNamespaceMarshaler struct {
	Input *types.CreatePrivateDnsNamespaceInput
}

// CreatePublicDnsNamespaceMarshaler defines marshaler for CreatePublicDnsNamespace operation
type CreatePublicDnsNamespaceMarshaler struct {
	Input *types.CreatePublicDnsNamespaceInput
}

// CreateServiceMarshaler defines marshaler for CreateService operation
type CreateServiceMarshaler struct {
	Input *types.CreateServiceInput
}

// DeleteNamespaceMarshaler defines marshaler for DeleteNamespace operation
type DeleteNamespaceMarshaler struct {
	Input *types.DeleteNamespaceInput
}

// DeleteServiceMarshaler defines marshaler for DeleteService operation
type DeleteServiceMarshaler struct {
	Input *types.DeleteServiceInput
}

// DeregisterInstanceMarshaler defines marshaler for DeregisterInstance operation
type DeregisterInstanceMarshaler struct {
	Input *types.DeregisterInstanceInput
}

// DiscoverInstancesMarshaler defines marshaler for DiscoverInstances operation
type DiscoverInstancesMarshaler struct {
	Input *types.DiscoverInstancesInput
}

// GetInstanceMarshaler defines marshaler for GetInstance operation
type GetInstanceMarshaler struct {
	Input *types.GetInstanceInput
}

// GetInstancesHealthStatusMarshaler defines marshaler for GetInstancesHealthStatus operation
type GetInstancesHealthStatusMarshaler struct {
	Input *types.GetInstancesHealthStatusInput
}

// GetNamespaceMarshaler defines marshaler for GetNamespace operation
type GetNamespaceMarshaler struct {
	Input *types.GetNamespaceInput
}

// GetOperationMarshaler defines marshaler for GetOperation operation
type GetOperationMarshaler struct {
	Input *types.GetOperationInput
}

// GetServiceMarshaler defines marshaler for GetService operation
type GetServiceMarshaler struct {
	Input *types.GetServiceInput
}

// ListInstancesMarshaler defines marshaler for ListInstances operation
type ListInstancesMarshaler struct {
	Input *types.ListInstancesInput
}

// ListNamespacesMarshaler defines marshaler for ListNamespaces operation
type ListNamespacesMarshaler struct {
	Input *types.ListNamespacesInput
}

// ListOperationsMarshaler defines marshaler for ListOperations operation
type ListOperationsMarshaler struct {
	Input *types.ListOperationsInput
}

// ListServicesMarshaler defines marshaler for ListServices operation
type ListServicesMarshaler struct {
	Input *types.ListServicesInput
}

// RegisterInstanceMarshaler defines marshaler for RegisterInstance operation
type RegisterInstanceMarshaler struct {
	Input *types.RegisterInstanceInput
}

// UpdateInstanceCustomHealthStatusMarshaler defines marshaler for UpdateInstanceCustomHealthStatus operation
type UpdateInstanceCustomHealthStatusMarshaler struct {
	Input *types.UpdateInstanceCustomHealthStatusInput
}

// UpdateServiceMarshaler defines marshaler for UpdateService operation
type UpdateServiceMarshaler struct {
	Input *types.UpdateServiceInput
}

func MarshalCreateHttpNamespaceInputShapeAWSJSON(v *types.CreateHttpNamespaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePrivateDnsNamespaceInputShapeAWSJSON(v *types.CreatePrivateDnsNamespaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePublicDnsNamespaceInputShapeAWSJSON(v *types.CreatePublicDnsNamespaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateServiceInputShapeAWSJSON(v *types.CreateServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteNamespaceInputShapeAWSJSON(v *types.DeleteNamespaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteServiceInputShapeAWSJSON(v *types.DeleteServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterInstanceInputShapeAWSJSON(v *types.DeregisterInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDiscoverInstancesInputShapeAWSJSON(v *types.DiscoverInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceInputShapeAWSJSON(v *types.GetInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstancesHealthStatusInputShapeAWSJSON(v *types.GetInstancesHealthStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetNamespaceInputShapeAWSJSON(v *types.GetNamespaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetOperationInputShapeAWSJSON(v *types.GetOperationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetServiceInputShapeAWSJSON(v *types.GetServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListInstancesInputShapeAWSJSON(v *types.ListInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListNamespacesInputShapeAWSJSON(v *types.ListNamespacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOperationsInputShapeAWSJSON(v *types.ListOperationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListServicesInputShapeAWSJSON(v *types.ListServicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterInstanceInputShapeAWSJSON(v *types.RegisterInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateInstanceCustomHealthStatusInputShapeAWSJSON(v *types.UpdateInstanceCustomHealthStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateServiceInputShapeAWSJSON(v *types.UpdateServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateHttpNamespaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHttpNamespaceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHttpNamespaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHttpNamespace.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePrivateDnsNamespaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePrivateDnsNamespaceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePrivateDnsNamespaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePrivateDnsNamespace.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePublicDnsNamespaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePublicDnsNamespaceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePublicDnsNamespaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePublicDnsNamespace.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNamespaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNamespaceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNamespaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNamespace.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DiscoverInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDiscoverInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DiscoverInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DiscoverInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstancesHealthStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstancesHealthStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstancesHealthStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstancesHealthStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetNamespaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetNamespaceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetNamespaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetNamespace.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOperationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOperationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOperationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOperation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListNamespacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListNamespacesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListNamespacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListNamespaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOperationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOperationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOperationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOperations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateInstanceCustomHealthStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateInstanceCustomHealthStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateInstanceCustomHealthStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateInstanceCustomHealthStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
