// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/iotevents/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateDetectorModelMarshaler defines marshaler for CreateDetectorModel operation
type CreateDetectorModelMarshaler struct {
	Input *types.CreateDetectorModelInput
}

// CreateInputMarshaler defines marshaler for CreateInput operation
type CreateInputMarshaler struct {
	Input *types.CreateInputInput
}

// DeleteDetectorModelMarshaler defines marshaler for DeleteDetectorModel operation
type DeleteDetectorModelMarshaler struct {
	Input *types.DeleteDetectorModelInput
}

// DeleteInputMarshaler defines marshaler for DeleteInput operation
type DeleteInputMarshaler struct {
	Input *types.DeleteInputInput
}

// DescribeDetectorModelMarshaler defines marshaler for DescribeDetectorModel operation
type DescribeDetectorModelMarshaler struct {
	Input *types.DescribeDetectorModelInput
}

// DescribeInputMarshaler defines marshaler for DescribeInput operation
type DescribeInputMarshaler struct {
	Input *types.DescribeInputInput
}

// DescribeLoggingOptionsMarshaler defines marshaler for DescribeLoggingOptions operation
type DescribeLoggingOptionsMarshaler struct {
	Input *types.DescribeLoggingOptionsInput
}

// ListDetectorModelVersionsMarshaler defines marshaler for ListDetectorModelVersions operation
type ListDetectorModelVersionsMarshaler struct {
	Input *types.ListDetectorModelVersionsInput
}

// ListDetectorModelsMarshaler defines marshaler for ListDetectorModels operation
type ListDetectorModelsMarshaler struct {
	Input *types.ListDetectorModelsInput
}

// ListInputsMarshaler defines marshaler for ListInputs operation
type ListInputsMarshaler struct {
	Input *types.ListInputsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PutLoggingOptionsMarshaler defines marshaler for PutLoggingOptions operation
type PutLoggingOptionsMarshaler struct {
	Input *types.PutLoggingOptionsInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateDetectorModelMarshaler defines marshaler for UpdateDetectorModel operation
type UpdateDetectorModelMarshaler struct {
	Input *types.UpdateDetectorModelInput
}

// UpdateInputMarshaler defines marshaler for UpdateInput operation
type UpdateInputMarshaler struct {
	Input *types.UpdateInputInput
}

func MarshalCreateDetectorModelInputShapeAWSREST(v *types.CreateDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDetectorModelInputShapeAWSJSON(v *types.CreateDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateInputInputShapeAWSREST(v *types.CreateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateInputInputShapeAWSJSON(v *types.CreateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDetectorModelInputShapeAWSREST(v *types.DeleteDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDetectorModelInputShapeAWSJSON(v *types.DeleteDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteInputInputShapeAWSREST(v *types.DeleteInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteInputInputShapeAWSJSON(v *types.DeleteInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeDetectorModelInputShapeAWSREST(v *types.DescribeDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeDetectorModelInputShapeAWSJSON(v *types.DescribeDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeInputInputShapeAWSREST(v *types.DescribeInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeInputInputShapeAWSJSON(v *types.DescribeInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeLoggingOptionsInputShapeAWSREST(v *types.DescribeLoggingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeLoggingOptionsInputShapeAWSJSON(v *types.DescribeLoggingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDetectorModelVersionsInputShapeAWSREST(v *types.ListDetectorModelVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDetectorModelVersionsInputShapeAWSJSON(v *types.ListDetectorModelVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDetectorModelsInputShapeAWSREST(v *types.ListDetectorModelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDetectorModelsInputShapeAWSJSON(v *types.ListDetectorModelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListInputsInputShapeAWSREST(v *types.ListInputsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListInputsInputShapeAWSJSON(v *types.ListInputsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutLoggingOptionsInputShapeAWSREST(v *types.PutLoggingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutLoggingOptionsInputShapeAWSJSON(v *types.PutLoggingOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDetectorModelInputShapeAWSREST(v *types.UpdateDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDetectorModelInputShapeAWSJSON(v *types.UpdateDetectorModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateInputInputShapeAWSREST(v *types.UpdateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateInputInputShapeAWSJSON(v *types.UpdateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateDetectorModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDetectorModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDetectorModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDetectorModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDetectorModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDetectorModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDetectorModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDetectorModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDetectorModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDetectorModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDetectorModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDetectorModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeDetectorModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDetectorModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDetectorModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLoggingOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLoggingOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeLoggingOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLoggingOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLoggingOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDetectorModelVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDetectorModelVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDetectorModelVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDetectorModelVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDetectorModelVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDetectorModelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDetectorModelsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDetectorModelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDetectorModelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDetectorModels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInputsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInputsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListInputsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInputsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInputs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutLoggingOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutLoggingOptionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutLoggingOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutLoggingOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutLoggingOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDetectorModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDetectorModelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDetectorModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDetectorModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDetectorModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
