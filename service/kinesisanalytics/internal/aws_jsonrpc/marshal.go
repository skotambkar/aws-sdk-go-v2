// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/kinesisanalytics/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddApplicationCloudWatchLoggingOptionMarshaler defines marshaler for AddApplicationCloudWatchLoggingOption operation
type AddApplicationCloudWatchLoggingOptionMarshaler struct {
	Input *types.AddApplicationCloudWatchLoggingOptionInput
}

// AddApplicationInputMarshaler defines marshaler for AddApplicationInput operation
type AddApplicationInputMarshaler struct {
	Input *types.AddApplicationInputInput
}

// AddApplicationInputProcessingConfigurationMarshaler defines marshaler for AddApplicationInputProcessingConfiguration operation
type AddApplicationInputProcessingConfigurationMarshaler struct {
	Input *types.AddApplicationInputProcessingConfigurationInput
}

// AddApplicationOutputMarshaler defines marshaler for AddApplicationOutput operation
type AddApplicationOutputMarshaler struct {
	Input *types.AddApplicationOutputInput
}

// AddApplicationReferenceDataSourceMarshaler defines marshaler for AddApplicationReferenceDataSource operation
type AddApplicationReferenceDataSourceMarshaler struct {
	Input *types.AddApplicationReferenceDataSourceInput
}

// CreateApplicationMarshaler defines marshaler for CreateApplication operation
type CreateApplicationMarshaler struct {
	Input *types.CreateApplicationInput
}

// DeleteApplicationMarshaler defines marshaler for DeleteApplication operation
type DeleteApplicationMarshaler struct {
	Input *types.DeleteApplicationInput
}

// DeleteApplicationCloudWatchLoggingOptionMarshaler defines marshaler for DeleteApplicationCloudWatchLoggingOption operation
type DeleteApplicationCloudWatchLoggingOptionMarshaler struct {
	Input *types.DeleteApplicationCloudWatchLoggingOptionInput
}

// DeleteApplicationInputProcessingConfigurationMarshaler defines marshaler for DeleteApplicationInputProcessingConfiguration operation
type DeleteApplicationInputProcessingConfigurationMarshaler struct {
	Input *types.DeleteApplicationInputProcessingConfigurationInput
}

// DeleteApplicationOutputMarshaler defines marshaler for DeleteApplicationOutput operation
type DeleteApplicationOutputMarshaler struct {
	Input *types.DeleteApplicationOutputInput
}

// DeleteApplicationReferenceDataSourceMarshaler defines marshaler for DeleteApplicationReferenceDataSource operation
type DeleteApplicationReferenceDataSourceMarshaler struct {
	Input *types.DeleteApplicationReferenceDataSourceInput
}

// DescribeApplicationMarshaler defines marshaler for DescribeApplication operation
type DescribeApplicationMarshaler struct {
	Input *types.DescribeApplicationInput
}

// DiscoverInputSchemaMarshaler defines marshaler for DiscoverInputSchema operation
type DiscoverInputSchemaMarshaler struct {
	Input *types.DiscoverInputSchemaInput
}

// ListApplicationsMarshaler defines marshaler for ListApplications operation
type ListApplicationsMarshaler struct {
	Input *types.ListApplicationsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// StartApplicationMarshaler defines marshaler for StartApplication operation
type StartApplicationMarshaler struct {
	Input *types.StartApplicationInput
}

// StopApplicationMarshaler defines marshaler for StopApplication operation
type StopApplicationMarshaler struct {
	Input *types.StopApplicationInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateApplicationMarshaler defines marshaler for UpdateApplication operation
type UpdateApplicationMarshaler struct {
	Input *types.UpdateApplicationInput
}

func MarshalAddApplicationCloudWatchLoggingOptionInputShapeAWSJSON(v *types.AddApplicationCloudWatchLoggingOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddApplicationInputInputShapeAWSJSON(v *types.AddApplicationInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddApplicationInputProcessingConfigurationInputShapeAWSJSON(v *types.AddApplicationInputProcessingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddApplicationOutputInputShapeAWSJSON(v *types.AddApplicationOutputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddApplicationReferenceDataSourceInputShapeAWSJSON(v *types.AddApplicationReferenceDataSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateApplicationInputShapeAWSJSON(v *types.CreateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationInputShapeAWSJSON(v *types.DeleteApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationCloudWatchLoggingOptionInputShapeAWSJSON(v *types.DeleteApplicationCloudWatchLoggingOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationInputProcessingConfigurationInputShapeAWSJSON(v *types.DeleteApplicationInputProcessingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationOutputInputShapeAWSJSON(v *types.DeleteApplicationOutputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationReferenceDataSourceInputShapeAWSJSON(v *types.DeleteApplicationReferenceDataSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeApplicationInputShapeAWSJSON(v *types.DescribeApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDiscoverInputSchemaInputShapeAWSJSON(v *types.DiscoverInputSchemaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListApplicationsInputShapeAWSJSON(v *types.ListApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartApplicationInputShapeAWSJSON(v *types.StartApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopApplicationInputShapeAWSJSON(v *types.StopApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateApplicationInputShapeAWSJSON(v *types.UpdateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AddApplicationCloudWatchLoggingOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddApplicationCloudWatchLoggingOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddApplicationCloudWatchLoggingOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddApplicationCloudWatchLoggingOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddApplicationInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddApplicationInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddApplicationInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddApplicationInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddApplicationInputProcessingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddApplicationInputProcessingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddApplicationInputProcessingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddApplicationInputProcessingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddApplicationOutputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddApplicationOutputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddApplicationOutputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddApplicationOutput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddApplicationReferenceDataSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddApplicationReferenceDataSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddApplicationReferenceDataSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddApplicationReferenceDataSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationCloudWatchLoggingOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationCloudWatchLoggingOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationCloudWatchLoggingOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplicationCloudWatchLoggingOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationInputProcessingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationInputProcessingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationInputProcessingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplicationInputProcessingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationOutputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationOutputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationOutputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplicationOutput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationReferenceDataSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationReferenceDataSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationReferenceDataSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplicationReferenceDataSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DiscoverInputSchemaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDiscoverInputSchemaInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DiscoverInputSchemaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DiscoverInputSchema.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
