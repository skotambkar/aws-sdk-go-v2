// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/firehose/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateDeliveryStreamMarshaler defines marshaler for CreateDeliveryStream operation
type CreateDeliveryStreamMarshaler struct {
	Input *types.CreateDeliveryStreamInput
}

// DeleteDeliveryStreamMarshaler defines marshaler for DeleteDeliveryStream operation
type DeleteDeliveryStreamMarshaler struct {
	Input *types.DeleteDeliveryStreamInput
}

// DescribeDeliveryStreamMarshaler defines marshaler for DescribeDeliveryStream operation
type DescribeDeliveryStreamMarshaler struct {
	Input *types.DescribeDeliveryStreamInput
}

// ListDeliveryStreamsMarshaler defines marshaler for ListDeliveryStreams operation
type ListDeliveryStreamsMarshaler struct {
	Input *types.ListDeliveryStreamsInput
}

// ListTagsForDeliveryStreamMarshaler defines marshaler for ListTagsForDeliveryStream operation
type ListTagsForDeliveryStreamMarshaler struct {
	Input *types.ListTagsForDeliveryStreamInput
}

// PutRecordMarshaler defines marshaler for PutRecord operation
type PutRecordMarshaler struct {
	Input *types.PutRecordInput
}

// PutRecordBatchMarshaler defines marshaler for PutRecordBatch operation
type PutRecordBatchMarshaler struct {
	Input *types.PutRecordBatchInput
}

// StartDeliveryStreamEncryptionMarshaler defines marshaler for StartDeliveryStreamEncryption operation
type StartDeliveryStreamEncryptionMarshaler struct {
	Input *types.StartDeliveryStreamEncryptionInput
}

// StopDeliveryStreamEncryptionMarshaler defines marshaler for StopDeliveryStreamEncryption operation
type StopDeliveryStreamEncryptionMarshaler struct {
	Input *types.StopDeliveryStreamEncryptionInput
}

// TagDeliveryStreamMarshaler defines marshaler for TagDeliveryStream operation
type TagDeliveryStreamMarshaler struct {
	Input *types.TagDeliveryStreamInput
}

// UntagDeliveryStreamMarshaler defines marshaler for UntagDeliveryStream operation
type UntagDeliveryStreamMarshaler struct {
	Input *types.UntagDeliveryStreamInput
}

// UpdateDestinationMarshaler defines marshaler for UpdateDestination operation
type UpdateDestinationMarshaler struct {
	Input *types.UpdateDestinationInput
}

func MarshalCreateDeliveryStreamInputShapeAWSJSON(v *types.CreateDeliveryStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDeliveryStreamInputShapeAWSJSON(v *types.DeleteDeliveryStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDeliveryStreamInputShapeAWSJSON(v *types.DescribeDeliveryStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeliveryStreamsInputShapeAWSJSON(v *types.ListDeliveryStreamsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForDeliveryStreamInputShapeAWSJSON(v *types.ListTagsForDeliveryStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutRecordInputShapeAWSJSON(v *types.PutRecordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutRecordBatchInputShapeAWSJSON(v *types.PutRecordBatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartDeliveryStreamEncryptionInputShapeAWSJSON(v *types.StartDeliveryStreamEncryptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopDeliveryStreamEncryptionInputShapeAWSJSON(v *types.StopDeliveryStreamEncryptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagDeliveryStreamInputShapeAWSJSON(v *types.TagDeliveryStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagDeliveryStreamInputShapeAWSJSON(v *types.UntagDeliveryStreamInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDestinationInputShapeAWSJSON(v *types.UpdateDestinationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateDeliveryStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeliveryStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeliveryStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeliveryStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDeliveryStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDeliveryStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDeliveryStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDeliveryStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDeliveryStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDeliveryStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDeliveryStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDeliveryStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeliveryStreamsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeliveryStreamsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeliveryStreamsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeliveryStreams.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForDeliveryStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForDeliveryStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForDeliveryStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForDeliveryStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRecordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRecordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRecordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRecord.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRecordBatchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRecordBatchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRecordBatchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRecordBatch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartDeliveryStreamEncryptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartDeliveryStreamEncryptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartDeliveryStreamEncryptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartDeliveryStreamEncryption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopDeliveryStreamEncryptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopDeliveryStreamEncryptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopDeliveryStreamEncryptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopDeliveryStreamEncryption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagDeliveryStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagDeliveryStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagDeliveryStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagDeliveryStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagDeliveryStreamMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagDeliveryStreamInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagDeliveryStreamMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagDeliveryStream.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDestinationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDestinationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDestinationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDestination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
