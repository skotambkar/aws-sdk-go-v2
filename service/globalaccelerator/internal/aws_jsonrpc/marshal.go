// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/globalaccelerator/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateAcceleratorMarshaler defines marshaler for CreateAccelerator operation
type CreateAcceleratorMarshaler struct {
	Input *types.CreateAcceleratorInput
}

// CreateEndpointGroupMarshaler defines marshaler for CreateEndpointGroup operation
type CreateEndpointGroupMarshaler struct {
	Input *types.CreateEndpointGroupInput
}

// CreateListenerMarshaler defines marshaler for CreateListener operation
type CreateListenerMarshaler struct {
	Input *types.CreateListenerInput
}

// DeleteAcceleratorMarshaler defines marshaler for DeleteAccelerator operation
type DeleteAcceleratorMarshaler struct {
	Input *types.DeleteAcceleratorInput
}

// DeleteEndpointGroupMarshaler defines marshaler for DeleteEndpointGroup operation
type DeleteEndpointGroupMarshaler struct {
	Input *types.DeleteEndpointGroupInput
}

// DeleteListenerMarshaler defines marshaler for DeleteListener operation
type DeleteListenerMarshaler struct {
	Input *types.DeleteListenerInput
}

// DescribeAcceleratorMarshaler defines marshaler for DescribeAccelerator operation
type DescribeAcceleratorMarshaler struct {
	Input *types.DescribeAcceleratorInput
}

// DescribeAcceleratorAttributesMarshaler defines marshaler for DescribeAcceleratorAttributes operation
type DescribeAcceleratorAttributesMarshaler struct {
	Input *types.DescribeAcceleratorAttributesInput
}

// DescribeEndpointGroupMarshaler defines marshaler for DescribeEndpointGroup operation
type DescribeEndpointGroupMarshaler struct {
	Input *types.DescribeEndpointGroupInput
}

// DescribeListenerMarshaler defines marshaler for DescribeListener operation
type DescribeListenerMarshaler struct {
	Input *types.DescribeListenerInput
}

// ListAcceleratorsMarshaler defines marshaler for ListAccelerators operation
type ListAcceleratorsMarshaler struct {
	Input *types.ListAcceleratorsInput
}

// ListEndpointGroupsMarshaler defines marshaler for ListEndpointGroups operation
type ListEndpointGroupsMarshaler struct {
	Input *types.ListEndpointGroupsInput
}

// ListListenersMarshaler defines marshaler for ListListeners operation
type ListListenersMarshaler struct {
	Input *types.ListListenersInput
}

// UpdateAcceleratorMarshaler defines marshaler for UpdateAccelerator operation
type UpdateAcceleratorMarshaler struct {
	Input *types.UpdateAcceleratorInput
}

// UpdateAcceleratorAttributesMarshaler defines marshaler for UpdateAcceleratorAttributes operation
type UpdateAcceleratorAttributesMarshaler struct {
	Input *types.UpdateAcceleratorAttributesInput
}

// UpdateEndpointGroupMarshaler defines marshaler for UpdateEndpointGroup operation
type UpdateEndpointGroupMarshaler struct {
	Input *types.UpdateEndpointGroupInput
}

// UpdateListenerMarshaler defines marshaler for UpdateListener operation
type UpdateListenerMarshaler struct {
	Input *types.UpdateListenerInput
}

func MarshalCreateAcceleratorInputShapeAWSJSON(v *types.CreateAcceleratorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateEndpointGroupInputShapeAWSJSON(v *types.CreateEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateListenerInputShapeAWSJSON(v *types.CreateListenerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteAcceleratorInputShapeAWSJSON(v *types.DeleteAcceleratorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteEndpointGroupInputShapeAWSJSON(v *types.DeleteEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteListenerInputShapeAWSJSON(v *types.DeleteListenerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAcceleratorInputShapeAWSJSON(v *types.DescribeAcceleratorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAcceleratorAttributesInputShapeAWSJSON(v *types.DescribeAcceleratorAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEndpointGroupInputShapeAWSJSON(v *types.DescribeEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeListenerInputShapeAWSJSON(v *types.DescribeListenerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAcceleratorsInputShapeAWSJSON(v *types.ListAcceleratorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListEndpointGroupsInputShapeAWSJSON(v *types.ListEndpointGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListListenersInputShapeAWSJSON(v *types.ListListenersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateAcceleratorInputShapeAWSJSON(v *types.UpdateAcceleratorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateAcceleratorAttributesInputShapeAWSJSON(v *types.UpdateAcceleratorAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateEndpointGroupInputShapeAWSJSON(v *types.UpdateEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateListenerInputShapeAWSJSON(v *types.UpdateListenerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateAcceleratorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAcceleratorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAcceleratorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAccelerator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateListenerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateListenerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateListenerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateListener.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAcceleratorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAcceleratorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAcceleratorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAccelerator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteListenerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteListenerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteListenerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteListener.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAcceleratorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAcceleratorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAcceleratorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccelerator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAcceleratorAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAcceleratorAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAcceleratorAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAcceleratorAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeListenerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeListenerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeListenerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeListener.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAcceleratorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAcceleratorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAcceleratorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccelerators.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEndpointGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEndpointGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEndpointGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEndpointGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListListenersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListListenersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListListenersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListListeners.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAcceleratorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAcceleratorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAcceleratorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAccelerator.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAcceleratorAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAcceleratorAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAcceleratorAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAcceleratorAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateListenerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateListenerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateListenerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateListener.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
