// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/iam/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddClientIDToOpenIDConnectProviderMarshaler defines marshaler for AddClientIDToOpenIDConnectProvider operation
type AddClientIDToOpenIDConnectProviderMarshaler struct {
	Input *types.AddClientIDToOpenIDConnectProviderInput
}

// AddRoleToInstanceProfileMarshaler defines marshaler for AddRoleToInstanceProfile operation
type AddRoleToInstanceProfileMarshaler struct {
	Input *types.AddRoleToInstanceProfileInput
}

// AddUserToGroupMarshaler defines marshaler for AddUserToGroup operation
type AddUserToGroupMarshaler struct {
	Input *types.AddUserToGroupInput
}

// AttachGroupPolicyMarshaler defines marshaler for AttachGroupPolicy operation
type AttachGroupPolicyMarshaler struct {
	Input *types.AttachGroupPolicyInput
}

// AttachRolePolicyMarshaler defines marshaler for AttachRolePolicy operation
type AttachRolePolicyMarshaler struct {
	Input *types.AttachRolePolicyInput
}

// AttachUserPolicyMarshaler defines marshaler for AttachUserPolicy operation
type AttachUserPolicyMarshaler struct {
	Input *types.AttachUserPolicyInput
}

// ChangePasswordMarshaler defines marshaler for ChangePassword operation
type ChangePasswordMarshaler struct {
	Input *types.ChangePasswordInput
}

// CreateAccessKeyMarshaler defines marshaler for CreateAccessKey operation
type CreateAccessKeyMarshaler struct {
	Input *types.CreateAccessKeyInput
}

// CreateAccountAliasMarshaler defines marshaler for CreateAccountAlias operation
type CreateAccountAliasMarshaler struct {
	Input *types.CreateAccountAliasInput
}

// CreateGroupMarshaler defines marshaler for CreateGroup operation
type CreateGroupMarshaler struct {
	Input *types.CreateGroupInput
}

// CreateInstanceProfileMarshaler defines marshaler for CreateInstanceProfile operation
type CreateInstanceProfileMarshaler struct {
	Input *types.CreateInstanceProfileInput
}

// CreateLoginProfileMarshaler defines marshaler for CreateLoginProfile operation
type CreateLoginProfileMarshaler struct {
	Input *types.CreateLoginProfileInput
}

// CreateOpenIDConnectProviderMarshaler defines marshaler for CreateOpenIDConnectProvider operation
type CreateOpenIDConnectProviderMarshaler struct {
	Input *types.CreateOpenIDConnectProviderInput
}

// CreatePolicyMarshaler defines marshaler for CreatePolicy operation
type CreatePolicyMarshaler struct {
	Input *types.CreatePolicyInput
}

// CreatePolicyVersionMarshaler defines marshaler for CreatePolicyVersion operation
type CreatePolicyVersionMarshaler struct {
	Input *types.CreatePolicyVersionInput
}

// CreateRoleMarshaler defines marshaler for CreateRole operation
type CreateRoleMarshaler struct {
	Input *types.CreateRoleInput
}

// CreateSAMLProviderMarshaler defines marshaler for CreateSAMLProvider operation
type CreateSAMLProviderMarshaler struct {
	Input *types.CreateSAMLProviderInput
}

// CreateServiceLinkedRoleMarshaler defines marshaler for CreateServiceLinkedRole operation
type CreateServiceLinkedRoleMarshaler struct {
	Input *types.CreateServiceLinkedRoleInput
}

// CreateServiceSpecificCredentialMarshaler defines marshaler for CreateServiceSpecificCredential operation
type CreateServiceSpecificCredentialMarshaler struct {
	Input *types.CreateServiceSpecificCredentialInput
}

// CreateUserMarshaler defines marshaler for CreateUser operation
type CreateUserMarshaler struct {
	Input *types.CreateUserInput
}

// CreateVirtualMFADeviceMarshaler defines marshaler for CreateVirtualMFADevice operation
type CreateVirtualMFADeviceMarshaler struct {
	Input *types.CreateVirtualMFADeviceInput
}

// DeactivateMFADeviceMarshaler defines marshaler for DeactivateMFADevice operation
type DeactivateMFADeviceMarshaler struct {
	Input *types.DeactivateMFADeviceInput
}

// DeleteAccessKeyMarshaler defines marshaler for DeleteAccessKey operation
type DeleteAccessKeyMarshaler struct {
	Input *types.DeleteAccessKeyInput
}

// DeleteAccountAliasMarshaler defines marshaler for DeleteAccountAlias operation
type DeleteAccountAliasMarshaler struct {
	Input *types.DeleteAccountAliasInput
}

// DeleteAccountPasswordPolicyMarshaler defines marshaler for DeleteAccountPasswordPolicy operation
type DeleteAccountPasswordPolicyMarshaler struct {
	Input *types.DeleteAccountPasswordPolicyInput
}

// DeleteGroupMarshaler defines marshaler for DeleteGroup operation
type DeleteGroupMarshaler struct {
	Input *types.DeleteGroupInput
}

// DeleteGroupPolicyMarshaler defines marshaler for DeleteGroupPolicy operation
type DeleteGroupPolicyMarshaler struct {
	Input *types.DeleteGroupPolicyInput
}

// DeleteInstanceProfileMarshaler defines marshaler for DeleteInstanceProfile operation
type DeleteInstanceProfileMarshaler struct {
	Input *types.DeleteInstanceProfileInput
}

// DeleteLoginProfileMarshaler defines marshaler for DeleteLoginProfile operation
type DeleteLoginProfileMarshaler struct {
	Input *types.DeleteLoginProfileInput
}

// DeleteOpenIDConnectProviderMarshaler defines marshaler for DeleteOpenIDConnectProvider operation
type DeleteOpenIDConnectProviderMarshaler struct {
	Input *types.DeleteOpenIDConnectProviderInput
}

// DeletePolicyMarshaler defines marshaler for DeletePolicy operation
type DeletePolicyMarshaler struct {
	Input *types.DeletePolicyInput
}

// DeletePolicyVersionMarshaler defines marshaler for DeletePolicyVersion operation
type DeletePolicyVersionMarshaler struct {
	Input *types.DeletePolicyVersionInput
}

// DeleteRoleMarshaler defines marshaler for DeleteRole operation
type DeleteRoleMarshaler struct {
	Input *types.DeleteRoleInput
}

// DeleteRolePermissionsBoundaryMarshaler defines marshaler for DeleteRolePermissionsBoundary operation
type DeleteRolePermissionsBoundaryMarshaler struct {
	Input *types.DeleteRolePermissionsBoundaryInput
}

// DeleteRolePolicyMarshaler defines marshaler for DeleteRolePolicy operation
type DeleteRolePolicyMarshaler struct {
	Input *types.DeleteRolePolicyInput
}

// DeleteSAMLProviderMarshaler defines marshaler for DeleteSAMLProvider operation
type DeleteSAMLProviderMarshaler struct {
	Input *types.DeleteSAMLProviderInput
}

// DeleteSSHPublicKeyMarshaler defines marshaler for DeleteSSHPublicKey operation
type DeleteSSHPublicKeyMarshaler struct {
	Input *types.DeleteSSHPublicKeyInput
}

// DeleteServerCertificateMarshaler defines marshaler for DeleteServerCertificate operation
type DeleteServerCertificateMarshaler struct {
	Input *types.DeleteServerCertificateInput
}

// DeleteServiceLinkedRoleMarshaler defines marshaler for DeleteServiceLinkedRole operation
type DeleteServiceLinkedRoleMarshaler struct {
	Input *types.DeleteServiceLinkedRoleInput
}

// DeleteServiceSpecificCredentialMarshaler defines marshaler for DeleteServiceSpecificCredential operation
type DeleteServiceSpecificCredentialMarshaler struct {
	Input *types.DeleteServiceSpecificCredentialInput
}

// DeleteSigningCertificateMarshaler defines marshaler for DeleteSigningCertificate operation
type DeleteSigningCertificateMarshaler struct {
	Input *types.DeleteSigningCertificateInput
}

// DeleteUserMarshaler defines marshaler for DeleteUser operation
type DeleteUserMarshaler struct {
	Input *types.DeleteUserInput
}

// DeleteUserPermissionsBoundaryMarshaler defines marshaler for DeleteUserPermissionsBoundary operation
type DeleteUserPermissionsBoundaryMarshaler struct {
	Input *types.DeleteUserPermissionsBoundaryInput
}

// DeleteUserPolicyMarshaler defines marshaler for DeleteUserPolicy operation
type DeleteUserPolicyMarshaler struct {
	Input *types.DeleteUserPolicyInput
}

// DeleteVirtualMFADeviceMarshaler defines marshaler for DeleteVirtualMFADevice operation
type DeleteVirtualMFADeviceMarshaler struct {
	Input *types.DeleteVirtualMFADeviceInput
}

// DetachGroupPolicyMarshaler defines marshaler for DetachGroupPolicy operation
type DetachGroupPolicyMarshaler struct {
	Input *types.DetachGroupPolicyInput
}

// DetachRolePolicyMarshaler defines marshaler for DetachRolePolicy operation
type DetachRolePolicyMarshaler struct {
	Input *types.DetachRolePolicyInput
}

// DetachUserPolicyMarshaler defines marshaler for DetachUserPolicy operation
type DetachUserPolicyMarshaler struct {
	Input *types.DetachUserPolicyInput
}

// EnableMFADeviceMarshaler defines marshaler for EnableMFADevice operation
type EnableMFADeviceMarshaler struct {
	Input *types.EnableMFADeviceInput
}

// GenerateCredentialReportMarshaler defines marshaler for GenerateCredentialReport operation
type GenerateCredentialReportMarshaler struct {
	Input *types.GenerateCredentialReportInput
}

// GenerateOrganizationsAccessReportMarshaler defines marshaler for GenerateOrganizationsAccessReport operation
type GenerateOrganizationsAccessReportMarshaler struct {
	Input *types.GenerateOrganizationsAccessReportInput
}

// GenerateServiceLastAccessedDetailsMarshaler defines marshaler for GenerateServiceLastAccessedDetails operation
type GenerateServiceLastAccessedDetailsMarshaler struct {
	Input *types.GenerateServiceLastAccessedDetailsInput
}

// GetAccessKeyLastUsedMarshaler defines marshaler for GetAccessKeyLastUsed operation
type GetAccessKeyLastUsedMarshaler struct {
	Input *types.GetAccessKeyLastUsedInput
}

// GetAccountAuthorizationDetailsMarshaler defines marshaler for GetAccountAuthorizationDetails operation
type GetAccountAuthorizationDetailsMarshaler struct {
	Input *types.GetAccountAuthorizationDetailsInput
}

// GetAccountPasswordPolicyMarshaler defines marshaler for GetAccountPasswordPolicy operation
type GetAccountPasswordPolicyMarshaler struct {
	Input *types.GetAccountPasswordPolicyInput
}

// GetAccountSummaryMarshaler defines marshaler for GetAccountSummary operation
type GetAccountSummaryMarshaler struct {
	Input *types.GetAccountSummaryInput
}

// GetContextKeysForCustomPolicyMarshaler defines marshaler for GetContextKeysForCustomPolicy operation
type GetContextKeysForCustomPolicyMarshaler struct {
	Input *types.GetContextKeysForCustomPolicyInput
}

// GetContextKeysForPrincipalPolicyMarshaler defines marshaler for GetContextKeysForPrincipalPolicy operation
type GetContextKeysForPrincipalPolicyMarshaler struct {
	Input *types.GetContextKeysForPrincipalPolicyInput
}

// GetCredentialReportMarshaler defines marshaler for GetCredentialReport operation
type GetCredentialReportMarshaler struct {
	Input *types.GetCredentialReportInput
}

// GetGroupMarshaler defines marshaler for GetGroup operation
type GetGroupMarshaler struct {
	Input *types.GetGroupInput
}

// GetGroupPolicyMarshaler defines marshaler for GetGroupPolicy operation
type GetGroupPolicyMarshaler struct {
	Input *types.GetGroupPolicyInput
}

// GetInstanceProfileMarshaler defines marshaler for GetInstanceProfile operation
type GetInstanceProfileMarshaler struct {
	Input *types.GetInstanceProfileInput
}

// GetLoginProfileMarshaler defines marshaler for GetLoginProfile operation
type GetLoginProfileMarshaler struct {
	Input *types.GetLoginProfileInput
}

// GetOpenIDConnectProviderMarshaler defines marshaler for GetOpenIDConnectProvider operation
type GetOpenIDConnectProviderMarshaler struct {
	Input *types.GetOpenIDConnectProviderInput
}

// GetOrganizationsAccessReportMarshaler defines marshaler for GetOrganizationsAccessReport operation
type GetOrganizationsAccessReportMarshaler struct {
	Input *types.GetOrganizationsAccessReportInput
}

// GetPolicyMarshaler defines marshaler for GetPolicy operation
type GetPolicyMarshaler struct {
	Input *types.GetPolicyInput
}

// GetPolicyVersionMarshaler defines marshaler for GetPolicyVersion operation
type GetPolicyVersionMarshaler struct {
	Input *types.GetPolicyVersionInput
}

// GetRoleMarshaler defines marshaler for GetRole operation
type GetRoleMarshaler struct {
	Input *types.GetRoleInput
}

// GetRolePolicyMarshaler defines marshaler for GetRolePolicy operation
type GetRolePolicyMarshaler struct {
	Input *types.GetRolePolicyInput
}

// GetSAMLProviderMarshaler defines marshaler for GetSAMLProvider operation
type GetSAMLProviderMarshaler struct {
	Input *types.GetSAMLProviderInput
}

// GetSSHPublicKeyMarshaler defines marshaler for GetSSHPublicKey operation
type GetSSHPublicKeyMarshaler struct {
	Input *types.GetSSHPublicKeyInput
}

// GetServerCertificateMarshaler defines marshaler for GetServerCertificate operation
type GetServerCertificateMarshaler struct {
	Input *types.GetServerCertificateInput
}

// GetServiceLastAccessedDetailsMarshaler defines marshaler for GetServiceLastAccessedDetails operation
type GetServiceLastAccessedDetailsMarshaler struct {
	Input *types.GetServiceLastAccessedDetailsInput
}

// GetServiceLastAccessedDetailsWithEntitiesMarshaler defines marshaler for GetServiceLastAccessedDetailsWithEntities operation
type GetServiceLastAccessedDetailsWithEntitiesMarshaler struct {
	Input *types.GetServiceLastAccessedDetailsWithEntitiesInput
}

// GetServiceLinkedRoleDeletionStatusMarshaler defines marshaler for GetServiceLinkedRoleDeletionStatus operation
type GetServiceLinkedRoleDeletionStatusMarshaler struct {
	Input *types.GetServiceLinkedRoleDeletionStatusInput
}

// GetUserMarshaler defines marshaler for GetUser operation
type GetUserMarshaler struct {
	Input *types.GetUserInput
}

// GetUserPolicyMarshaler defines marshaler for GetUserPolicy operation
type GetUserPolicyMarshaler struct {
	Input *types.GetUserPolicyInput
}

// ListAccessKeysMarshaler defines marshaler for ListAccessKeys operation
type ListAccessKeysMarshaler struct {
	Input *types.ListAccessKeysInput
}

// ListAccountAliasesMarshaler defines marshaler for ListAccountAliases operation
type ListAccountAliasesMarshaler struct {
	Input *types.ListAccountAliasesInput
}

// ListAttachedGroupPoliciesMarshaler defines marshaler for ListAttachedGroupPolicies operation
type ListAttachedGroupPoliciesMarshaler struct {
	Input *types.ListAttachedGroupPoliciesInput
}

// ListAttachedRolePoliciesMarshaler defines marshaler for ListAttachedRolePolicies operation
type ListAttachedRolePoliciesMarshaler struct {
	Input *types.ListAttachedRolePoliciesInput
}

// ListAttachedUserPoliciesMarshaler defines marshaler for ListAttachedUserPolicies operation
type ListAttachedUserPoliciesMarshaler struct {
	Input *types.ListAttachedUserPoliciesInput
}

// ListEntitiesForPolicyMarshaler defines marshaler for ListEntitiesForPolicy operation
type ListEntitiesForPolicyMarshaler struct {
	Input *types.ListEntitiesForPolicyInput
}

// ListGroupPoliciesMarshaler defines marshaler for ListGroupPolicies operation
type ListGroupPoliciesMarshaler struct {
	Input *types.ListGroupPoliciesInput
}

// ListGroupsMarshaler defines marshaler for ListGroups operation
type ListGroupsMarshaler struct {
	Input *types.ListGroupsInput
}

// ListGroupsForUserMarshaler defines marshaler for ListGroupsForUser operation
type ListGroupsForUserMarshaler struct {
	Input *types.ListGroupsForUserInput
}

// ListInstanceProfilesMarshaler defines marshaler for ListInstanceProfiles operation
type ListInstanceProfilesMarshaler struct {
	Input *types.ListInstanceProfilesInput
}

// ListInstanceProfilesForRoleMarshaler defines marshaler for ListInstanceProfilesForRole operation
type ListInstanceProfilesForRoleMarshaler struct {
	Input *types.ListInstanceProfilesForRoleInput
}

// ListMFADevicesMarshaler defines marshaler for ListMFADevices operation
type ListMFADevicesMarshaler struct {
	Input *types.ListMFADevicesInput
}

// ListOpenIDConnectProvidersMarshaler defines marshaler for ListOpenIDConnectProviders operation
type ListOpenIDConnectProvidersMarshaler struct {
	Input *types.ListOpenIDConnectProvidersInput
}

// ListPoliciesMarshaler defines marshaler for ListPolicies operation
type ListPoliciesMarshaler struct {
	Input *types.ListPoliciesInput
}

// ListPoliciesGrantingServiceAccessMarshaler defines marshaler for ListPoliciesGrantingServiceAccess operation
type ListPoliciesGrantingServiceAccessMarshaler struct {
	Input *types.ListPoliciesGrantingServiceAccessInput
}

// ListPolicyVersionsMarshaler defines marshaler for ListPolicyVersions operation
type ListPolicyVersionsMarshaler struct {
	Input *types.ListPolicyVersionsInput
}

// ListRolePoliciesMarshaler defines marshaler for ListRolePolicies operation
type ListRolePoliciesMarshaler struct {
	Input *types.ListRolePoliciesInput
}

// ListRoleTagsMarshaler defines marshaler for ListRoleTags operation
type ListRoleTagsMarshaler struct {
	Input *types.ListRoleTagsInput
}

// ListRolesMarshaler defines marshaler for ListRoles operation
type ListRolesMarshaler struct {
	Input *types.ListRolesInput
}

// ListSAMLProvidersMarshaler defines marshaler for ListSAMLProviders operation
type ListSAMLProvidersMarshaler struct {
	Input *types.ListSAMLProvidersInput
}

// ListSSHPublicKeysMarshaler defines marshaler for ListSSHPublicKeys operation
type ListSSHPublicKeysMarshaler struct {
	Input *types.ListSSHPublicKeysInput
}

// ListServerCertificatesMarshaler defines marshaler for ListServerCertificates operation
type ListServerCertificatesMarshaler struct {
	Input *types.ListServerCertificatesInput
}

// ListServiceSpecificCredentialsMarshaler defines marshaler for ListServiceSpecificCredentials operation
type ListServiceSpecificCredentialsMarshaler struct {
	Input *types.ListServiceSpecificCredentialsInput
}

// ListSigningCertificatesMarshaler defines marshaler for ListSigningCertificates operation
type ListSigningCertificatesMarshaler struct {
	Input *types.ListSigningCertificatesInput
}

// ListUserPoliciesMarshaler defines marshaler for ListUserPolicies operation
type ListUserPoliciesMarshaler struct {
	Input *types.ListUserPoliciesInput
}

// ListUserTagsMarshaler defines marshaler for ListUserTags operation
type ListUserTagsMarshaler struct {
	Input *types.ListUserTagsInput
}

// ListUsersMarshaler defines marshaler for ListUsers operation
type ListUsersMarshaler struct {
	Input *types.ListUsersInput
}

// ListVirtualMFADevicesMarshaler defines marshaler for ListVirtualMFADevices operation
type ListVirtualMFADevicesMarshaler struct {
	Input *types.ListVirtualMFADevicesInput
}

// PutGroupPolicyMarshaler defines marshaler for PutGroupPolicy operation
type PutGroupPolicyMarshaler struct {
	Input *types.PutGroupPolicyInput
}

// PutRolePermissionsBoundaryMarshaler defines marshaler for PutRolePermissionsBoundary operation
type PutRolePermissionsBoundaryMarshaler struct {
	Input *types.PutRolePermissionsBoundaryInput
}

// PutRolePolicyMarshaler defines marshaler for PutRolePolicy operation
type PutRolePolicyMarshaler struct {
	Input *types.PutRolePolicyInput
}

// PutUserPermissionsBoundaryMarshaler defines marshaler for PutUserPermissionsBoundary operation
type PutUserPermissionsBoundaryMarshaler struct {
	Input *types.PutUserPermissionsBoundaryInput
}

// PutUserPolicyMarshaler defines marshaler for PutUserPolicy operation
type PutUserPolicyMarshaler struct {
	Input *types.PutUserPolicyInput
}

// RemoveClientIDFromOpenIDConnectProviderMarshaler defines marshaler for RemoveClientIDFromOpenIDConnectProvider operation
type RemoveClientIDFromOpenIDConnectProviderMarshaler struct {
	Input *types.RemoveClientIDFromOpenIDConnectProviderInput
}

// RemoveRoleFromInstanceProfileMarshaler defines marshaler for RemoveRoleFromInstanceProfile operation
type RemoveRoleFromInstanceProfileMarshaler struct {
	Input *types.RemoveRoleFromInstanceProfileInput
}

// RemoveUserFromGroupMarshaler defines marshaler for RemoveUserFromGroup operation
type RemoveUserFromGroupMarshaler struct {
	Input *types.RemoveUserFromGroupInput
}

// ResetServiceSpecificCredentialMarshaler defines marshaler for ResetServiceSpecificCredential operation
type ResetServiceSpecificCredentialMarshaler struct {
	Input *types.ResetServiceSpecificCredentialInput
}

// ResyncMFADeviceMarshaler defines marshaler for ResyncMFADevice operation
type ResyncMFADeviceMarshaler struct {
	Input *types.ResyncMFADeviceInput
}

// SetDefaultPolicyVersionMarshaler defines marshaler for SetDefaultPolicyVersion operation
type SetDefaultPolicyVersionMarshaler struct {
	Input *types.SetDefaultPolicyVersionInput
}

// SetSecurityTokenServicePreferencesMarshaler defines marshaler for SetSecurityTokenServicePreferences operation
type SetSecurityTokenServicePreferencesMarshaler struct {
	Input *types.SetSecurityTokenServicePreferencesInput
}

// SimulateCustomPolicyMarshaler defines marshaler for SimulateCustomPolicy operation
type SimulateCustomPolicyMarshaler struct {
	Input *types.SimulateCustomPolicyInput
}

// SimulatePrincipalPolicyMarshaler defines marshaler for SimulatePrincipalPolicy operation
type SimulatePrincipalPolicyMarshaler struct {
	Input *types.SimulatePrincipalPolicyInput
}

// TagRoleMarshaler defines marshaler for TagRole operation
type TagRoleMarshaler struct {
	Input *types.TagRoleInput
}

// TagUserMarshaler defines marshaler for TagUser operation
type TagUserMarshaler struct {
	Input *types.TagUserInput
}

// UntagRoleMarshaler defines marshaler for UntagRole operation
type UntagRoleMarshaler struct {
	Input *types.UntagRoleInput
}

// UntagUserMarshaler defines marshaler for UntagUser operation
type UntagUserMarshaler struct {
	Input *types.UntagUserInput
}

// UpdateAccessKeyMarshaler defines marshaler for UpdateAccessKey operation
type UpdateAccessKeyMarshaler struct {
	Input *types.UpdateAccessKeyInput
}

// UpdateAccountPasswordPolicyMarshaler defines marshaler for UpdateAccountPasswordPolicy operation
type UpdateAccountPasswordPolicyMarshaler struct {
	Input *types.UpdateAccountPasswordPolicyInput
}

// UpdateAssumeRolePolicyMarshaler defines marshaler for UpdateAssumeRolePolicy operation
type UpdateAssumeRolePolicyMarshaler struct {
	Input *types.UpdateAssumeRolePolicyInput
}

// UpdateGroupMarshaler defines marshaler for UpdateGroup operation
type UpdateGroupMarshaler struct {
	Input *types.UpdateGroupInput
}

// UpdateLoginProfileMarshaler defines marshaler for UpdateLoginProfile operation
type UpdateLoginProfileMarshaler struct {
	Input *types.UpdateLoginProfileInput
}

// UpdateOpenIDConnectProviderThumbprintMarshaler defines marshaler for UpdateOpenIDConnectProviderThumbprint operation
type UpdateOpenIDConnectProviderThumbprintMarshaler struct {
	Input *types.UpdateOpenIDConnectProviderThumbprintInput
}

// UpdateRoleMarshaler defines marshaler for UpdateRole operation
type UpdateRoleMarshaler struct {
	Input *types.UpdateRoleInput
}

// UpdateRoleDescriptionMarshaler defines marshaler for UpdateRoleDescription operation
type UpdateRoleDescriptionMarshaler struct {
	Input *types.UpdateRoleDescriptionInput
}

// UpdateSAMLProviderMarshaler defines marshaler for UpdateSAMLProvider operation
type UpdateSAMLProviderMarshaler struct {
	Input *types.UpdateSAMLProviderInput
}

// UpdateSSHPublicKeyMarshaler defines marshaler for UpdateSSHPublicKey operation
type UpdateSSHPublicKeyMarshaler struct {
	Input *types.UpdateSSHPublicKeyInput
}

// UpdateServerCertificateMarshaler defines marshaler for UpdateServerCertificate operation
type UpdateServerCertificateMarshaler struct {
	Input *types.UpdateServerCertificateInput
}

// UpdateServiceSpecificCredentialMarshaler defines marshaler for UpdateServiceSpecificCredential operation
type UpdateServiceSpecificCredentialMarshaler struct {
	Input *types.UpdateServiceSpecificCredentialInput
}

// UpdateSigningCertificateMarshaler defines marshaler for UpdateSigningCertificate operation
type UpdateSigningCertificateMarshaler struct {
	Input *types.UpdateSigningCertificateInput
}

// UpdateUserMarshaler defines marshaler for UpdateUser operation
type UpdateUserMarshaler struct {
	Input *types.UpdateUserInput
}

// UploadSSHPublicKeyMarshaler defines marshaler for UploadSSHPublicKey operation
type UploadSSHPublicKeyMarshaler struct {
	Input *types.UploadSSHPublicKeyInput
}

// UploadServerCertificateMarshaler defines marshaler for UploadServerCertificate operation
type UploadServerCertificateMarshaler struct {
	Input *types.UploadServerCertificateInput
}

// UploadSigningCertificateMarshaler defines marshaler for UploadSigningCertificate operation
type UploadSigningCertificateMarshaler struct {
	Input *types.UploadSigningCertificateInput
}

func MarshalAddClientIDToOpenIDConnectProviderInputShapeAWSQuery(v *types.AddClientIDToOpenIDConnectProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddRoleToInstanceProfileInputShapeAWSQuery(v *types.AddRoleToInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddUserToGroupInputShapeAWSQuery(v *types.AddUserToGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAttachGroupPolicyInputShapeAWSQuery(v *types.AttachGroupPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAttachRolePolicyInputShapeAWSQuery(v *types.AttachRolePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAttachUserPolicyInputShapeAWSQuery(v *types.AttachUserPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalChangePasswordInputShapeAWSQuery(v *types.ChangePasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateAccessKeyInputShapeAWSQuery(v *types.CreateAccessKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateAccountAliasInputShapeAWSQuery(v *types.CreateAccountAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateGroupInputShapeAWSQuery(v *types.CreateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateInstanceProfileInputShapeAWSQuery(v *types.CreateInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateLoginProfileInputShapeAWSQuery(v *types.CreateLoginProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateOpenIDConnectProviderInputShapeAWSQuery(v *types.CreateOpenIDConnectProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreatePolicyInputShapeAWSQuery(v *types.CreatePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreatePolicyVersionInputShapeAWSQuery(v *types.CreatePolicyVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateRoleInputShapeAWSQuery(v *types.CreateRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateSAMLProviderInputShapeAWSQuery(v *types.CreateSAMLProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateServiceLinkedRoleInputShapeAWSQuery(v *types.CreateServiceLinkedRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateServiceSpecificCredentialInputShapeAWSQuery(v *types.CreateServiceSpecificCredentialInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateUserInputShapeAWSQuery(v *types.CreateUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateVirtualMFADeviceInputShapeAWSQuery(v *types.CreateVirtualMFADeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeactivateMFADeviceInputShapeAWSQuery(v *types.DeactivateMFADeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteAccessKeyInputShapeAWSQuery(v *types.DeleteAccessKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteAccountAliasInputShapeAWSQuery(v *types.DeleteAccountAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteAccountPasswordPolicyInputShapeAWSQuery(v *types.DeleteAccountPasswordPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteGroupInputShapeAWSQuery(v *types.DeleteGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteGroupPolicyInputShapeAWSQuery(v *types.DeleteGroupPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteInstanceProfileInputShapeAWSQuery(v *types.DeleteInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteLoginProfileInputShapeAWSQuery(v *types.DeleteLoginProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteOpenIDConnectProviderInputShapeAWSQuery(v *types.DeleteOpenIDConnectProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeletePolicyInputShapeAWSQuery(v *types.DeletePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeletePolicyVersionInputShapeAWSQuery(v *types.DeletePolicyVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteRoleInputShapeAWSQuery(v *types.DeleteRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteRolePermissionsBoundaryInputShapeAWSQuery(v *types.DeleteRolePermissionsBoundaryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteRolePolicyInputShapeAWSQuery(v *types.DeleteRolePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteSAMLProviderInputShapeAWSQuery(v *types.DeleteSAMLProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteSSHPublicKeyInputShapeAWSQuery(v *types.DeleteSSHPublicKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteServerCertificateInputShapeAWSQuery(v *types.DeleteServerCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteServiceLinkedRoleInputShapeAWSQuery(v *types.DeleteServiceLinkedRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteServiceSpecificCredentialInputShapeAWSQuery(v *types.DeleteServiceSpecificCredentialInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteSigningCertificateInputShapeAWSQuery(v *types.DeleteSigningCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteUserInputShapeAWSQuery(v *types.DeleteUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteUserPermissionsBoundaryInputShapeAWSQuery(v *types.DeleteUserPermissionsBoundaryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteUserPolicyInputShapeAWSQuery(v *types.DeleteUserPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteVirtualMFADeviceInputShapeAWSQuery(v *types.DeleteVirtualMFADeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetachGroupPolicyInputShapeAWSQuery(v *types.DetachGroupPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetachRolePolicyInputShapeAWSQuery(v *types.DetachRolePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetachUserPolicyInputShapeAWSQuery(v *types.DetachUserPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalEnableMFADeviceInputShapeAWSQuery(v *types.EnableMFADeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGenerateCredentialReportInputShapeAWSQuery(v *types.GenerateCredentialReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGenerateOrganizationsAccessReportInputShapeAWSQuery(v *types.GenerateOrganizationsAccessReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGenerateServiceLastAccessedDetailsInputShapeAWSQuery(v *types.GenerateServiceLastAccessedDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetAccessKeyLastUsedInputShapeAWSQuery(v *types.GetAccessKeyLastUsedInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetAccountAuthorizationDetailsInputShapeAWSQuery(v *types.GetAccountAuthorizationDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetAccountPasswordPolicyInputShapeAWSQuery(v *types.GetAccountPasswordPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetAccountSummaryInputShapeAWSQuery(v *types.GetAccountSummaryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetContextKeysForCustomPolicyInputShapeAWSQuery(v *types.GetContextKeysForCustomPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetContextKeysForPrincipalPolicyInputShapeAWSQuery(v *types.GetContextKeysForPrincipalPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetCredentialReportInputShapeAWSQuery(v *types.GetCredentialReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetGroupInputShapeAWSQuery(v *types.GetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetGroupPolicyInputShapeAWSQuery(v *types.GetGroupPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetInstanceProfileInputShapeAWSQuery(v *types.GetInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetLoginProfileInputShapeAWSQuery(v *types.GetLoginProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetOpenIDConnectProviderInputShapeAWSQuery(v *types.GetOpenIDConnectProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetOrganizationsAccessReportInputShapeAWSQuery(v *types.GetOrganizationsAccessReportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetPolicyInputShapeAWSQuery(v *types.GetPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetPolicyVersionInputShapeAWSQuery(v *types.GetPolicyVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetRoleInputShapeAWSQuery(v *types.GetRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetRolePolicyInputShapeAWSQuery(v *types.GetRolePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetSAMLProviderInputShapeAWSQuery(v *types.GetSAMLProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetSSHPublicKeyInputShapeAWSQuery(v *types.GetSSHPublicKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetServerCertificateInputShapeAWSQuery(v *types.GetServerCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetServiceLastAccessedDetailsInputShapeAWSQuery(v *types.GetServiceLastAccessedDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetServiceLastAccessedDetailsWithEntitiesInputShapeAWSQuery(v *types.GetServiceLastAccessedDetailsWithEntitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetServiceLinkedRoleDeletionStatusInputShapeAWSQuery(v *types.GetServiceLinkedRoleDeletionStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetUserInputShapeAWSQuery(v *types.GetUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetUserPolicyInputShapeAWSQuery(v *types.GetUserPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListAccessKeysInputShapeAWSQuery(v *types.ListAccessKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListAccountAliasesInputShapeAWSQuery(v *types.ListAccountAliasesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListAttachedGroupPoliciesInputShapeAWSQuery(v *types.ListAttachedGroupPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListAttachedRolePoliciesInputShapeAWSQuery(v *types.ListAttachedRolePoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListAttachedUserPoliciesInputShapeAWSQuery(v *types.ListAttachedUserPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListEntitiesForPolicyInputShapeAWSQuery(v *types.ListEntitiesForPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListGroupPoliciesInputShapeAWSQuery(v *types.ListGroupPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListGroupsInputShapeAWSQuery(v *types.ListGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListGroupsForUserInputShapeAWSQuery(v *types.ListGroupsForUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListInstanceProfilesInputShapeAWSQuery(v *types.ListInstanceProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListInstanceProfilesForRoleInputShapeAWSQuery(v *types.ListInstanceProfilesForRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListMFADevicesInputShapeAWSQuery(v *types.ListMFADevicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListOpenIDConnectProvidersInputShapeAWSQuery(v *types.ListOpenIDConnectProvidersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListPoliciesInputShapeAWSQuery(v *types.ListPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListPoliciesGrantingServiceAccessInputShapeAWSQuery(v *types.ListPoliciesGrantingServiceAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListPolicyVersionsInputShapeAWSQuery(v *types.ListPolicyVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListRolePoliciesInputShapeAWSQuery(v *types.ListRolePoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListRoleTagsInputShapeAWSQuery(v *types.ListRoleTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListRolesInputShapeAWSQuery(v *types.ListRolesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListSAMLProvidersInputShapeAWSQuery(v *types.ListSAMLProvidersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListSSHPublicKeysInputShapeAWSQuery(v *types.ListSSHPublicKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListServerCertificatesInputShapeAWSQuery(v *types.ListServerCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListServiceSpecificCredentialsInputShapeAWSQuery(v *types.ListServiceSpecificCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListSigningCertificatesInputShapeAWSQuery(v *types.ListSigningCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListUserPoliciesInputShapeAWSQuery(v *types.ListUserPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListUserTagsInputShapeAWSQuery(v *types.ListUserTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListUsersInputShapeAWSQuery(v *types.ListUsersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListVirtualMFADevicesInputShapeAWSQuery(v *types.ListVirtualMFADevicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutGroupPolicyInputShapeAWSQuery(v *types.PutGroupPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutRolePermissionsBoundaryInputShapeAWSQuery(v *types.PutRolePermissionsBoundaryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutRolePolicyInputShapeAWSQuery(v *types.PutRolePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutUserPermissionsBoundaryInputShapeAWSQuery(v *types.PutUserPermissionsBoundaryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutUserPolicyInputShapeAWSQuery(v *types.PutUserPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveClientIDFromOpenIDConnectProviderInputShapeAWSQuery(v *types.RemoveClientIDFromOpenIDConnectProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveRoleFromInstanceProfileInputShapeAWSQuery(v *types.RemoveRoleFromInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveUserFromGroupInputShapeAWSQuery(v *types.RemoveUserFromGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetServiceSpecificCredentialInputShapeAWSQuery(v *types.ResetServiceSpecificCredentialInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResyncMFADeviceInputShapeAWSQuery(v *types.ResyncMFADeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetDefaultPolicyVersionInputShapeAWSQuery(v *types.SetDefaultPolicyVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetSecurityTokenServicePreferencesInputShapeAWSQuery(v *types.SetSecurityTokenServicePreferencesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSimulateCustomPolicyInputShapeAWSQuery(v *types.SimulateCustomPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSimulatePrincipalPolicyInputShapeAWSQuery(v *types.SimulatePrincipalPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalTagRoleInputShapeAWSQuery(v *types.TagRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalTagUserInputShapeAWSQuery(v *types.TagUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUntagRoleInputShapeAWSQuery(v *types.UntagRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUntagUserInputShapeAWSQuery(v *types.UntagUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateAccessKeyInputShapeAWSQuery(v *types.UpdateAccessKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateAccountPasswordPolicyInputShapeAWSQuery(v *types.UpdateAccountPasswordPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateAssumeRolePolicyInputShapeAWSQuery(v *types.UpdateAssumeRolePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateGroupInputShapeAWSQuery(v *types.UpdateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateLoginProfileInputShapeAWSQuery(v *types.UpdateLoginProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateOpenIDConnectProviderThumbprintInputShapeAWSQuery(v *types.UpdateOpenIDConnectProviderThumbprintInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateRoleInputShapeAWSQuery(v *types.UpdateRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateRoleDescriptionInputShapeAWSQuery(v *types.UpdateRoleDescriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateSAMLProviderInputShapeAWSQuery(v *types.UpdateSAMLProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateSSHPublicKeyInputShapeAWSQuery(v *types.UpdateSSHPublicKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateServerCertificateInputShapeAWSQuery(v *types.UpdateServerCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateServiceSpecificCredentialInputShapeAWSQuery(v *types.UpdateServiceSpecificCredentialInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateSigningCertificateInputShapeAWSQuery(v *types.UpdateSigningCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateUserInputShapeAWSQuery(v *types.UpdateUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUploadSSHPublicKeyInputShapeAWSQuery(v *types.UploadSSHPublicKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUploadServerCertificateInputShapeAWSQuery(v *types.UploadServerCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUploadSigningCertificateInputShapeAWSQuery(v *types.UploadSigningCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AddClientIDToOpenIDConnectProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddClientIDToOpenIDConnectProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddClientIDToOpenIDConnectProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddClientIDToOpenIDConnectProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddRoleToInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddRoleToInstanceProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddRoleToInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddRoleToInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddUserToGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddUserToGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddUserToGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddUserToGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachGroupPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachGroupPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachGroupPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachGroupPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachRolePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachRolePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachRolePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachRolePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachUserPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachUserPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachUserPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachUserPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ChangePasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalChangePasswordInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ChangePasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ChangePassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAccessKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAccessKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAccessKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAccessKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAccountAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAccountAliasInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAccountAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAccountAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInstanceProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoginProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoginProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoginProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoginProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateOpenIDConnectProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateOpenIDConnectProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateOpenIDConnectProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateOpenIDConnectProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePolicyVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePolicyVersionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePolicyVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePolicyVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSAMLProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSAMLProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSAMLProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSAMLProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateServiceLinkedRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateServiceLinkedRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateServiceLinkedRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateServiceLinkedRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateServiceSpecificCredentialMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateServiceSpecificCredentialInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateServiceSpecificCredentialMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateServiceSpecificCredential.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVirtualMFADeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVirtualMFADeviceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVirtualMFADeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVirtualMFADevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeactivateMFADeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeactivateMFADeviceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeactivateMFADeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeactivateMFADevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAccessKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAccessKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAccessKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAccessKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAccountAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAccountAliasInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAccountAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAccountAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAccountPasswordPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAccountPasswordPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAccountPasswordPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAccountPasswordPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGroupPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGroupPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGroupPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGroupPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInstanceProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoginProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoginProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoginProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoginProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteOpenIDConnectProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteOpenIDConnectProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteOpenIDConnectProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteOpenIDConnectProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePolicyVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePolicyVersionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePolicyVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePolicyVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRolePermissionsBoundaryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRolePermissionsBoundaryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRolePermissionsBoundaryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRolePermissionsBoundary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRolePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRolePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRolePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRolePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSAMLProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSAMLProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSAMLProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSAMLProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSSHPublicKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSSHPublicKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSSHPublicKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSSHPublicKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServerCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServerCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServerCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteServerCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServiceLinkedRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServiceLinkedRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServiceLinkedRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteServiceLinkedRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServiceSpecificCredentialMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServiceSpecificCredentialInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServiceSpecificCredentialMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteServiceSpecificCredential.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSigningCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSigningCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSigningCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSigningCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserPermissionsBoundaryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserPermissionsBoundaryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserPermissionsBoundaryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserPermissionsBoundary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVirtualMFADeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVirtualMFADeviceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVirtualMFADeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVirtualMFADevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachGroupPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachGroupPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachGroupPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachGroupPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachRolePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachRolePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachRolePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachRolePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachUserPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachUserPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachUserPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachUserPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableMFADeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableMFADeviceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableMFADeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableMFADevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateCredentialReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateCredentialReportInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateCredentialReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateCredentialReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateOrganizationsAccessReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateOrganizationsAccessReportInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateOrganizationsAccessReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateOrganizationsAccessReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateServiceLastAccessedDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateServiceLastAccessedDetailsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateServiceLastAccessedDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateServiceLastAccessedDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccessKeyLastUsedMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccessKeyLastUsedInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccessKeyLastUsedMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccessKeyLastUsed.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountAuthorizationDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountAuthorizationDetailsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountAuthorizationDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccountAuthorizationDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountPasswordPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountPasswordPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountPasswordPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccountPasswordPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountSummaryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountSummaryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountSummaryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccountSummary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetContextKeysForCustomPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetContextKeysForCustomPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetContextKeysForCustomPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetContextKeysForCustomPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetContextKeysForPrincipalPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetContextKeysForPrincipalPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetContextKeysForPrincipalPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetContextKeysForPrincipalPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCredentialReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCredentialReportInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCredentialReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCredentialReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroupPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoginProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoginProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoginProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoginProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOpenIDConnectProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOpenIDConnectProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOpenIDConnectProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOpenIDConnectProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOrganizationsAccessReportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOrganizationsAccessReportInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOrganizationsAccessReportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOrganizationsAccessReport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPolicyVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPolicyVersionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPolicyVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPolicyVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRolePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRolePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRolePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRolePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSAMLProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSAMLProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSAMLProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSAMLProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSSHPublicKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSSHPublicKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSSHPublicKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSSHPublicKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServerCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServerCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServerCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetServerCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServiceLastAccessedDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServiceLastAccessedDetailsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServiceLastAccessedDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetServiceLastAccessedDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServiceLastAccessedDetailsWithEntitiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServiceLastAccessedDetailsWithEntitiesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServiceLastAccessedDetailsWithEntitiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetServiceLastAccessedDetailsWithEntities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServiceLinkedRoleDeletionStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServiceLinkedRoleDeletionStatusInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServiceLinkedRoleDeletionStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetServiceLinkedRoleDeletionStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUserPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUserPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUserPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUserPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccessKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccessKeysInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccessKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccessKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccountAliasesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccountAliasesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccountAliasesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccountAliases.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAttachedGroupPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAttachedGroupPoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAttachedGroupPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAttachedGroupPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAttachedRolePoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAttachedRolePoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAttachedRolePoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAttachedRolePolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAttachedUserPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAttachedUserPoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAttachedUserPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAttachedUserPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEntitiesForPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEntitiesForPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEntitiesForPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEntitiesForPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupPoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroupPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupsForUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupsForUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupsForUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroupsForUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInstanceProfilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInstanceProfilesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInstanceProfilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInstanceProfiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInstanceProfilesForRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInstanceProfilesForRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInstanceProfilesForRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInstanceProfilesForRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListMFADevicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListMFADevicesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListMFADevicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListMFADevices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOpenIDConnectProvidersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOpenIDConnectProvidersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOpenIDConnectProvidersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOpenIDConnectProviders.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPoliciesGrantingServiceAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPoliciesGrantingServiceAccessInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPoliciesGrantingServiceAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPoliciesGrantingServiceAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPolicyVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPolicyVersionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPolicyVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPolicyVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRolePoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRolePoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRolePoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRolePolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRoleTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRoleTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRoleTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRoleTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRolesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRolesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRolesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRoles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSAMLProvidersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSAMLProvidersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSAMLProvidersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSAMLProviders.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSSHPublicKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSSHPublicKeysInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSSHPublicKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSSHPublicKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServerCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServerCertificatesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServerCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServerCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServiceSpecificCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServiceSpecificCredentialsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServiceSpecificCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServiceSpecificCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSigningCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSigningCertificatesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSigningCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSigningCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUserPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUserPoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUserPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUserPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUserTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUserTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUserTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUserTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUsersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUsersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUsersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUsers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListVirtualMFADevicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListVirtualMFADevicesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListVirtualMFADevicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListVirtualMFADevices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutGroupPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutGroupPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutGroupPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutGroupPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRolePermissionsBoundaryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRolePermissionsBoundaryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRolePermissionsBoundaryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRolePermissionsBoundary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRolePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRolePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRolePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRolePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutUserPermissionsBoundaryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutUserPermissionsBoundaryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutUserPermissionsBoundaryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutUserPermissionsBoundary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutUserPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutUserPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutUserPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutUserPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveClientIDFromOpenIDConnectProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveClientIDFromOpenIDConnectProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveClientIDFromOpenIDConnectProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveClientIDFromOpenIDConnectProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveRoleFromInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveRoleFromInstanceProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveRoleFromInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveRoleFromInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveUserFromGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveUserFromGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveUserFromGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveUserFromGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetServiceSpecificCredentialMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetServiceSpecificCredentialInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetServiceSpecificCredentialMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetServiceSpecificCredential.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResyncMFADeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResyncMFADeviceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResyncMFADeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResyncMFADevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetDefaultPolicyVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetDefaultPolicyVersionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetDefaultPolicyVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetDefaultPolicyVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetSecurityTokenServicePreferencesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetSecurityTokenServicePreferencesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetSecurityTokenServicePreferencesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetSecurityTokenServicePreferences.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SimulateCustomPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSimulateCustomPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SimulateCustomPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SimulateCustomPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SimulatePrincipalPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSimulatePrincipalPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SimulatePrincipalPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SimulatePrincipalPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAccessKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAccessKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAccessKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAccessKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAccountPasswordPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAccountPasswordPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAccountPasswordPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAccountPasswordPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAssumeRolePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAssumeRolePolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAssumeRolePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAssumeRolePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateLoginProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateLoginProfileInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateLoginProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateLoginProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateOpenIDConnectProviderThumbprintMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateOpenIDConnectProviderThumbprintInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateOpenIDConnectProviderThumbprintMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateOpenIDConnectProviderThumbprint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRoleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRoleDescriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRoleDescriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRoleDescriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRoleDescription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSAMLProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSAMLProviderInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSAMLProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSAMLProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSSHPublicKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSSHPublicKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSSHPublicKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSSHPublicKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServerCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServerCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServerCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateServerCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServiceSpecificCredentialMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServiceSpecificCredentialInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServiceSpecificCredentialMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateServiceSpecificCredential.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSigningCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSigningCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSigningCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSigningCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UploadSSHPublicKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUploadSSHPublicKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UploadSSHPublicKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UploadSSHPublicKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UploadServerCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUploadServerCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UploadServerCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UploadServerCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UploadSigningCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUploadSigningCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UploadSigningCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UploadSigningCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
