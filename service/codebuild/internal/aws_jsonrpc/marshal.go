// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codebuild/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchDeleteBuildsMarshaler defines marshaler for BatchDeleteBuilds operation
type BatchDeleteBuildsMarshaler struct {
	Input *types.BatchDeleteBuildsInput
}

// BatchGetBuildsMarshaler defines marshaler for BatchGetBuilds operation
type BatchGetBuildsMarshaler struct {
	Input *types.BatchGetBuildsInput
}

// BatchGetProjectsMarshaler defines marshaler for BatchGetProjects operation
type BatchGetProjectsMarshaler struct {
	Input *types.BatchGetProjectsInput
}

// CreateProjectMarshaler defines marshaler for CreateProject operation
type CreateProjectMarshaler struct {
	Input *types.CreateProjectInput
}

// CreateWebhookMarshaler defines marshaler for CreateWebhook operation
type CreateWebhookMarshaler struct {
	Input *types.CreateWebhookInput
}

// DeleteProjectMarshaler defines marshaler for DeleteProject operation
type DeleteProjectMarshaler struct {
	Input *types.DeleteProjectInput
}

// DeleteSourceCredentialsMarshaler defines marshaler for DeleteSourceCredentials operation
type DeleteSourceCredentialsMarshaler struct {
	Input *types.DeleteSourceCredentialsInput
}

// DeleteWebhookMarshaler defines marshaler for DeleteWebhook operation
type DeleteWebhookMarshaler struct {
	Input *types.DeleteWebhookInput
}

// ImportSourceCredentialsMarshaler defines marshaler for ImportSourceCredentials operation
type ImportSourceCredentialsMarshaler struct {
	Input *types.ImportSourceCredentialsInput
}

// InvalidateProjectCacheMarshaler defines marshaler for InvalidateProjectCache operation
type InvalidateProjectCacheMarshaler struct {
	Input *types.InvalidateProjectCacheInput
}

// ListBuildsMarshaler defines marshaler for ListBuilds operation
type ListBuildsMarshaler struct {
	Input *types.ListBuildsInput
}

// ListBuildsForProjectMarshaler defines marshaler for ListBuildsForProject operation
type ListBuildsForProjectMarshaler struct {
	Input *types.ListBuildsForProjectInput
}

// ListCuratedEnvironmentImagesMarshaler defines marshaler for ListCuratedEnvironmentImages operation
type ListCuratedEnvironmentImagesMarshaler struct {
	Input *types.ListCuratedEnvironmentImagesInput
}

// ListProjectsMarshaler defines marshaler for ListProjects operation
type ListProjectsMarshaler struct {
	Input *types.ListProjectsInput
}

// ListSourceCredentialsMarshaler defines marshaler for ListSourceCredentials operation
type ListSourceCredentialsMarshaler struct {
	Input *types.ListSourceCredentialsInput
}

// StartBuildMarshaler defines marshaler for StartBuild operation
type StartBuildMarshaler struct {
	Input *types.StartBuildInput
}

// StopBuildMarshaler defines marshaler for StopBuild operation
type StopBuildMarshaler struct {
	Input *types.StopBuildInput
}

// UpdateProjectMarshaler defines marshaler for UpdateProject operation
type UpdateProjectMarshaler struct {
	Input *types.UpdateProjectInput
}

// UpdateWebhookMarshaler defines marshaler for UpdateWebhook operation
type UpdateWebhookMarshaler struct {
	Input *types.UpdateWebhookInput
}

func MarshalBatchDeleteBuildsInputShapeAWSJSON(v *types.BatchDeleteBuildsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetBuildsInputShapeAWSJSON(v *types.BatchGetBuildsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetProjectsInputShapeAWSJSON(v *types.BatchGetProjectsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateProjectInputShapeAWSJSON(v *types.CreateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateWebhookInputShapeAWSJSON(v *types.CreateWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteProjectInputShapeAWSJSON(v *types.DeleteProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSourceCredentialsInputShapeAWSJSON(v *types.DeleteSourceCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteWebhookInputShapeAWSJSON(v *types.DeleteWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalImportSourceCredentialsInputShapeAWSJSON(v *types.ImportSourceCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalInvalidateProjectCacheInputShapeAWSJSON(v *types.InvalidateProjectCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBuildsInputShapeAWSJSON(v *types.ListBuildsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBuildsForProjectInputShapeAWSJSON(v *types.ListBuildsForProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListCuratedEnvironmentImagesInputShapeAWSJSON(v *types.ListCuratedEnvironmentImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProjectsInputShapeAWSJSON(v *types.ListProjectsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSourceCredentialsInputShapeAWSJSON(v *types.ListSourceCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartBuildInputShapeAWSJSON(v *types.StartBuildInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopBuildInputShapeAWSJSON(v *types.StopBuildInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProjectInputShapeAWSJSON(v *types.UpdateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateWebhookInputShapeAWSJSON(v *types.UpdateWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m BatchDeleteBuildsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDeleteBuildsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDeleteBuildsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDeleteBuilds.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetBuildsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetBuildsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetBuildsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetBuilds.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetProjectsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetProjectsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetProjectsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetProjects.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSourceCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSourceCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSourceCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSourceCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportSourceCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportSourceCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportSourceCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportSourceCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InvalidateProjectCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInvalidateProjectCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InvalidateProjectCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InvalidateProjectCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBuildsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBuildsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBuildsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBuilds.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBuildsForProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBuildsForProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBuildsForProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBuildsForProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCuratedEnvironmentImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCuratedEnvironmentImagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCuratedEnvironmentImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCuratedEnvironmentImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProjectsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProjectsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProjectsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProjects.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSourceCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSourceCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSourceCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSourceCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartBuildMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartBuildInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartBuildMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartBuild.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopBuildMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopBuildInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopBuildMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopBuild.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
