// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/securityhub/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptInvitationMarshaler defines marshaler for AcceptInvitation operation
type AcceptInvitationMarshaler struct {
	Input *types.AcceptInvitationInput
}

// BatchDisableStandardsMarshaler defines marshaler for BatchDisableStandards operation
type BatchDisableStandardsMarshaler struct {
	Input *types.BatchDisableStandardsInput
}

// BatchEnableStandardsMarshaler defines marshaler for BatchEnableStandards operation
type BatchEnableStandardsMarshaler struct {
	Input *types.BatchEnableStandardsInput
}

// BatchImportFindingsMarshaler defines marshaler for BatchImportFindings operation
type BatchImportFindingsMarshaler struct {
	Input *types.BatchImportFindingsInput
}

// CreateActionTargetMarshaler defines marshaler for CreateActionTarget operation
type CreateActionTargetMarshaler struct {
	Input *types.CreateActionTargetInput
}

// CreateInsightMarshaler defines marshaler for CreateInsight operation
type CreateInsightMarshaler struct {
	Input *types.CreateInsightInput
}

// CreateMembersMarshaler defines marshaler for CreateMembers operation
type CreateMembersMarshaler struct {
	Input *types.CreateMembersInput
}

// DeclineInvitationsMarshaler defines marshaler for DeclineInvitations operation
type DeclineInvitationsMarshaler struct {
	Input *types.DeclineInvitationsInput
}

// DeleteActionTargetMarshaler defines marshaler for DeleteActionTarget operation
type DeleteActionTargetMarshaler struct {
	Input *types.DeleteActionTargetInput
}

// DeleteInsightMarshaler defines marshaler for DeleteInsight operation
type DeleteInsightMarshaler struct {
	Input *types.DeleteInsightInput
}

// DeleteInvitationsMarshaler defines marshaler for DeleteInvitations operation
type DeleteInvitationsMarshaler struct {
	Input *types.DeleteInvitationsInput
}

// DeleteMembersMarshaler defines marshaler for DeleteMembers operation
type DeleteMembersMarshaler struct {
	Input *types.DeleteMembersInput
}

// DescribeActionTargetsMarshaler defines marshaler for DescribeActionTargets operation
type DescribeActionTargetsMarshaler struct {
	Input *types.DescribeActionTargetsInput
}

// DescribeHubMarshaler defines marshaler for DescribeHub operation
type DescribeHubMarshaler struct {
	Input *types.DescribeHubInput
}

// DescribeProductsMarshaler defines marshaler for DescribeProducts operation
type DescribeProductsMarshaler struct {
	Input *types.DescribeProductsInput
}

// DisableImportFindingsForProductMarshaler defines marshaler for DisableImportFindingsForProduct operation
type DisableImportFindingsForProductMarshaler struct {
	Input *types.DisableImportFindingsForProductInput
}

// DisableSecurityHubMarshaler defines marshaler for DisableSecurityHub operation
type DisableSecurityHubMarshaler struct {
	Input *types.DisableSecurityHubInput
}

// DisassociateFromMasterAccountMarshaler defines marshaler for DisassociateFromMasterAccount operation
type DisassociateFromMasterAccountMarshaler struct {
	Input *types.DisassociateFromMasterAccountInput
}

// DisassociateMembersMarshaler defines marshaler for DisassociateMembers operation
type DisassociateMembersMarshaler struct {
	Input *types.DisassociateMembersInput
}

// EnableImportFindingsForProductMarshaler defines marshaler for EnableImportFindingsForProduct operation
type EnableImportFindingsForProductMarshaler struct {
	Input *types.EnableImportFindingsForProductInput
}

// EnableSecurityHubMarshaler defines marshaler for EnableSecurityHub operation
type EnableSecurityHubMarshaler struct {
	Input *types.EnableSecurityHubInput
}

// GetEnabledStandardsMarshaler defines marshaler for GetEnabledStandards operation
type GetEnabledStandardsMarshaler struct {
	Input *types.GetEnabledStandardsInput
}

// GetFindingsMarshaler defines marshaler for GetFindings operation
type GetFindingsMarshaler struct {
	Input *types.GetFindingsInput
}

// GetInsightResultsMarshaler defines marshaler for GetInsightResults operation
type GetInsightResultsMarshaler struct {
	Input *types.GetInsightResultsInput
}

// GetInsightsMarshaler defines marshaler for GetInsights operation
type GetInsightsMarshaler struct {
	Input *types.GetInsightsInput
}

// GetInvitationsCountMarshaler defines marshaler for GetInvitationsCount operation
type GetInvitationsCountMarshaler struct {
	Input *types.GetInvitationsCountInput
}

// GetMasterAccountMarshaler defines marshaler for GetMasterAccount operation
type GetMasterAccountMarshaler struct {
	Input *types.GetMasterAccountInput
}

// GetMembersMarshaler defines marshaler for GetMembers operation
type GetMembersMarshaler struct {
	Input *types.GetMembersInput
}

// InviteMembersMarshaler defines marshaler for InviteMembers operation
type InviteMembersMarshaler struct {
	Input *types.InviteMembersInput
}

// ListEnabledProductsForImportMarshaler defines marshaler for ListEnabledProductsForImport operation
type ListEnabledProductsForImportMarshaler struct {
	Input *types.ListEnabledProductsForImportInput
}

// ListInvitationsMarshaler defines marshaler for ListInvitations operation
type ListInvitationsMarshaler struct {
	Input *types.ListInvitationsInput
}

// ListMembersMarshaler defines marshaler for ListMembers operation
type ListMembersMarshaler struct {
	Input *types.ListMembersInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateActionTargetMarshaler defines marshaler for UpdateActionTarget operation
type UpdateActionTargetMarshaler struct {
	Input *types.UpdateActionTargetInput
}

// UpdateFindingsMarshaler defines marshaler for UpdateFindings operation
type UpdateFindingsMarshaler struct {
	Input *types.UpdateFindingsInput
}

// UpdateInsightMarshaler defines marshaler for UpdateInsight operation
type UpdateInsightMarshaler struct {
	Input *types.UpdateInsightInput
}

func MarshalAcceptInvitationInputShapeAWSREST(v *types.AcceptInvitationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalAcceptInvitationInputShapeAWSJSON(v *types.AcceptInvitationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalBatchDisableStandardsInputShapeAWSREST(v *types.BatchDisableStandardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchDisableStandardsInputShapeAWSJSON(v *types.BatchDisableStandardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalBatchEnableStandardsInputShapeAWSREST(v *types.BatchEnableStandardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchEnableStandardsInputShapeAWSJSON(v *types.BatchEnableStandardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalBatchImportFindingsInputShapeAWSREST(v *types.BatchImportFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchImportFindingsInputShapeAWSJSON(v *types.BatchImportFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateActionTargetInputShapeAWSREST(v *types.CreateActionTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateActionTargetInputShapeAWSJSON(v *types.CreateActionTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateInsightInputShapeAWSREST(v *types.CreateInsightInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateInsightInputShapeAWSJSON(v *types.CreateInsightInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateMembersInputShapeAWSREST(v *types.CreateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateMembersInputShapeAWSJSON(v *types.CreateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeclineInvitationsInputShapeAWSREST(v *types.DeclineInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeclineInvitationsInputShapeAWSJSON(v *types.DeclineInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteActionTargetInputShapeAWSREST(v *types.DeleteActionTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteActionTargetInputShapeAWSJSON(v *types.DeleteActionTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteInsightInputShapeAWSREST(v *types.DeleteInsightInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteInsightInputShapeAWSJSON(v *types.DeleteInsightInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteInvitationsInputShapeAWSREST(v *types.DeleteInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteInvitationsInputShapeAWSJSON(v *types.DeleteInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteMembersInputShapeAWSREST(v *types.DeleteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteMembersInputShapeAWSJSON(v *types.DeleteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeActionTargetsInputShapeAWSREST(v *types.DescribeActionTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeActionTargetsInputShapeAWSJSON(v *types.DescribeActionTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeHubInputShapeAWSREST(v *types.DescribeHubInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeHubInputShapeAWSJSON(v *types.DescribeHubInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeProductsInputShapeAWSREST(v *types.DescribeProductsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeProductsInputShapeAWSJSON(v *types.DescribeProductsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisableImportFindingsForProductInputShapeAWSREST(v *types.DisableImportFindingsForProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisableImportFindingsForProductInputShapeAWSJSON(v *types.DisableImportFindingsForProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisableSecurityHubInputShapeAWSREST(v *types.DisableSecurityHubInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisableSecurityHubInputShapeAWSJSON(v *types.DisableSecurityHubInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateFromMasterAccountInputShapeAWSREST(v *types.DisassociateFromMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateFromMasterAccountInputShapeAWSJSON(v *types.DisassociateFromMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateMembersInputShapeAWSREST(v *types.DisassociateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateMembersInputShapeAWSJSON(v *types.DisassociateMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalEnableImportFindingsForProductInputShapeAWSREST(v *types.EnableImportFindingsForProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalEnableImportFindingsForProductInputShapeAWSJSON(v *types.EnableImportFindingsForProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalEnableSecurityHubInputShapeAWSREST(v *types.EnableSecurityHubInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalEnableSecurityHubInputShapeAWSJSON(v *types.EnableSecurityHubInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEnabledStandardsInputShapeAWSREST(v *types.GetEnabledStandardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEnabledStandardsInputShapeAWSJSON(v *types.GetEnabledStandardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetFindingsInputShapeAWSREST(v *types.GetFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetFindingsInputShapeAWSJSON(v *types.GetFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetInsightResultsInputShapeAWSREST(v *types.GetInsightResultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetInsightResultsInputShapeAWSJSON(v *types.GetInsightResultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetInsightsInputShapeAWSREST(v *types.GetInsightsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetInsightsInputShapeAWSJSON(v *types.GetInsightsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetInvitationsCountInputShapeAWSREST(v *types.GetInvitationsCountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetInvitationsCountInputShapeAWSJSON(v *types.GetInvitationsCountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMasterAccountInputShapeAWSREST(v *types.GetMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMasterAccountInputShapeAWSJSON(v *types.GetMasterAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMembersInputShapeAWSREST(v *types.GetMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMembersInputShapeAWSJSON(v *types.GetMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalInviteMembersInputShapeAWSREST(v *types.InviteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalInviteMembersInputShapeAWSJSON(v *types.InviteMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListEnabledProductsForImportInputShapeAWSREST(v *types.ListEnabledProductsForImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListEnabledProductsForImportInputShapeAWSJSON(v *types.ListEnabledProductsForImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListInvitationsInputShapeAWSREST(v *types.ListInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListInvitationsInputShapeAWSJSON(v *types.ListInvitationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListMembersInputShapeAWSREST(v *types.ListMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListMembersInputShapeAWSJSON(v *types.ListMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateActionTargetInputShapeAWSREST(v *types.UpdateActionTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateActionTargetInputShapeAWSJSON(v *types.UpdateActionTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateFindingsInputShapeAWSREST(v *types.UpdateFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateFindingsInputShapeAWSJSON(v *types.UpdateFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateInsightInputShapeAWSREST(v *types.UpdateInsightInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateInsightInputShapeAWSJSON(v *types.UpdateInsightInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m AcceptInvitationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptInvitationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalAcceptInvitationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptInvitationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptInvitation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDisableStandardsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDisableStandardsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchDisableStandardsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDisableStandardsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDisableStandards.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchEnableStandardsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchEnableStandardsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchEnableStandardsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchEnableStandardsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchEnableStandards.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchImportFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchImportFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchImportFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchImportFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchImportFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateActionTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateActionTargetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateActionTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateActionTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateActionTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInsightMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInsightInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateInsightInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInsightMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInsight.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeclineInvitationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeclineInvitationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeclineInvitationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeclineInvitationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeclineInvitations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteActionTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteActionTargetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteActionTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteActionTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteActionTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInsightMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInsightInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteInsightInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInsightMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInsight.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInvitationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInvitationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteInvitationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInvitationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInvitations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeActionTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeActionTargetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeActionTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeActionTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeActionTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHubMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHubInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeHubInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHubMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHub.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProductsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProductsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeProductsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProductsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProducts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableImportFindingsForProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableImportFindingsForProductInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisableImportFindingsForProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableImportFindingsForProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableImportFindingsForProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableSecurityHubMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableSecurityHubInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisableSecurityHubInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableSecurityHubMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableSecurityHub.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateFromMasterAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateFromMasterAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateFromMasterAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateFromMasterAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateFromMasterAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableImportFindingsForProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableImportFindingsForProductInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalEnableImportFindingsForProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableImportFindingsForProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableImportFindingsForProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableSecurityHubMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableSecurityHubInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalEnableSecurityHubInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableSecurityHubMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableSecurityHub.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEnabledStandardsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEnabledStandardsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEnabledStandardsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEnabledStandardsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEnabledStandards.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInsightResultsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInsightResultsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetInsightResultsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInsightResultsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInsightResults.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInsightsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInsightsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetInsightsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInsightsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInsights.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInvitationsCountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInvitationsCountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetInvitationsCountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInvitationsCountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInvitationsCount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMasterAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMasterAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMasterAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMasterAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMasterAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InviteMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInviteMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalInviteMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InviteMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InviteMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEnabledProductsForImportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEnabledProductsForImportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListEnabledProductsForImportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEnabledProductsForImportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEnabledProductsForImport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInvitationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInvitationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListInvitationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInvitationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInvitations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListMembersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateActionTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateActionTargetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateActionTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateActionTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateActionTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFindingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateInsightMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateInsightInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateInsightInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateInsightMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateInsight.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
