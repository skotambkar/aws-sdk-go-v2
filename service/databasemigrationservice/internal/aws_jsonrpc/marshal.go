// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/databasemigrationservice/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddTagsToResourceMarshaler defines marshaler for AddTagsToResource operation
type AddTagsToResourceMarshaler struct {
	Input *types.AddTagsToResourceInput
}

// ApplyPendingMaintenanceActionMarshaler defines marshaler for ApplyPendingMaintenanceAction operation
type ApplyPendingMaintenanceActionMarshaler struct {
	Input *types.ApplyPendingMaintenanceActionInput
}

// CreateEndpointMarshaler defines marshaler for CreateEndpoint operation
type CreateEndpointMarshaler struct {
	Input *types.CreateEndpointInput
}

// CreateEventSubscriptionMarshaler defines marshaler for CreateEventSubscription operation
type CreateEventSubscriptionMarshaler struct {
	Input *types.CreateEventSubscriptionInput
}

// CreateReplicationInstanceMarshaler defines marshaler for CreateReplicationInstance operation
type CreateReplicationInstanceMarshaler struct {
	Input *types.CreateReplicationInstanceInput
}

// CreateReplicationSubnetGroupMarshaler defines marshaler for CreateReplicationSubnetGroup operation
type CreateReplicationSubnetGroupMarshaler struct {
	Input *types.CreateReplicationSubnetGroupInput
}

// CreateReplicationTaskMarshaler defines marshaler for CreateReplicationTask operation
type CreateReplicationTaskMarshaler struct {
	Input *types.CreateReplicationTaskInput
}

// DeleteCertificateMarshaler defines marshaler for DeleteCertificate operation
type DeleteCertificateMarshaler struct {
	Input *types.DeleteCertificateInput
}

// DeleteConnectionMarshaler defines marshaler for DeleteConnection operation
type DeleteConnectionMarshaler struct {
	Input *types.DeleteConnectionInput
}

// DeleteEndpointMarshaler defines marshaler for DeleteEndpoint operation
type DeleteEndpointMarshaler struct {
	Input *types.DeleteEndpointInput
}

// DeleteEventSubscriptionMarshaler defines marshaler for DeleteEventSubscription operation
type DeleteEventSubscriptionMarshaler struct {
	Input *types.DeleteEventSubscriptionInput
}

// DeleteReplicationInstanceMarshaler defines marshaler for DeleteReplicationInstance operation
type DeleteReplicationInstanceMarshaler struct {
	Input *types.DeleteReplicationInstanceInput
}

// DeleteReplicationSubnetGroupMarshaler defines marshaler for DeleteReplicationSubnetGroup operation
type DeleteReplicationSubnetGroupMarshaler struct {
	Input *types.DeleteReplicationSubnetGroupInput
}

// DeleteReplicationTaskMarshaler defines marshaler for DeleteReplicationTask operation
type DeleteReplicationTaskMarshaler struct {
	Input *types.DeleteReplicationTaskInput
}

// DescribeAccountAttributesMarshaler defines marshaler for DescribeAccountAttributes operation
type DescribeAccountAttributesMarshaler struct {
	Input *types.DescribeAccountAttributesInput
}

// DescribeCertificatesMarshaler defines marshaler for DescribeCertificates operation
type DescribeCertificatesMarshaler struct {
	Input *types.DescribeCertificatesInput
}

// DescribeConnectionsMarshaler defines marshaler for DescribeConnections operation
type DescribeConnectionsMarshaler struct {
	Input *types.DescribeConnectionsInput
}

// DescribeEndpointTypesMarshaler defines marshaler for DescribeEndpointTypes operation
type DescribeEndpointTypesMarshaler struct {
	Input *types.DescribeEndpointTypesInput
}

// DescribeEndpointsMarshaler defines marshaler for DescribeEndpoints operation
type DescribeEndpointsMarshaler struct {
	Input *types.DescribeEndpointsInput
}

// DescribeEventCategoriesMarshaler defines marshaler for DescribeEventCategories operation
type DescribeEventCategoriesMarshaler struct {
	Input *types.DescribeEventCategoriesInput
}

// DescribeEventSubscriptionsMarshaler defines marshaler for DescribeEventSubscriptions operation
type DescribeEventSubscriptionsMarshaler struct {
	Input *types.DescribeEventSubscriptionsInput
}

// DescribeEventsMarshaler defines marshaler for DescribeEvents operation
type DescribeEventsMarshaler struct {
	Input *types.DescribeEventsInput
}

// DescribeOrderableReplicationInstancesMarshaler defines marshaler for DescribeOrderableReplicationInstances operation
type DescribeOrderableReplicationInstancesMarshaler struct {
	Input *types.DescribeOrderableReplicationInstancesInput
}

// DescribePendingMaintenanceActionsMarshaler defines marshaler for DescribePendingMaintenanceActions operation
type DescribePendingMaintenanceActionsMarshaler struct {
	Input *types.DescribePendingMaintenanceActionsInput
}

// DescribeRefreshSchemasStatusMarshaler defines marshaler for DescribeRefreshSchemasStatus operation
type DescribeRefreshSchemasStatusMarshaler struct {
	Input *types.DescribeRefreshSchemasStatusInput
}

// DescribeReplicationInstanceTaskLogsMarshaler defines marshaler for DescribeReplicationInstanceTaskLogs operation
type DescribeReplicationInstanceTaskLogsMarshaler struct {
	Input *types.DescribeReplicationInstanceTaskLogsInput
}

// DescribeReplicationInstancesMarshaler defines marshaler for DescribeReplicationInstances operation
type DescribeReplicationInstancesMarshaler struct {
	Input *types.DescribeReplicationInstancesInput
}

// DescribeReplicationSubnetGroupsMarshaler defines marshaler for DescribeReplicationSubnetGroups operation
type DescribeReplicationSubnetGroupsMarshaler struct {
	Input *types.DescribeReplicationSubnetGroupsInput
}

// DescribeReplicationTaskAssessmentResultsMarshaler defines marshaler for DescribeReplicationTaskAssessmentResults operation
type DescribeReplicationTaskAssessmentResultsMarshaler struct {
	Input *types.DescribeReplicationTaskAssessmentResultsInput
}

// DescribeReplicationTasksMarshaler defines marshaler for DescribeReplicationTasks operation
type DescribeReplicationTasksMarshaler struct {
	Input *types.DescribeReplicationTasksInput
}

// DescribeSchemasMarshaler defines marshaler for DescribeSchemas operation
type DescribeSchemasMarshaler struct {
	Input *types.DescribeSchemasInput
}

// DescribeTableStatisticsMarshaler defines marshaler for DescribeTableStatistics operation
type DescribeTableStatisticsMarshaler struct {
	Input *types.DescribeTableStatisticsInput
}

// ImportCertificateMarshaler defines marshaler for ImportCertificate operation
type ImportCertificateMarshaler struct {
	Input *types.ImportCertificateInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ModifyEndpointMarshaler defines marshaler for ModifyEndpoint operation
type ModifyEndpointMarshaler struct {
	Input *types.ModifyEndpointInput
}

// ModifyEventSubscriptionMarshaler defines marshaler for ModifyEventSubscription operation
type ModifyEventSubscriptionMarshaler struct {
	Input *types.ModifyEventSubscriptionInput
}

// ModifyReplicationInstanceMarshaler defines marshaler for ModifyReplicationInstance operation
type ModifyReplicationInstanceMarshaler struct {
	Input *types.ModifyReplicationInstanceInput
}

// ModifyReplicationSubnetGroupMarshaler defines marshaler for ModifyReplicationSubnetGroup operation
type ModifyReplicationSubnetGroupMarshaler struct {
	Input *types.ModifyReplicationSubnetGroupInput
}

// ModifyReplicationTaskMarshaler defines marshaler for ModifyReplicationTask operation
type ModifyReplicationTaskMarshaler struct {
	Input *types.ModifyReplicationTaskInput
}

// RebootReplicationInstanceMarshaler defines marshaler for RebootReplicationInstance operation
type RebootReplicationInstanceMarshaler struct {
	Input *types.RebootReplicationInstanceInput
}

// RefreshSchemasMarshaler defines marshaler for RefreshSchemas operation
type RefreshSchemasMarshaler struct {
	Input *types.RefreshSchemasInput
}

// ReloadTablesMarshaler defines marshaler for ReloadTables operation
type ReloadTablesMarshaler struct {
	Input *types.ReloadTablesInput
}

// RemoveTagsFromResourceMarshaler defines marshaler for RemoveTagsFromResource operation
type RemoveTagsFromResourceMarshaler struct {
	Input *types.RemoveTagsFromResourceInput
}

// StartReplicationTaskMarshaler defines marshaler for StartReplicationTask operation
type StartReplicationTaskMarshaler struct {
	Input *types.StartReplicationTaskInput
}

// StartReplicationTaskAssessmentMarshaler defines marshaler for StartReplicationTaskAssessment operation
type StartReplicationTaskAssessmentMarshaler struct {
	Input *types.StartReplicationTaskAssessmentInput
}

// StopReplicationTaskMarshaler defines marshaler for StopReplicationTask operation
type StopReplicationTaskMarshaler struct {
	Input *types.StopReplicationTaskInput
}

// TestConnectionMarshaler defines marshaler for TestConnection operation
type TestConnectionMarshaler struct {
	Input *types.TestConnectionInput
}

func MarshalAddTagsToResourceInputShapeAWSJSON(v *types.AddTagsToResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalApplyPendingMaintenanceActionInputShapeAWSJSON(v *types.ApplyPendingMaintenanceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateEndpointInputShapeAWSJSON(v *types.CreateEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateEventSubscriptionInputShapeAWSJSON(v *types.CreateEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateReplicationInstanceInputShapeAWSJSON(v *types.CreateReplicationInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateReplicationSubnetGroupInputShapeAWSJSON(v *types.CreateReplicationSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateReplicationTaskInputShapeAWSJSON(v *types.CreateReplicationTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteCertificateInputShapeAWSJSON(v *types.DeleteCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteConnectionInputShapeAWSJSON(v *types.DeleteConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteEndpointInputShapeAWSJSON(v *types.DeleteEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteEventSubscriptionInputShapeAWSJSON(v *types.DeleteEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteReplicationInstanceInputShapeAWSJSON(v *types.DeleteReplicationInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteReplicationSubnetGroupInputShapeAWSJSON(v *types.DeleteReplicationSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteReplicationTaskInputShapeAWSJSON(v *types.DeleteReplicationTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAccountAttributesInputShapeAWSJSON(v *types.DescribeAccountAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCertificatesInputShapeAWSJSON(v *types.DescribeCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeConnectionsInputShapeAWSJSON(v *types.DescribeConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEndpointTypesInputShapeAWSJSON(v *types.DescribeEndpointTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEndpointsInputShapeAWSJSON(v *types.DescribeEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventCategoriesInputShapeAWSJSON(v *types.DescribeEventCategoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventSubscriptionsInputShapeAWSJSON(v *types.DescribeEventSubscriptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventsInputShapeAWSJSON(v *types.DescribeEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeOrderableReplicationInstancesInputShapeAWSJSON(v *types.DescribeOrderableReplicationInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePendingMaintenanceActionsInputShapeAWSJSON(v *types.DescribePendingMaintenanceActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRefreshSchemasStatusInputShapeAWSJSON(v *types.DescribeRefreshSchemasStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeReplicationInstanceTaskLogsInputShapeAWSJSON(v *types.DescribeReplicationInstanceTaskLogsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeReplicationInstancesInputShapeAWSJSON(v *types.DescribeReplicationInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeReplicationSubnetGroupsInputShapeAWSJSON(v *types.DescribeReplicationSubnetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeReplicationTaskAssessmentResultsInputShapeAWSJSON(v *types.DescribeReplicationTaskAssessmentResultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeReplicationTasksInputShapeAWSJSON(v *types.DescribeReplicationTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSchemasInputShapeAWSJSON(v *types.DescribeSchemasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTableStatisticsInputShapeAWSJSON(v *types.DescribeTableStatisticsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalImportCertificateInputShapeAWSJSON(v *types.ImportCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalModifyEndpointInputShapeAWSJSON(v *types.ModifyEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalModifyEventSubscriptionInputShapeAWSJSON(v *types.ModifyEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalModifyReplicationInstanceInputShapeAWSJSON(v *types.ModifyReplicationInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalModifyReplicationSubnetGroupInputShapeAWSJSON(v *types.ModifyReplicationSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalModifyReplicationTaskInputShapeAWSJSON(v *types.ModifyReplicationTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRebootReplicationInstanceInputShapeAWSJSON(v *types.RebootReplicationInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRefreshSchemasInputShapeAWSJSON(v *types.RefreshSchemasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalReloadTablesInputShapeAWSJSON(v *types.ReloadTablesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveTagsFromResourceInputShapeAWSJSON(v *types.RemoveTagsFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartReplicationTaskInputShapeAWSJSON(v *types.StartReplicationTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartReplicationTaskAssessmentInputShapeAWSJSON(v *types.StartReplicationTaskAssessmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopReplicationTaskInputShapeAWSJSON(v *types.StopReplicationTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTestConnectionInputShapeAWSJSON(v *types.TestConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AddTagsToResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ApplyPendingMaintenanceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalApplyPendingMaintenanceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ApplyPendingMaintenanceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ApplyPendingMaintenanceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEventSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateReplicationInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateReplicationInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateReplicationInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateReplicationInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateReplicationSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateReplicationSubnetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateReplicationSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateReplicationSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateReplicationTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateReplicationTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateReplicationTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateReplicationTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConnectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteReplicationInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteReplicationInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteReplicationInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteReplicationInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteReplicationSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteReplicationSubnetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteReplicationSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteReplicationSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteReplicationTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteReplicationTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteReplicationTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteReplicationTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccountAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCertificatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeConnectionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEndpointTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEndpointTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEndpointTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEndpointTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEndpointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventCategoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventCategoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventCategoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventCategories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventSubscriptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventSubscriptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventSubscriptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventSubscriptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOrderableReplicationInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOrderableReplicationInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOrderableReplicationInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOrderableReplicationInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePendingMaintenanceActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePendingMaintenanceActionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePendingMaintenanceActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePendingMaintenanceActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRefreshSchemasStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRefreshSchemasStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRefreshSchemasStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRefreshSchemasStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReplicationInstanceTaskLogsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReplicationInstanceTaskLogsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReplicationInstanceTaskLogsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReplicationInstanceTaskLogs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReplicationInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReplicationInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReplicationInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReplicationInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReplicationSubnetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReplicationSubnetGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReplicationSubnetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReplicationSubnetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReplicationTaskAssessmentResultsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReplicationTaskAssessmentResultsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReplicationTaskAssessmentResultsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReplicationTaskAssessmentResults.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReplicationTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReplicationTasksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReplicationTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReplicationTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSchemasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSchemasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSchemasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSchemas.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTableStatisticsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTableStatisticsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTableStatisticsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTableStatistics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyEventSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyReplicationInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyReplicationInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyReplicationInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyReplicationInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyReplicationSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyReplicationSubnetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyReplicationSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyReplicationSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyReplicationTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyReplicationTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyReplicationTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyReplicationTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootReplicationInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootReplicationInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootReplicationInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootReplicationInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RefreshSchemasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRefreshSchemasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RefreshSchemasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RefreshSchemas.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReloadTablesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReloadTablesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReloadTablesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReloadTables.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartReplicationTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartReplicationTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartReplicationTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartReplicationTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartReplicationTaskAssessmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartReplicationTaskAssessmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartReplicationTaskAssessmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartReplicationTaskAssessment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopReplicationTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopReplicationTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopReplicationTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopReplicationTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestConnectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
