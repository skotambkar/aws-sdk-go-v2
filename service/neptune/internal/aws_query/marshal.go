// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/neptune/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddRoleToDBClusterMarshaler defines marshaler for AddRoleToDBCluster operation
type AddRoleToDBClusterMarshaler struct {
	Input *types.AddRoleToDBClusterInput
}

// AddSourceIdentifierToSubscriptionMarshaler defines marshaler for AddSourceIdentifierToSubscription operation
type AddSourceIdentifierToSubscriptionMarshaler struct {
	Input *types.AddSourceIdentifierToSubscriptionInput
}

// AddTagsToResourceMarshaler defines marshaler for AddTagsToResource operation
type AddTagsToResourceMarshaler struct {
	Input *types.AddTagsToResourceInput
}

// ApplyPendingMaintenanceActionMarshaler defines marshaler for ApplyPendingMaintenanceAction operation
type ApplyPendingMaintenanceActionMarshaler struct {
	Input *types.ApplyPendingMaintenanceActionInput
}

// CopyDBClusterParameterGroupMarshaler defines marshaler for CopyDBClusterParameterGroup operation
type CopyDBClusterParameterGroupMarshaler struct {
	Input *types.CopyDBClusterParameterGroupInput
}

// CopyDBClusterSnapshotMarshaler defines marshaler for CopyDBClusterSnapshot operation
type CopyDBClusterSnapshotMarshaler struct {
	Input *types.CopyDBClusterSnapshotInput
}

// CopyDBParameterGroupMarshaler defines marshaler for CopyDBParameterGroup operation
type CopyDBParameterGroupMarshaler struct {
	Input *types.CopyDBParameterGroupInput
}

// CreateDBClusterMarshaler defines marshaler for CreateDBCluster operation
type CreateDBClusterMarshaler struct {
	Input *types.CreateDBClusterInput
}

// CreateDBClusterParameterGroupMarshaler defines marshaler for CreateDBClusterParameterGroup operation
type CreateDBClusterParameterGroupMarshaler struct {
	Input *types.CreateDBClusterParameterGroupInput
}

// CreateDBClusterSnapshotMarshaler defines marshaler for CreateDBClusterSnapshot operation
type CreateDBClusterSnapshotMarshaler struct {
	Input *types.CreateDBClusterSnapshotInput
}

// CreateDBInstanceMarshaler defines marshaler for CreateDBInstance operation
type CreateDBInstanceMarshaler struct {
	Input *types.CreateDBInstanceInput
}

// CreateDBParameterGroupMarshaler defines marshaler for CreateDBParameterGroup operation
type CreateDBParameterGroupMarshaler struct {
	Input *types.CreateDBParameterGroupInput
}

// CreateDBSubnetGroupMarshaler defines marshaler for CreateDBSubnetGroup operation
type CreateDBSubnetGroupMarshaler struct {
	Input *types.CreateDBSubnetGroupInput
}

// CreateEventSubscriptionMarshaler defines marshaler for CreateEventSubscription operation
type CreateEventSubscriptionMarshaler struct {
	Input *types.CreateEventSubscriptionInput
}

// DeleteDBClusterMarshaler defines marshaler for DeleteDBCluster operation
type DeleteDBClusterMarshaler struct {
	Input *types.DeleteDBClusterInput
}

// DeleteDBClusterParameterGroupMarshaler defines marshaler for DeleteDBClusterParameterGroup operation
type DeleteDBClusterParameterGroupMarshaler struct {
	Input *types.DeleteDBClusterParameterGroupInput
}

// DeleteDBClusterSnapshotMarshaler defines marshaler for DeleteDBClusterSnapshot operation
type DeleteDBClusterSnapshotMarshaler struct {
	Input *types.DeleteDBClusterSnapshotInput
}

// DeleteDBInstanceMarshaler defines marshaler for DeleteDBInstance operation
type DeleteDBInstanceMarshaler struct {
	Input *types.DeleteDBInstanceInput
}

// DeleteDBParameterGroupMarshaler defines marshaler for DeleteDBParameterGroup operation
type DeleteDBParameterGroupMarshaler struct {
	Input *types.DeleteDBParameterGroupInput
}

// DeleteDBSubnetGroupMarshaler defines marshaler for DeleteDBSubnetGroup operation
type DeleteDBSubnetGroupMarshaler struct {
	Input *types.DeleteDBSubnetGroupInput
}

// DeleteEventSubscriptionMarshaler defines marshaler for DeleteEventSubscription operation
type DeleteEventSubscriptionMarshaler struct {
	Input *types.DeleteEventSubscriptionInput
}

// DescribeDBClusterParameterGroupsMarshaler defines marshaler for DescribeDBClusterParameterGroups operation
type DescribeDBClusterParameterGroupsMarshaler struct {
	Input *types.DescribeDBClusterParameterGroupsInput
}

// DescribeDBClusterParametersMarshaler defines marshaler for DescribeDBClusterParameters operation
type DescribeDBClusterParametersMarshaler struct {
	Input *types.DescribeDBClusterParametersInput
}

// DescribeDBClusterSnapshotAttributesMarshaler defines marshaler for DescribeDBClusterSnapshotAttributes operation
type DescribeDBClusterSnapshotAttributesMarshaler struct {
	Input *types.DescribeDBClusterSnapshotAttributesInput
}

// DescribeDBClusterSnapshotsMarshaler defines marshaler for DescribeDBClusterSnapshots operation
type DescribeDBClusterSnapshotsMarshaler struct {
	Input *types.DescribeDBClusterSnapshotsInput
}

// DescribeDBClustersMarshaler defines marshaler for DescribeDBClusters operation
type DescribeDBClustersMarshaler struct {
	Input *types.DescribeDBClustersInput
}

// DescribeDBEngineVersionsMarshaler defines marshaler for DescribeDBEngineVersions operation
type DescribeDBEngineVersionsMarshaler struct {
	Input *types.DescribeDBEngineVersionsInput
}

// DescribeDBInstancesMarshaler defines marshaler for DescribeDBInstances operation
type DescribeDBInstancesMarshaler struct {
	Input *types.DescribeDBInstancesInput
}

// DescribeDBParameterGroupsMarshaler defines marshaler for DescribeDBParameterGroups operation
type DescribeDBParameterGroupsMarshaler struct {
	Input *types.DescribeDBParameterGroupsInput
}

// DescribeDBParametersMarshaler defines marshaler for DescribeDBParameters operation
type DescribeDBParametersMarshaler struct {
	Input *types.DescribeDBParametersInput
}

// DescribeDBSubnetGroupsMarshaler defines marshaler for DescribeDBSubnetGroups operation
type DescribeDBSubnetGroupsMarshaler struct {
	Input *types.DescribeDBSubnetGroupsInput
}

// DescribeEngineDefaultClusterParametersMarshaler defines marshaler for DescribeEngineDefaultClusterParameters operation
type DescribeEngineDefaultClusterParametersMarshaler struct {
	Input *types.DescribeEngineDefaultClusterParametersInput
}

// DescribeEngineDefaultParametersMarshaler defines marshaler for DescribeEngineDefaultParameters operation
type DescribeEngineDefaultParametersMarshaler struct {
	Input *types.DescribeEngineDefaultParametersInput
}

// DescribeEventCategoriesMarshaler defines marshaler for DescribeEventCategories operation
type DescribeEventCategoriesMarshaler struct {
	Input *types.DescribeEventCategoriesInput
}

// DescribeEventSubscriptionsMarshaler defines marshaler for DescribeEventSubscriptions operation
type DescribeEventSubscriptionsMarshaler struct {
	Input *types.DescribeEventSubscriptionsInput
}

// DescribeEventsMarshaler defines marshaler for DescribeEvents operation
type DescribeEventsMarshaler struct {
	Input *types.DescribeEventsInput
}

// DescribeOrderableDBInstanceOptionsMarshaler defines marshaler for DescribeOrderableDBInstanceOptions operation
type DescribeOrderableDBInstanceOptionsMarshaler struct {
	Input *types.DescribeOrderableDBInstanceOptionsInput
}

// DescribePendingMaintenanceActionsMarshaler defines marshaler for DescribePendingMaintenanceActions operation
type DescribePendingMaintenanceActionsMarshaler struct {
	Input *types.DescribePendingMaintenanceActionsInput
}

// DescribeValidDBInstanceModificationsMarshaler defines marshaler for DescribeValidDBInstanceModifications operation
type DescribeValidDBInstanceModificationsMarshaler struct {
	Input *types.DescribeValidDBInstanceModificationsInput
}

// FailoverDBClusterMarshaler defines marshaler for FailoverDBCluster operation
type FailoverDBClusterMarshaler struct {
	Input *types.FailoverDBClusterInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ModifyDBClusterMarshaler defines marshaler for ModifyDBCluster operation
type ModifyDBClusterMarshaler struct {
	Input *types.ModifyDBClusterInput
}

// ModifyDBClusterParameterGroupMarshaler defines marshaler for ModifyDBClusterParameterGroup operation
type ModifyDBClusterParameterGroupMarshaler struct {
	Input *types.ModifyDBClusterParameterGroupInput
}

// ModifyDBClusterSnapshotAttributeMarshaler defines marshaler for ModifyDBClusterSnapshotAttribute operation
type ModifyDBClusterSnapshotAttributeMarshaler struct {
	Input *types.ModifyDBClusterSnapshotAttributeInput
}

// ModifyDBInstanceMarshaler defines marshaler for ModifyDBInstance operation
type ModifyDBInstanceMarshaler struct {
	Input *types.ModifyDBInstanceInput
}

// ModifyDBParameterGroupMarshaler defines marshaler for ModifyDBParameterGroup operation
type ModifyDBParameterGroupMarshaler struct {
	Input *types.ModifyDBParameterGroupInput
}

// ModifyDBSubnetGroupMarshaler defines marshaler for ModifyDBSubnetGroup operation
type ModifyDBSubnetGroupMarshaler struct {
	Input *types.ModifyDBSubnetGroupInput
}

// ModifyEventSubscriptionMarshaler defines marshaler for ModifyEventSubscription operation
type ModifyEventSubscriptionMarshaler struct {
	Input *types.ModifyEventSubscriptionInput
}

// PromoteReadReplicaDBClusterMarshaler defines marshaler for PromoteReadReplicaDBCluster operation
type PromoteReadReplicaDBClusterMarshaler struct {
	Input *types.PromoteReadReplicaDBClusterInput
}

// RebootDBInstanceMarshaler defines marshaler for RebootDBInstance operation
type RebootDBInstanceMarshaler struct {
	Input *types.RebootDBInstanceInput
}

// RemoveRoleFromDBClusterMarshaler defines marshaler for RemoveRoleFromDBCluster operation
type RemoveRoleFromDBClusterMarshaler struct {
	Input *types.RemoveRoleFromDBClusterInput
}

// RemoveSourceIdentifierFromSubscriptionMarshaler defines marshaler for RemoveSourceIdentifierFromSubscription operation
type RemoveSourceIdentifierFromSubscriptionMarshaler struct {
	Input *types.RemoveSourceIdentifierFromSubscriptionInput
}

// RemoveTagsFromResourceMarshaler defines marshaler for RemoveTagsFromResource operation
type RemoveTagsFromResourceMarshaler struct {
	Input *types.RemoveTagsFromResourceInput
}

// ResetDBClusterParameterGroupMarshaler defines marshaler for ResetDBClusterParameterGroup operation
type ResetDBClusterParameterGroupMarshaler struct {
	Input *types.ResetDBClusterParameterGroupInput
}

// ResetDBParameterGroupMarshaler defines marshaler for ResetDBParameterGroup operation
type ResetDBParameterGroupMarshaler struct {
	Input *types.ResetDBParameterGroupInput
}

// RestoreDBClusterFromSnapshotMarshaler defines marshaler for RestoreDBClusterFromSnapshot operation
type RestoreDBClusterFromSnapshotMarshaler struct {
	Input *types.RestoreDBClusterFromSnapshotInput
}

// RestoreDBClusterToPointInTimeMarshaler defines marshaler for RestoreDBClusterToPointInTime operation
type RestoreDBClusterToPointInTimeMarshaler struct {
	Input *types.RestoreDBClusterToPointInTimeInput
}

func MarshalAddRoleToDBClusterInputShapeAWSQuery(v *types.AddRoleToDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddSourceIdentifierToSubscriptionInputShapeAWSQuery(v *types.AddSourceIdentifierToSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAddTagsToResourceInputShapeAWSQuery(v *types.AddTagsToResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalApplyPendingMaintenanceActionInputShapeAWSQuery(v *types.ApplyPendingMaintenanceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBClusterParameterGroupInputShapeAWSQuery(v *types.CopyDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBClusterSnapshotInputShapeAWSQuery(v *types.CopyDBClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyDBParameterGroupInputShapeAWSQuery(v *types.CopyDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterInputShapeAWSQuery(v *types.CreateDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterParameterGroupInputShapeAWSQuery(v *types.CreateDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBClusterSnapshotInputShapeAWSQuery(v *types.CreateDBClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBInstanceInputShapeAWSQuery(v *types.CreateDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBParameterGroupInputShapeAWSQuery(v *types.CreateDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateDBSubnetGroupInputShapeAWSQuery(v *types.CreateDBSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateEventSubscriptionInputShapeAWSQuery(v *types.CreateEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterInputShapeAWSQuery(v *types.DeleteDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterParameterGroupInputShapeAWSQuery(v *types.DeleteDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBClusterSnapshotInputShapeAWSQuery(v *types.DeleteDBClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBInstanceInputShapeAWSQuery(v *types.DeleteDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBParameterGroupInputShapeAWSQuery(v *types.DeleteDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDBSubnetGroupInputShapeAWSQuery(v *types.DeleteDBSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteEventSubscriptionInputShapeAWSQuery(v *types.DeleteEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterParameterGroupsInputShapeAWSQuery(v *types.DescribeDBClusterParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterParametersInputShapeAWSQuery(v *types.DescribeDBClusterParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterSnapshotAttributesInputShapeAWSQuery(v *types.DescribeDBClusterSnapshotAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClusterSnapshotsInputShapeAWSQuery(v *types.DescribeDBClusterSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBClustersInputShapeAWSQuery(v *types.DescribeDBClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBEngineVersionsInputShapeAWSQuery(v *types.DescribeDBEngineVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBInstancesInputShapeAWSQuery(v *types.DescribeDBInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBParameterGroupsInputShapeAWSQuery(v *types.DescribeDBParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBParametersInputShapeAWSQuery(v *types.DescribeDBParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDBSubnetGroupsInputShapeAWSQuery(v *types.DescribeDBSubnetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEngineDefaultClusterParametersInputShapeAWSQuery(v *types.DescribeEngineDefaultClusterParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEngineDefaultParametersInputShapeAWSQuery(v *types.DescribeEngineDefaultParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventCategoriesInputShapeAWSQuery(v *types.DescribeEventCategoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventSubscriptionsInputShapeAWSQuery(v *types.DescribeEventSubscriptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventsInputShapeAWSQuery(v *types.DescribeEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeOrderableDBInstanceOptionsInputShapeAWSQuery(v *types.DescribeOrderableDBInstanceOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribePendingMaintenanceActionsInputShapeAWSQuery(v *types.DescribePendingMaintenanceActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeValidDBInstanceModificationsInputShapeAWSQuery(v *types.DescribeValidDBInstanceModificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalFailoverDBClusterInputShapeAWSQuery(v *types.FailoverDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSQuery(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterInputShapeAWSQuery(v *types.ModifyDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterParameterGroupInputShapeAWSQuery(v *types.ModifyDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBClusterSnapshotAttributeInputShapeAWSQuery(v *types.ModifyDBClusterSnapshotAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBInstanceInputShapeAWSQuery(v *types.ModifyDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBParameterGroupInputShapeAWSQuery(v *types.ModifyDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyDBSubnetGroupInputShapeAWSQuery(v *types.ModifyDBSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyEventSubscriptionInputShapeAWSQuery(v *types.ModifyEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPromoteReadReplicaDBClusterInputShapeAWSQuery(v *types.PromoteReadReplicaDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRebootDBInstanceInputShapeAWSQuery(v *types.RebootDBInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveRoleFromDBClusterInputShapeAWSQuery(v *types.RemoveRoleFromDBClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveSourceIdentifierFromSubscriptionInputShapeAWSQuery(v *types.RemoveSourceIdentifierFromSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveTagsFromResourceInputShapeAWSQuery(v *types.RemoveTagsFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetDBClusterParameterGroupInputShapeAWSQuery(v *types.ResetDBClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetDBParameterGroupInputShapeAWSQuery(v *types.ResetDBParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBClusterFromSnapshotInputShapeAWSQuery(v *types.RestoreDBClusterFromSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreDBClusterToPointInTimeInputShapeAWSQuery(v *types.RestoreDBClusterToPointInTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AddRoleToDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddRoleToDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddRoleToDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddRoleToDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddSourceIdentifierToSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddSourceIdentifierToSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddSourceIdentifierToSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddSourceIdentifierToSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddTagsToResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ApplyPendingMaintenanceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalApplyPendingMaintenanceActionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ApplyPendingMaintenanceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ApplyPendingMaintenanceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDBSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDBSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDBSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDBSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDBSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDBSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDBSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDBSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterParameterGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterSnapshotAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterSnapshotAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterSnapshotAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterSnapshotAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClusterSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClusterSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClusterSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusterSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBClustersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBEngineVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBEngineVersionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBEngineVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBEngineVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBParameterGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDBSubnetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDBSubnetGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDBSubnetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDBSubnetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEngineDefaultClusterParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEngineDefaultClusterParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEngineDefaultClusterParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEngineDefaultClusterParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEngineDefaultParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEngineDefaultParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEngineDefaultParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEngineDefaultParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventCategoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventCategoriesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventCategoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventCategories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventSubscriptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventSubscriptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventSubscriptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventSubscriptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOrderableDBInstanceOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOrderableDBInstanceOptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOrderableDBInstanceOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOrderableDBInstanceOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePendingMaintenanceActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePendingMaintenanceActionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePendingMaintenanceActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePendingMaintenanceActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeValidDBInstanceModificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeValidDBInstanceModificationsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeValidDBInstanceModificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeValidDBInstanceModifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m FailoverDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalFailoverDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m FailoverDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "FailoverDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBClusterSnapshotAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBClusterSnapshotAttributeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBClusterSnapshotAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBClusterSnapshotAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyDBSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyDBSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyDBSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyDBSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PromoteReadReplicaDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPromoteReadReplicaDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PromoteReadReplicaDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PromoteReadReplicaDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootDBInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootDBInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootDBInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootDBInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveRoleFromDBClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveRoleFromDBClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveRoleFromDBClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveRoleFromDBCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveSourceIdentifierFromSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveSourceIdentifierFromSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveSourceIdentifierFromSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveSourceIdentifierFromSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetDBClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetDBClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetDBClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetDBClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetDBParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetDBParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetDBParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetDBParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBClusterFromSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBClusterFromSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBClusterFromSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBClusterFromSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreDBClusterToPointInTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreDBClusterToPointInTimeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreDBClusterToPointInTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreDBClusterToPointInTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
