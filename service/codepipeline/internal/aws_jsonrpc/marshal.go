// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codepipeline/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcknowledgeJobMarshaler defines marshaler for AcknowledgeJob operation
type AcknowledgeJobMarshaler struct {
	Input *types.AcknowledgeJobInput
}

// AcknowledgeThirdPartyJobMarshaler defines marshaler for AcknowledgeThirdPartyJob operation
type AcknowledgeThirdPartyJobMarshaler struct {
	Input *types.AcknowledgeThirdPartyJobInput
}

// CreateCustomActionTypeMarshaler defines marshaler for CreateCustomActionType operation
type CreateCustomActionTypeMarshaler struct {
	Input *types.CreateCustomActionTypeInput
}

// CreatePipelineMarshaler defines marshaler for CreatePipeline operation
type CreatePipelineMarshaler struct {
	Input *types.CreatePipelineInput
}

// DeleteCustomActionTypeMarshaler defines marshaler for DeleteCustomActionType operation
type DeleteCustomActionTypeMarshaler struct {
	Input *types.DeleteCustomActionTypeInput
}

// DeletePipelineMarshaler defines marshaler for DeletePipeline operation
type DeletePipelineMarshaler struct {
	Input *types.DeletePipelineInput
}

// DeleteWebhookMarshaler defines marshaler for DeleteWebhook operation
type DeleteWebhookMarshaler struct {
	Input *types.DeleteWebhookInput
}

// DeregisterWebhookWithThirdPartyMarshaler defines marshaler for DeregisterWebhookWithThirdParty operation
type DeregisterWebhookWithThirdPartyMarshaler struct {
	Input *types.DeregisterWebhookWithThirdPartyInput
}

// DisableStageTransitionMarshaler defines marshaler for DisableStageTransition operation
type DisableStageTransitionMarshaler struct {
	Input *types.DisableStageTransitionInput
}

// EnableStageTransitionMarshaler defines marshaler for EnableStageTransition operation
type EnableStageTransitionMarshaler struct {
	Input *types.EnableStageTransitionInput
}

// GetJobDetailsMarshaler defines marshaler for GetJobDetails operation
type GetJobDetailsMarshaler struct {
	Input *types.GetJobDetailsInput
}

// GetPipelineMarshaler defines marshaler for GetPipeline operation
type GetPipelineMarshaler struct {
	Input *types.GetPipelineInput
}

// GetPipelineExecutionMarshaler defines marshaler for GetPipelineExecution operation
type GetPipelineExecutionMarshaler struct {
	Input *types.GetPipelineExecutionInput
}

// GetPipelineStateMarshaler defines marshaler for GetPipelineState operation
type GetPipelineStateMarshaler struct {
	Input *types.GetPipelineStateInput
}

// GetThirdPartyJobDetailsMarshaler defines marshaler for GetThirdPartyJobDetails operation
type GetThirdPartyJobDetailsMarshaler struct {
	Input *types.GetThirdPartyJobDetailsInput
}

// ListActionExecutionsMarshaler defines marshaler for ListActionExecutions operation
type ListActionExecutionsMarshaler struct {
	Input *types.ListActionExecutionsInput
}

// ListActionTypesMarshaler defines marshaler for ListActionTypes operation
type ListActionTypesMarshaler struct {
	Input *types.ListActionTypesInput
}

// ListPipelineExecutionsMarshaler defines marshaler for ListPipelineExecutions operation
type ListPipelineExecutionsMarshaler struct {
	Input *types.ListPipelineExecutionsInput
}

// ListPipelinesMarshaler defines marshaler for ListPipelines operation
type ListPipelinesMarshaler struct {
	Input *types.ListPipelinesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListWebhooksMarshaler defines marshaler for ListWebhooks operation
type ListWebhooksMarshaler struct {
	Input *types.ListWebhooksInput
}

// PollForJobsMarshaler defines marshaler for PollForJobs operation
type PollForJobsMarshaler struct {
	Input *types.PollForJobsInput
}

// PollForThirdPartyJobsMarshaler defines marshaler for PollForThirdPartyJobs operation
type PollForThirdPartyJobsMarshaler struct {
	Input *types.PollForThirdPartyJobsInput
}

// PutActionRevisionMarshaler defines marshaler for PutActionRevision operation
type PutActionRevisionMarshaler struct {
	Input *types.PutActionRevisionInput
}

// PutApprovalResultMarshaler defines marshaler for PutApprovalResult operation
type PutApprovalResultMarshaler struct {
	Input *types.PutApprovalResultInput
}

// PutJobFailureResultMarshaler defines marshaler for PutJobFailureResult operation
type PutJobFailureResultMarshaler struct {
	Input *types.PutJobFailureResultInput
}

// PutJobSuccessResultMarshaler defines marshaler for PutJobSuccessResult operation
type PutJobSuccessResultMarshaler struct {
	Input *types.PutJobSuccessResultInput
}

// PutThirdPartyJobFailureResultMarshaler defines marshaler for PutThirdPartyJobFailureResult operation
type PutThirdPartyJobFailureResultMarshaler struct {
	Input *types.PutThirdPartyJobFailureResultInput
}

// PutThirdPartyJobSuccessResultMarshaler defines marshaler for PutThirdPartyJobSuccessResult operation
type PutThirdPartyJobSuccessResultMarshaler struct {
	Input *types.PutThirdPartyJobSuccessResultInput
}

// PutWebhookMarshaler defines marshaler for PutWebhook operation
type PutWebhookMarshaler struct {
	Input *types.PutWebhookInput
}

// RegisterWebhookWithThirdPartyMarshaler defines marshaler for RegisterWebhookWithThirdParty operation
type RegisterWebhookWithThirdPartyMarshaler struct {
	Input *types.RegisterWebhookWithThirdPartyInput
}

// RetryStageExecutionMarshaler defines marshaler for RetryStageExecution operation
type RetryStageExecutionMarshaler struct {
	Input *types.RetryStageExecutionInput
}

// StartPipelineExecutionMarshaler defines marshaler for StartPipelineExecution operation
type StartPipelineExecutionMarshaler struct {
	Input *types.StartPipelineExecutionInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdatePipelineMarshaler defines marshaler for UpdatePipeline operation
type UpdatePipelineMarshaler struct {
	Input *types.UpdatePipelineInput
}

func MarshalAcknowledgeJobInputShapeAWSJSON(v *types.AcknowledgeJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAcknowledgeThirdPartyJobInputShapeAWSJSON(v *types.AcknowledgeThirdPartyJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCustomActionTypeInputShapeAWSJSON(v *types.CreateCustomActionTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePipelineInputShapeAWSJSON(v *types.CreatePipelineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteCustomActionTypeInputShapeAWSJSON(v *types.DeleteCustomActionTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePipelineInputShapeAWSJSON(v *types.DeletePipelineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteWebhookInputShapeAWSJSON(v *types.DeleteWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterWebhookWithThirdPartyInputShapeAWSJSON(v *types.DeregisterWebhookWithThirdPartyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableStageTransitionInputShapeAWSJSON(v *types.DisableStageTransitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableStageTransitionInputShapeAWSJSON(v *types.EnableStageTransitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetJobDetailsInputShapeAWSJSON(v *types.GetJobDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPipelineInputShapeAWSJSON(v *types.GetPipelineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPipelineExecutionInputShapeAWSJSON(v *types.GetPipelineExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetPipelineStateInputShapeAWSJSON(v *types.GetPipelineStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetThirdPartyJobDetailsInputShapeAWSJSON(v *types.GetThirdPartyJobDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListActionExecutionsInputShapeAWSJSON(v *types.ListActionExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListActionTypesInputShapeAWSJSON(v *types.ListActionTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPipelineExecutionsInputShapeAWSJSON(v *types.ListPipelineExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPipelinesInputShapeAWSJSON(v *types.ListPipelinesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListWebhooksInputShapeAWSJSON(v *types.ListWebhooksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPollForJobsInputShapeAWSJSON(v *types.PollForJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPollForThirdPartyJobsInputShapeAWSJSON(v *types.PollForThirdPartyJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutActionRevisionInputShapeAWSJSON(v *types.PutActionRevisionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutApprovalResultInputShapeAWSJSON(v *types.PutApprovalResultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutJobFailureResultInputShapeAWSJSON(v *types.PutJobFailureResultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutJobSuccessResultInputShapeAWSJSON(v *types.PutJobSuccessResultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutThirdPartyJobFailureResultInputShapeAWSJSON(v *types.PutThirdPartyJobFailureResultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutThirdPartyJobSuccessResultInputShapeAWSJSON(v *types.PutThirdPartyJobSuccessResultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutWebhookInputShapeAWSJSON(v *types.PutWebhookInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterWebhookWithThirdPartyInputShapeAWSJSON(v *types.RegisterWebhookWithThirdPartyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRetryStageExecutionInputShapeAWSJSON(v *types.RetryStageExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartPipelineExecutionInputShapeAWSJSON(v *types.StartPipelineExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePipelineInputShapeAWSJSON(v *types.UpdatePipelineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AcknowledgeJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcknowledgeJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcknowledgeJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcknowledgeJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AcknowledgeThirdPartyJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcknowledgeThirdPartyJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcknowledgeThirdPartyJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcknowledgeThirdPartyJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCustomActionTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCustomActionTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCustomActionTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCustomActionType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePipelineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePipelineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePipelineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePipeline.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCustomActionTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCustomActionTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCustomActionTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCustomActionType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePipelineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePipelineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePipelineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePipeline.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterWebhookWithThirdPartyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterWebhookWithThirdPartyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterWebhookWithThirdPartyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterWebhookWithThirdParty.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableStageTransitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableStageTransitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableStageTransitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableStageTransition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableStageTransitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableStageTransitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableStageTransitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableStageTransition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobDetailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJobDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPipelineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPipelineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPipelineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPipeline.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPipelineExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPipelineExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPipelineExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPipelineExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPipelineStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPipelineStateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPipelineStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPipelineState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetThirdPartyJobDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetThirdPartyJobDetailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetThirdPartyJobDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetThirdPartyJobDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListActionExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListActionExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListActionExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListActionExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListActionTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListActionTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListActionTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListActionTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPipelineExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPipelineExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPipelineExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPipelineExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPipelinesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPipelinesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPipelinesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPipelines.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListWebhooksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListWebhooksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListWebhooksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListWebhooks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PollForJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPollForJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PollForJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PollForJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PollForThirdPartyJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPollForThirdPartyJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PollForThirdPartyJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PollForThirdPartyJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutActionRevisionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutActionRevisionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutActionRevisionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutActionRevision.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutApprovalResultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutApprovalResultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutApprovalResultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutApprovalResult.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutJobFailureResultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutJobFailureResultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutJobFailureResultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutJobFailureResult.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutJobSuccessResultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutJobSuccessResultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutJobSuccessResultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutJobSuccessResult.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutThirdPartyJobFailureResultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutThirdPartyJobFailureResultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutThirdPartyJobFailureResultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutThirdPartyJobFailureResult.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutThirdPartyJobSuccessResultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutThirdPartyJobSuccessResultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutThirdPartyJobSuccessResultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutThirdPartyJobSuccessResult.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutWebhookMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutWebhookInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutWebhookMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutWebhook.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterWebhookWithThirdPartyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterWebhookWithThirdPartyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterWebhookWithThirdPartyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterWebhookWithThirdParty.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RetryStageExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRetryStageExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RetryStageExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RetryStageExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartPipelineExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartPipelineExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartPipelineExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartPipelineExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePipelineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePipelineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePipelineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePipeline.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
