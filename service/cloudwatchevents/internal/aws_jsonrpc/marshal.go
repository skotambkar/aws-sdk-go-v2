// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatchevents/types"
)

var _ bytes.Buffer
var _ awserr.Error

// ActivateEventSourceMarshaler defines marshaler for ActivateEventSource operation
type ActivateEventSourceMarshaler struct {
	Input *types.ActivateEventSourceInput
}

// CreateEventBusMarshaler defines marshaler for CreateEventBus operation
type CreateEventBusMarshaler struct {
	Input *types.CreateEventBusInput
}

// CreatePartnerEventSourceMarshaler defines marshaler for CreatePartnerEventSource operation
type CreatePartnerEventSourceMarshaler struct {
	Input *types.CreatePartnerEventSourceInput
}

// DeactivateEventSourceMarshaler defines marshaler for DeactivateEventSource operation
type DeactivateEventSourceMarshaler struct {
	Input *types.DeactivateEventSourceInput
}

// DeleteEventBusMarshaler defines marshaler for DeleteEventBus operation
type DeleteEventBusMarshaler struct {
	Input *types.DeleteEventBusInput
}

// DeletePartnerEventSourceMarshaler defines marshaler for DeletePartnerEventSource operation
type DeletePartnerEventSourceMarshaler struct {
	Input *types.DeletePartnerEventSourceInput
}

// DeleteRuleMarshaler defines marshaler for DeleteRule operation
type DeleteRuleMarshaler struct {
	Input *types.DeleteRuleInput
}

// DescribeEventBusMarshaler defines marshaler for DescribeEventBus operation
type DescribeEventBusMarshaler struct {
	Input *types.DescribeEventBusInput
}

// DescribeEventSourceMarshaler defines marshaler for DescribeEventSource operation
type DescribeEventSourceMarshaler struct {
	Input *types.DescribeEventSourceInput
}

// DescribePartnerEventSourceMarshaler defines marshaler for DescribePartnerEventSource operation
type DescribePartnerEventSourceMarshaler struct {
	Input *types.DescribePartnerEventSourceInput
}

// DescribeRuleMarshaler defines marshaler for DescribeRule operation
type DescribeRuleMarshaler struct {
	Input *types.DescribeRuleInput
}

// DisableRuleMarshaler defines marshaler for DisableRule operation
type DisableRuleMarshaler struct {
	Input *types.DisableRuleInput
}

// EnableRuleMarshaler defines marshaler for EnableRule operation
type EnableRuleMarshaler struct {
	Input *types.EnableRuleInput
}

// ListEventBusesMarshaler defines marshaler for ListEventBuses operation
type ListEventBusesMarshaler struct {
	Input *types.ListEventBusesInput
}

// ListEventSourcesMarshaler defines marshaler for ListEventSources operation
type ListEventSourcesMarshaler struct {
	Input *types.ListEventSourcesInput
}

// ListPartnerEventSourceAccountsMarshaler defines marshaler for ListPartnerEventSourceAccounts operation
type ListPartnerEventSourceAccountsMarshaler struct {
	Input *types.ListPartnerEventSourceAccountsInput
}

// ListPartnerEventSourcesMarshaler defines marshaler for ListPartnerEventSources operation
type ListPartnerEventSourcesMarshaler struct {
	Input *types.ListPartnerEventSourcesInput
}

// ListRuleNamesByTargetMarshaler defines marshaler for ListRuleNamesByTarget operation
type ListRuleNamesByTargetMarshaler struct {
	Input *types.ListRuleNamesByTargetInput
}

// ListRulesMarshaler defines marshaler for ListRules operation
type ListRulesMarshaler struct {
	Input *types.ListRulesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTargetsByRuleMarshaler defines marshaler for ListTargetsByRule operation
type ListTargetsByRuleMarshaler struct {
	Input *types.ListTargetsByRuleInput
}

// PutEventsMarshaler defines marshaler for PutEvents operation
type PutEventsMarshaler struct {
	Input *types.PutEventsInput
}

// PutPartnerEventsMarshaler defines marshaler for PutPartnerEvents operation
type PutPartnerEventsMarshaler struct {
	Input *types.PutPartnerEventsInput
}

// PutPermissionMarshaler defines marshaler for PutPermission operation
type PutPermissionMarshaler struct {
	Input *types.PutPermissionInput
}

// PutRuleMarshaler defines marshaler for PutRule operation
type PutRuleMarshaler struct {
	Input *types.PutRuleInput
}

// PutTargetsMarshaler defines marshaler for PutTargets operation
type PutTargetsMarshaler struct {
	Input *types.PutTargetsInput
}

// RemovePermissionMarshaler defines marshaler for RemovePermission operation
type RemovePermissionMarshaler struct {
	Input *types.RemovePermissionInput
}

// RemoveTargetsMarshaler defines marshaler for RemoveTargets operation
type RemoveTargetsMarshaler struct {
	Input *types.RemoveTargetsInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// TestEventPatternMarshaler defines marshaler for TestEventPattern operation
type TestEventPatternMarshaler struct {
	Input *types.TestEventPatternInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

func MarshalActivateEventSourceInputShapeAWSJSON(v *types.ActivateEventSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateEventBusInputShapeAWSJSON(v *types.CreateEventBusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePartnerEventSourceInputShapeAWSJSON(v *types.CreatePartnerEventSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeactivateEventSourceInputShapeAWSJSON(v *types.DeactivateEventSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteEventBusInputShapeAWSJSON(v *types.DeleteEventBusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePartnerEventSourceInputShapeAWSJSON(v *types.DeletePartnerEventSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRuleInputShapeAWSJSON(v *types.DeleteRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventBusInputShapeAWSJSON(v *types.DescribeEventBusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventSourceInputShapeAWSJSON(v *types.DescribeEventSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePartnerEventSourceInputShapeAWSJSON(v *types.DescribePartnerEventSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRuleInputShapeAWSJSON(v *types.DescribeRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableRuleInputShapeAWSJSON(v *types.DisableRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableRuleInputShapeAWSJSON(v *types.EnableRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListEventBusesInputShapeAWSJSON(v *types.ListEventBusesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListEventSourcesInputShapeAWSJSON(v *types.ListEventSourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPartnerEventSourceAccountsInputShapeAWSJSON(v *types.ListPartnerEventSourceAccountsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPartnerEventSourcesInputShapeAWSJSON(v *types.ListPartnerEventSourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRuleNamesByTargetInputShapeAWSJSON(v *types.ListRuleNamesByTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRulesInputShapeAWSJSON(v *types.ListRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTargetsByRuleInputShapeAWSJSON(v *types.ListTargetsByRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutEventsInputShapeAWSJSON(v *types.PutEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutPartnerEventsInputShapeAWSJSON(v *types.PutPartnerEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutPermissionInputShapeAWSJSON(v *types.PutPermissionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutRuleInputShapeAWSJSON(v *types.PutRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutTargetsInputShapeAWSJSON(v *types.PutTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemovePermissionInputShapeAWSJSON(v *types.RemovePermissionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveTargetsInputShapeAWSJSON(v *types.RemoveTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTestEventPatternInputShapeAWSJSON(v *types.TestEventPatternInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m ActivateEventSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalActivateEventSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ActivateEventSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ActivateEventSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEventBusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEventBusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEventBusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEventBus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePartnerEventSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePartnerEventSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePartnerEventSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePartnerEventSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeactivateEventSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeactivateEventSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeactivateEventSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeactivateEventSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventBusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventBusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventBusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventBus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePartnerEventSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePartnerEventSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePartnerEventSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePartnerEventSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventBusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventBusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventBusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventBus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePartnerEventSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePartnerEventSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePartnerEventSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePartnerEventSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEventBusesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEventBusesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEventBusesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEventBuses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEventSourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEventSourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEventSourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEventSources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPartnerEventSourceAccountsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPartnerEventSourceAccountsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPartnerEventSourceAccountsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPartnerEventSourceAccounts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPartnerEventSourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPartnerEventSourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPartnerEventSourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPartnerEventSources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRuleNamesByTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRuleNamesByTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRuleNamesByTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRuleNamesByTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRulesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTargetsByRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTargetsByRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTargetsByRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTargetsByRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutPartnerEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutPartnerEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutPartnerEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutPartnerEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutPermissionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutPermissionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutPermissionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutPermission.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemovePermissionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemovePermissionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemovePermissionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemovePermission.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestEventPatternMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestEventPatternInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestEventPatternMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestEventPattern.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
