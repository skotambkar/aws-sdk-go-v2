// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/swf/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CountClosedWorkflowExecutionsMarshaler defines marshaler for CountClosedWorkflowExecutions operation
type CountClosedWorkflowExecutionsMarshaler struct {
	Input *types.CountClosedWorkflowExecutionsInput
}

// CountOpenWorkflowExecutionsMarshaler defines marshaler for CountOpenWorkflowExecutions operation
type CountOpenWorkflowExecutionsMarshaler struct {
	Input *types.CountOpenWorkflowExecutionsInput
}

// CountPendingActivityTasksMarshaler defines marshaler for CountPendingActivityTasks operation
type CountPendingActivityTasksMarshaler struct {
	Input *types.CountPendingActivityTasksInput
}

// CountPendingDecisionTasksMarshaler defines marshaler for CountPendingDecisionTasks operation
type CountPendingDecisionTasksMarshaler struct {
	Input *types.CountPendingDecisionTasksInput
}

// DeprecateActivityTypeMarshaler defines marshaler for DeprecateActivityType operation
type DeprecateActivityTypeMarshaler struct {
	Input *types.DeprecateActivityTypeInput
}

// DeprecateDomainMarshaler defines marshaler for DeprecateDomain operation
type DeprecateDomainMarshaler struct {
	Input *types.DeprecateDomainInput
}

// DeprecateWorkflowTypeMarshaler defines marshaler for DeprecateWorkflowType operation
type DeprecateWorkflowTypeMarshaler struct {
	Input *types.DeprecateWorkflowTypeInput
}

// DescribeActivityTypeMarshaler defines marshaler for DescribeActivityType operation
type DescribeActivityTypeMarshaler struct {
	Input *types.DescribeActivityTypeInput
}

// DescribeDomainMarshaler defines marshaler for DescribeDomain operation
type DescribeDomainMarshaler struct {
	Input *types.DescribeDomainInput
}

// DescribeWorkflowExecutionMarshaler defines marshaler for DescribeWorkflowExecution operation
type DescribeWorkflowExecutionMarshaler struct {
	Input *types.DescribeWorkflowExecutionInput
}

// DescribeWorkflowTypeMarshaler defines marshaler for DescribeWorkflowType operation
type DescribeWorkflowTypeMarshaler struct {
	Input *types.DescribeWorkflowTypeInput
}

// GetWorkflowExecutionHistoryMarshaler defines marshaler for GetWorkflowExecutionHistory operation
type GetWorkflowExecutionHistoryMarshaler struct {
	Input *types.GetWorkflowExecutionHistoryInput
}

// ListActivityTypesMarshaler defines marshaler for ListActivityTypes operation
type ListActivityTypesMarshaler struct {
	Input *types.ListActivityTypesInput
}

// ListClosedWorkflowExecutionsMarshaler defines marshaler for ListClosedWorkflowExecutions operation
type ListClosedWorkflowExecutionsMarshaler struct {
	Input *types.ListClosedWorkflowExecutionsInput
}

// ListDomainsMarshaler defines marshaler for ListDomains operation
type ListDomainsMarshaler struct {
	Input *types.ListDomainsInput
}

// ListOpenWorkflowExecutionsMarshaler defines marshaler for ListOpenWorkflowExecutions operation
type ListOpenWorkflowExecutionsMarshaler struct {
	Input *types.ListOpenWorkflowExecutionsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListWorkflowTypesMarshaler defines marshaler for ListWorkflowTypes operation
type ListWorkflowTypesMarshaler struct {
	Input *types.ListWorkflowTypesInput
}

// PollForActivityTaskMarshaler defines marshaler for PollForActivityTask operation
type PollForActivityTaskMarshaler struct {
	Input *types.PollForActivityTaskInput
}

// PollForDecisionTaskMarshaler defines marshaler for PollForDecisionTask operation
type PollForDecisionTaskMarshaler struct {
	Input *types.PollForDecisionTaskInput
}

// RecordActivityTaskHeartbeatMarshaler defines marshaler for RecordActivityTaskHeartbeat operation
type RecordActivityTaskHeartbeatMarshaler struct {
	Input *types.RecordActivityTaskHeartbeatInput
}

// RegisterActivityTypeMarshaler defines marshaler for RegisterActivityType operation
type RegisterActivityTypeMarshaler struct {
	Input *types.RegisterActivityTypeInput
}

// RegisterDomainMarshaler defines marshaler for RegisterDomain operation
type RegisterDomainMarshaler struct {
	Input *types.RegisterDomainInput
}

// RegisterWorkflowTypeMarshaler defines marshaler for RegisterWorkflowType operation
type RegisterWorkflowTypeMarshaler struct {
	Input *types.RegisterWorkflowTypeInput
}

// RequestCancelWorkflowExecutionMarshaler defines marshaler for RequestCancelWorkflowExecution operation
type RequestCancelWorkflowExecutionMarshaler struct {
	Input *types.RequestCancelWorkflowExecutionInput
}

// RespondActivityTaskCanceledMarshaler defines marshaler for RespondActivityTaskCanceled operation
type RespondActivityTaskCanceledMarshaler struct {
	Input *types.RespondActivityTaskCanceledInput
}

// RespondActivityTaskCompletedMarshaler defines marshaler for RespondActivityTaskCompleted operation
type RespondActivityTaskCompletedMarshaler struct {
	Input *types.RespondActivityTaskCompletedInput
}

// RespondActivityTaskFailedMarshaler defines marshaler for RespondActivityTaskFailed operation
type RespondActivityTaskFailedMarshaler struct {
	Input *types.RespondActivityTaskFailedInput
}

// RespondDecisionTaskCompletedMarshaler defines marshaler for RespondDecisionTaskCompleted operation
type RespondDecisionTaskCompletedMarshaler struct {
	Input *types.RespondDecisionTaskCompletedInput
}

// SignalWorkflowExecutionMarshaler defines marshaler for SignalWorkflowExecution operation
type SignalWorkflowExecutionMarshaler struct {
	Input *types.SignalWorkflowExecutionInput
}

// StartWorkflowExecutionMarshaler defines marshaler for StartWorkflowExecution operation
type StartWorkflowExecutionMarshaler struct {
	Input *types.StartWorkflowExecutionInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// TerminateWorkflowExecutionMarshaler defines marshaler for TerminateWorkflowExecution operation
type TerminateWorkflowExecutionMarshaler struct {
	Input *types.TerminateWorkflowExecutionInput
}

// UndeprecateActivityTypeMarshaler defines marshaler for UndeprecateActivityType operation
type UndeprecateActivityTypeMarshaler struct {
	Input *types.UndeprecateActivityTypeInput
}

// UndeprecateDomainMarshaler defines marshaler for UndeprecateDomain operation
type UndeprecateDomainMarshaler struct {
	Input *types.UndeprecateDomainInput
}

// UndeprecateWorkflowTypeMarshaler defines marshaler for UndeprecateWorkflowType operation
type UndeprecateWorkflowTypeMarshaler struct {
	Input *types.UndeprecateWorkflowTypeInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

func MarshalCountClosedWorkflowExecutionsInputShapeAWSJSON(v *types.CountClosedWorkflowExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCountOpenWorkflowExecutionsInputShapeAWSJSON(v *types.CountOpenWorkflowExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCountPendingActivityTasksInputShapeAWSJSON(v *types.CountPendingActivityTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCountPendingDecisionTasksInputShapeAWSJSON(v *types.CountPendingDecisionTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeprecateActivityTypeInputShapeAWSJSON(v *types.DeprecateActivityTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeprecateDomainInputShapeAWSJSON(v *types.DeprecateDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeprecateWorkflowTypeInputShapeAWSJSON(v *types.DeprecateWorkflowTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeActivityTypeInputShapeAWSJSON(v *types.DescribeActivityTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDomainInputShapeAWSJSON(v *types.DescribeDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeWorkflowExecutionInputShapeAWSJSON(v *types.DescribeWorkflowExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeWorkflowTypeInputShapeAWSJSON(v *types.DescribeWorkflowTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetWorkflowExecutionHistoryInputShapeAWSJSON(v *types.GetWorkflowExecutionHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListActivityTypesInputShapeAWSJSON(v *types.ListActivityTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListClosedWorkflowExecutionsInputShapeAWSJSON(v *types.ListClosedWorkflowExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDomainsInputShapeAWSJSON(v *types.ListDomainsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOpenWorkflowExecutionsInputShapeAWSJSON(v *types.ListOpenWorkflowExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListWorkflowTypesInputShapeAWSJSON(v *types.ListWorkflowTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPollForActivityTaskInputShapeAWSJSON(v *types.PollForActivityTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPollForDecisionTaskInputShapeAWSJSON(v *types.PollForDecisionTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRecordActivityTaskHeartbeatInputShapeAWSJSON(v *types.RecordActivityTaskHeartbeatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterActivityTypeInputShapeAWSJSON(v *types.RegisterActivityTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterDomainInputShapeAWSJSON(v *types.RegisterDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterWorkflowTypeInputShapeAWSJSON(v *types.RegisterWorkflowTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRequestCancelWorkflowExecutionInputShapeAWSJSON(v *types.RequestCancelWorkflowExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRespondActivityTaskCanceledInputShapeAWSJSON(v *types.RespondActivityTaskCanceledInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRespondActivityTaskCompletedInputShapeAWSJSON(v *types.RespondActivityTaskCompletedInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRespondActivityTaskFailedInputShapeAWSJSON(v *types.RespondActivityTaskFailedInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRespondDecisionTaskCompletedInputShapeAWSJSON(v *types.RespondDecisionTaskCompletedInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSignalWorkflowExecutionInputShapeAWSJSON(v *types.SignalWorkflowExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartWorkflowExecutionInputShapeAWSJSON(v *types.StartWorkflowExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTerminateWorkflowExecutionInputShapeAWSJSON(v *types.TerminateWorkflowExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUndeprecateActivityTypeInputShapeAWSJSON(v *types.UndeprecateActivityTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUndeprecateDomainInputShapeAWSJSON(v *types.UndeprecateDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUndeprecateWorkflowTypeInputShapeAWSJSON(v *types.UndeprecateWorkflowTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CountClosedWorkflowExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCountClosedWorkflowExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CountClosedWorkflowExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CountClosedWorkflowExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CountOpenWorkflowExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCountOpenWorkflowExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CountOpenWorkflowExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CountOpenWorkflowExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CountPendingActivityTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCountPendingActivityTasksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CountPendingActivityTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CountPendingActivityTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CountPendingDecisionTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCountPendingDecisionTasksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CountPendingDecisionTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CountPendingDecisionTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeprecateActivityTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeprecateActivityTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeprecateActivityTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeprecateActivityType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeprecateDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeprecateDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeprecateDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeprecateDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeprecateWorkflowTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeprecateWorkflowTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeprecateWorkflowTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeprecateWorkflowType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeActivityTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeActivityTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeActivityTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeActivityType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeWorkflowExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeWorkflowExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeWorkflowExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeWorkflowExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeWorkflowTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeWorkflowTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeWorkflowTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeWorkflowType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetWorkflowExecutionHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetWorkflowExecutionHistoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetWorkflowExecutionHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetWorkflowExecutionHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListActivityTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListActivityTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListActivityTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListActivityTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListClosedWorkflowExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListClosedWorkflowExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListClosedWorkflowExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListClosedWorkflowExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDomainsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDomainsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDomainsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDomains.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOpenWorkflowExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOpenWorkflowExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOpenWorkflowExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOpenWorkflowExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListWorkflowTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListWorkflowTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListWorkflowTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListWorkflowTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PollForActivityTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPollForActivityTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PollForActivityTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PollForActivityTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PollForDecisionTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPollForDecisionTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PollForDecisionTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PollForDecisionTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RecordActivityTaskHeartbeatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRecordActivityTaskHeartbeatInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RecordActivityTaskHeartbeatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RecordActivityTaskHeartbeat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterActivityTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterActivityTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterActivityTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterActivityType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterWorkflowTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterWorkflowTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterWorkflowTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterWorkflowType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RequestCancelWorkflowExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRequestCancelWorkflowExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RequestCancelWorkflowExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RequestCancelWorkflowExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RespondActivityTaskCanceledMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRespondActivityTaskCanceledInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RespondActivityTaskCanceledMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RespondActivityTaskCanceled.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RespondActivityTaskCompletedMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRespondActivityTaskCompletedInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RespondActivityTaskCompletedMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RespondActivityTaskCompleted.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RespondActivityTaskFailedMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRespondActivityTaskFailedInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RespondActivityTaskFailedMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RespondActivityTaskFailed.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RespondDecisionTaskCompletedMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRespondDecisionTaskCompletedInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RespondDecisionTaskCompletedMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RespondDecisionTaskCompleted.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SignalWorkflowExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSignalWorkflowExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SignalWorkflowExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SignalWorkflowExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartWorkflowExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartWorkflowExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartWorkflowExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartWorkflowExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TerminateWorkflowExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTerminateWorkflowExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TerminateWorkflowExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TerminateWorkflowExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UndeprecateActivityTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUndeprecateActivityTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UndeprecateActivityTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UndeprecateActivityType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UndeprecateDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUndeprecateDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UndeprecateDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UndeprecateDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UndeprecateWorkflowTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUndeprecateWorkflowTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UndeprecateWorkflowTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UndeprecateWorkflowType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
