// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/organizations/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptHandshakeMarshaler defines marshaler for AcceptHandshake operation
type AcceptHandshakeMarshaler struct {
	Input *types.AcceptHandshakeInput
}

// AttachPolicyMarshaler defines marshaler for AttachPolicy operation
type AttachPolicyMarshaler struct {
	Input *types.AttachPolicyInput
}

// CancelHandshakeMarshaler defines marshaler for CancelHandshake operation
type CancelHandshakeMarshaler struct {
	Input *types.CancelHandshakeInput
}

// CreateAccountMarshaler defines marshaler for CreateAccount operation
type CreateAccountMarshaler struct {
	Input *types.CreateAccountInput
}

// CreateGovCloudAccountMarshaler defines marshaler for CreateGovCloudAccount operation
type CreateGovCloudAccountMarshaler struct {
	Input *types.CreateGovCloudAccountInput
}

// CreateOrganizationMarshaler defines marshaler for CreateOrganization operation
type CreateOrganizationMarshaler struct {
	Input *types.CreateOrganizationInput
}

// CreateOrganizationalUnitMarshaler defines marshaler for CreateOrganizationalUnit operation
type CreateOrganizationalUnitMarshaler struct {
	Input *types.CreateOrganizationalUnitInput
}

// CreatePolicyMarshaler defines marshaler for CreatePolicy operation
type CreatePolicyMarshaler struct {
	Input *types.CreatePolicyInput
}

// DeclineHandshakeMarshaler defines marshaler for DeclineHandshake operation
type DeclineHandshakeMarshaler struct {
	Input *types.DeclineHandshakeInput
}

// DeleteOrganizationMarshaler defines marshaler for DeleteOrganization operation
type DeleteOrganizationMarshaler struct {
	Input *types.DeleteOrganizationInput
}

// DeleteOrganizationalUnitMarshaler defines marshaler for DeleteOrganizationalUnit operation
type DeleteOrganizationalUnitMarshaler struct {
	Input *types.DeleteOrganizationalUnitInput
}

// DeletePolicyMarshaler defines marshaler for DeletePolicy operation
type DeletePolicyMarshaler struct {
	Input *types.DeletePolicyInput
}

// DescribeAccountMarshaler defines marshaler for DescribeAccount operation
type DescribeAccountMarshaler struct {
	Input *types.DescribeAccountInput
}

// DescribeCreateAccountStatusMarshaler defines marshaler for DescribeCreateAccountStatus operation
type DescribeCreateAccountStatusMarshaler struct {
	Input *types.DescribeCreateAccountStatusInput
}

// DescribeHandshakeMarshaler defines marshaler for DescribeHandshake operation
type DescribeHandshakeMarshaler struct {
	Input *types.DescribeHandshakeInput
}

// DescribeOrganizationMarshaler defines marshaler for DescribeOrganization operation
type DescribeOrganizationMarshaler struct {
	Input *types.DescribeOrganizationInput
}

// DescribeOrganizationalUnitMarshaler defines marshaler for DescribeOrganizationalUnit operation
type DescribeOrganizationalUnitMarshaler struct {
	Input *types.DescribeOrganizationalUnitInput
}

// DescribePolicyMarshaler defines marshaler for DescribePolicy operation
type DescribePolicyMarshaler struct {
	Input *types.DescribePolicyInput
}

// DetachPolicyMarshaler defines marshaler for DetachPolicy operation
type DetachPolicyMarshaler struct {
	Input *types.DetachPolicyInput
}

// DisableAWSServiceAccessMarshaler defines marshaler for DisableAWSServiceAccess operation
type DisableAWSServiceAccessMarshaler struct {
	Input *types.DisableAWSServiceAccessInput
}

// DisablePolicyTypeMarshaler defines marshaler for DisablePolicyType operation
type DisablePolicyTypeMarshaler struct {
	Input *types.DisablePolicyTypeInput
}

// EnableAWSServiceAccessMarshaler defines marshaler for EnableAWSServiceAccess operation
type EnableAWSServiceAccessMarshaler struct {
	Input *types.EnableAWSServiceAccessInput
}

// EnableAllFeaturesMarshaler defines marshaler for EnableAllFeatures operation
type EnableAllFeaturesMarshaler struct {
	Input *types.EnableAllFeaturesInput
}

// EnablePolicyTypeMarshaler defines marshaler for EnablePolicyType operation
type EnablePolicyTypeMarshaler struct {
	Input *types.EnablePolicyTypeInput
}

// InviteAccountToOrganizationMarshaler defines marshaler for InviteAccountToOrganization operation
type InviteAccountToOrganizationMarshaler struct {
	Input *types.InviteAccountToOrganizationInput
}

// LeaveOrganizationMarshaler defines marshaler for LeaveOrganization operation
type LeaveOrganizationMarshaler struct {
	Input *types.LeaveOrganizationInput
}

// ListAWSServiceAccessForOrganizationMarshaler defines marshaler for ListAWSServiceAccessForOrganization operation
type ListAWSServiceAccessForOrganizationMarshaler struct {
	Input *types.ListAWSServiceAccessForOrganizationInput
}

// ListAccountsMarshaler defines marshaler for ListAccounts operation
type ListAccountsMarshaler struct {
	Input *types.ListAccountsInput
}

// ListAccountsForParentMarshaler defines marshaler for ListAccountsForParent operation
type ListAccountsForParentMarshaler struct {
	Input *types.ListAccountsForParentInput
}

// ListChildrenMarshaler defines marshaler for ListChildren operation
type ListChildrenMarshaler struct {
	Input *types.ListChildrenInput
}

// ListCreateAccountStatusMarshaler defines marshaler for ListCreateAccountStatus operation
type ListCreateAccountStatusMarshaler struct {
	Input *types.ListCreateAccountStatusInput
}

// ListHandshakesForAccountMarshaler defines marshaler for ListHandshakesForAccount operation
type ListHandshakesForAccountMarshaler struct {
	Input *types.ListHandshakesForAccountInput
}

// ListHandshakesForOrganizationMarshaler defines marshaler for ListHandshakesForOrganization operation
type ListHandshakesForOrganizationMarshaler struct {
	Input *types.ListHandshakesForOrganizationInput
}

// ListOrganizationalUnitsForParentMarshaler defines marshaler for ListOrganizationalUnitsForParent operation
type ListOrganizationalUnitsForParentMarshaler struct {
	Input *types.ListOrganizationalUnitsForParentInput
}

// ListParentsMarshaler defines marshaler for ListParents operation
type ListParentsMarshaler struct {
	Input *types.ListParentsInput
}

// ListPoliciesMarshaler defines marshaler for ListPolicies operation
type ListPoliciesMarshaler struct {
	Input *types.ListPoliciesInput
}

// ListPoliciesForTargetMarshaler defines marshaler for ListPoliciesForTarget operation
type ListPoliciesForTargetMarshaler struct {
	Input *types.ListPoliciesForTargetInput
}

// ListRootsMarshaler defines marshaler for ListRoots operation
type ListRootsMarshaler struct {
	Input *types.ListRootsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTargetsForPolicyMarshaler defines marshaler for ListTargetsForPolicy operation
type ListTargetsForPolicyMarshaler struct {
	Input *types.ListTargetsForPolicyInput
}

// MoveAccountMarshaler defines marshaler for MoveAccount operation
type MoveAccountMarshaler struct {
	Input *types.MoveAccountInput
}

// RemoveAccountFromOrganizationMarshaler defines marshaler for RemoveAccountFromOrganization operation
type RemoveAccountFromOrganizationMarshaler struct {
	Input *types.RemoveAccountFromOrganizationInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateOrganizationalUnitMarshaler defines marshaler for UpdateOrganizationalUnit operation
type UpdateOrganizationalUnitMarshaler struct {
	Input *types.UpdateOrganizationalUnitInput
}

// UpdatePolicyMarshaler defines marshaler for UpdatePolicy operation
type UpdatePolicyMarshaler struct {
	Input *types.UpdatePolicyInput
}

func MarshalAcceptHandshakeInputShapeAWSJSON(v *types.AcceptHandshakeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAttachPolicyInputShapeAWSJSON(v *types.AttachPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCancelHandshakeInputShapeAWSJSON(v *types.CancelHandshakeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateAccountInputShapeAWSJSON(v *types.CreateAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateGovCloudAccountInputShapeAWSJSON(v *types.CreateGovCloudAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateOrganizationInputShapeAWSJSON(v *types.CreateOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateOrganizationalUnitInputShapeAWSJSON(v *types.CreateOrganizationalUnitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePolicyInputShapeAWSJSON(v *types.CreatePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeclineHandshakeInputShapeAWSJSON(v *types.DeclineHandshakeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteOrganizationInputShapeAWSJSON(v *types.DeleteOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteOrganizationalUnitInputShapeAWSJSON(v *types.DeleteOrganizationalUnitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePolicyInputShapeAWSJSON(v *types.DeletePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAccountInputShapeAWSJSON(v *types.DescribeAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCreateAccountStatusInputShapeAWSJSON(v *types.DescribeCreateAccountStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeHandshakeInputShapeAWSJSON(v *types.DescribeHandshakeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeOrganizationInputShapeAWSJSON(v *types.DescribeOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeOrganizationalUnitInputShapeAWSJSON(v *types.DescribeOrganizationalUnitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePolicyInputShapeAWSJSON(v *types.DescribePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetachPolicyInputShapeAWSJSON(v *types.DetachPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableAWSServiceAccessInputShapeAWSJSON(v *types.DisableAWSServiceAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisablePolicyTypeInputShapeAWSJSON(v *types.DisablePolicyTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableAWSServiceAccessInputShapeAWSJSON(v *types.EnableAWSServiceAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableAllFeaturesInputShapeAWSJSON(v *types.EnableAllFeaturesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnablePolicyTypeInputShapeAWSJSON(v *types.EnablePolicyTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalInviteAccountToOrganizationInputShapeAWSJSON(v *types.InviteAccountToOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalLeaveOrganizationInputShapeAWSJSON(v *types.LeaveOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAWSServiceAccessForOrganizationInputShapeAWSJSON(v *types.ListAWSServiceAccessForOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAccountsInputShapeAWSJSON(v *types.ListAccountsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAccountsForParentInputShapeAWSJSON(v *types.ListAccountsForParentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListChildrenInputShapeAWSJSON(v *types.ListChildrenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListCreateAccountStatusInputShapeAWSJSON(v *types.ListCreateAccountStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListHandshakesForAccountInputShapeAWSJSON(v *types.ListHandshakesForAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListHandshakesForOrganizationInputShapeAWSJSON(v *types.ListHandshakesForOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOrganizationalUnitsForParentInputShapeAWSJSON(v *types.ListOrganizationalUnitsForParentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListParentsInputShapeAWSJSON(v *types.ListParentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPoliciesInputShapeAWSJSON(v *types.ListPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPoliciesForTargetInputShapeAWSJSON(v *types.ListPoliciesForTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRootsInputShapeAWSJSON(v *types.ListRootsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTargetsForPolicyInputShapeAWSJSON(v *types.ListTargetsForPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMoveAccountInputShapeAWSJSON(v *types.MoveAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveAccountFromOrganizationInputShapeAWSJSON(v *types.RemoveAccountFromOrganizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateOrganizationalUnitInputShapeAWSJSON(v *types.UpdateOrganizationalUnitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePolicyInputShapeAWSJSON(v *types.UpdatePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AcceptHandshakeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptHandshakeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptHandshakeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptHandshake.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelHandshakeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelHandshakeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelHandshakeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelHandshake.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGovCloudAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGovCloudAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGovCloudAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGovCloudAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateOrganizationalUnitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateOrganizationalUnitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateOrganizationalUnitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateOrganizationalUnit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeclineHandshakeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeclineHandshakeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeclineHandshakeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeclineHandshake.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteOrganizationalUnitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteOrganizationalUnitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteOrganizationalUnitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteOrganizationalUnit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCreateAccountStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCreateAccountStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCreateAccountStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCreateAccountStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHandshakeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHandshakeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHandshakeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHandshake.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOrganizationalUnitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOrganizationalUnitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOrganizationalUnitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOrganizationalUnit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableAWSServiceAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableAWSServiceAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableAWSServiceAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableAWSServiceAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisablePolicyTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisablePolicyTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisablePolicyTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisablePolicyType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableAWSServiceAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableAWSServiceAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableAWSServiceAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableAWSServiceAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableAllFeaturesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableAllFeaturesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableAllFeaturesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableAllFeatures.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnablePolicyTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnablePolicyTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnablePolicyTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnablePolicyType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InviteAccountToOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInviteAccountToOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InviteAccountToOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InviteAccountToOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m LeaveOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalLeaveOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m LeaveOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "LeaveOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAWSServiceAccessForOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAWSServiceAccessForOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAWSServiceAccessForOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAWSServiceAccessForOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccountsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccountsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccountsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccounts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccountsForParentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccountsForParentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccountsForParentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccountsForParent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListChildrenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListChildrenInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListChildrenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListChildren.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCreateAccountStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCreateAccountStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCreateAccountStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCreateAccountStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListHandshakesForAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListHandshakesForAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListHandshakesForAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListHandshakesForAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListHandshakesForOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListHandshakesForOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListHandshakesForOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListHandshakesForOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOrganizationalUnitsForParentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOrganizationalUnitsForParentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOrganizationalUnitsForParentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOrganizationalUnitsForParent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListParentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListParentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListParentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListParents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPoliciesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPoliciesForTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPoliciesForTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPoliciesForTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPoliciesForTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRootsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRootsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRootsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRoots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTargetsForPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTargetsForPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTargetsForPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTargetsForPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MoveAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMoveAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MoveAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MoveAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveAccountFromOrganizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveAccountFromOrganizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveAccountFromOrganizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveAccountFromOrganization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateOrganizationalUnitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateOrganizationalUnitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateOrganizationalUnitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateOrganizationalUnit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
