// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/medialive/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchUpdateScheduleMarshaler defines marshaler for BatchUpdateSchedule operation
type BatchUpdateScheduleMarshaler struct {
	Input *types.BatchUpdateScheduleInput
}

// CreateChannelMarshaler defines marshaler for CreateChannel operation
type CreateChannelMarshaler struct {
	Input *types.CreateChannelInput
}

// CreateInputMarshaler defines marshaler for CreateInput operation
type CreateInputMarshaler struct {
	Input *types.CreateInputInput
}

// CreateInputSecurityGroupMarshaler defines marshaler for CreateInputSecurityGroup operation
type CreateInputSecurityGroupMarshaler struct {
	Input *types.CreateInputSecurityGroupInput
}

// CreateTagsMarshaler defines marshaler for CreateTags operation
type CreateTagsMarshaler struct {
	Input *types.CreateTagsInput
}

// DeleteChannelMarshaler defines marshaler for DeleteChannel operation
type DeleteChannelMarshaler struct {
	Input *types.DeleteChannelInput
}

// DeleteInputMarshaler defines marshaler for DeleteInput operation
type DeleteInputMarshaler struct {
	Input *types.DeleteInputInput
}

// DeleteInputSecurityGroupMarshaler defines marshaler for DeleteInputSecurityGroup operation
type DeleteInputSecurityGroupMarshaler struct {
	Input *types.DeleteInputSecurityGroupInput
}

// DeleteReservationMarshaler defines marshaler for DeleteReservation operation
type DeleteReservationMarshaler struct {
	Input *types.DeleteReservationInput
}

// DeleteScheduleMarshaler defines marshaler for DeleteSchedule operation
type DeleteScheduleMarshaler struct {
	Input *types.DeleteScheduleInput
}

// DeleteTagsMarshaler defines marshaler for DeleteTags operation
type DeleteTagsMarshaler struct {
	Input *types.DeleteTagsInput
}

// DescribeChannelMarshaler defines marshaler for DescribeChannel operation
type DescribeChannelMarshaler struct {
	Input *types.DescribeChannelInput
}

// DescribeInputMarshaler defines marshaler for DescribeInput operation
type DescribeInputMarshaler struct {
	Input *types.DescribeInputInput
}

// DescribeInputSecurityGroupMarshaler defines marshaler for DescribeInputSecurityGroup operation
type DescribeInputSecurityGroupMarshaler struct {
	Input *types.DescribeInputSecurityGroupInput
}

// DescribeOfferingMarshaler defines marshaler for DescribeOffering operation
type DescribeOfferingMarshaler struct {
	Input *types.DescribeOfferingInput
}

// DescribeReservationMarshaler defines marshaler for DescribeReservation operation
type DescribeReservationMarshaler struct {
	Input *types.DescribeReservationInput
}

// DescribeScheduleMarshaler defines marshaler for DescribeSchedule operation
type DescribeScheduleMarshaler struct {
	Input *types.DescribeScheduleInput
}

// ListChannelsMarshaler defines marshaler for ListChannels operation
type ListChannelsMarshaler struct {
	Input *types.ListChannelsInput
}

// ListInputSecurityGroupsMarshaler defines marshaler for ListInputSecurityGroups operation
type ListInputSecurityGroupsMarshaler struct {
	Input *types.ListInputSecurityGroupsInput
}

// ListInputsMarshaler defines marshaler for ListInputs operation
type ListInputsMarshaler struct {
	Input *types.ListInputsInput
}

// ListOfferingsMarshaler defines marshaler for ListOfferings operation
type ListOfferingsMarshaler struct {
	Input *types.ListOfferingsInput
}

// ListReservationsMarshaler defines marshaler for ListReservations operation
type ListReservationsMarshaler struct {
	Input *types.ListReservationsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PurchaseOfferingMarshaler defines marshaler for PurchaseOffering operation
type PurchaseOfferingMarshaler struct {
	Input *types.PurchaseOfferingInput
}

// StartChannelMarshaler defines marshaler for StartChannel operation
type StartChannelMarshaler struct {
	Input *types.StartChannelInput
}

// StopChannelMarshaler defines marshaler for StopChannel operation
type StopChannelMarshaler struct {
	Input *types.StopChannelInput
}

// UpdateChannelMarshaler defines marshaler for UpdateChannel operation
type UpdateChannelMarshaler struct {
	Input *types.UpdateChannelInput
}

// UpdateChannelClassMarshaler defines marshaler for UpdateChannelClass operation
type UpdateChannelClassMarshaler struct {
	Input *types.UpdateChannelClassInput
}

// UpdateInputMarshaler defines marshaler for UpdateInput operation
type UpdateInputMarshaler struct {
	Input *types.UpdateInputInput
}

// UpdateInputSecurityGroupMarshaler defines marshaler for UpdateInputSecurityGroup operation
type UpdateInputSecurityGroupMarshaler struct {
	Input *types.UpdateInputSecurityGroupInput
}

// UpdateReservationMarshaler defines marshaler for UpdateReservation operation
type UpdateReservationMarshaler struct {
	Input *types.UpdateReservationInput
}

func MarshalBatchUpdateScheduleInputShapeAWSREST(v *types.BatchUpdateScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchUpdateScheduleInputShapeAWSJSON(v *types.BatchUpdateScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateChannelInputShapeAWSREST(v *types.CreateChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateChannelInputShapeAWSJSON(v *types.CreateChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateInputInputShapeAWSREST(v *types.CreateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateInputInputShapeAWSJSON(v *types.CreateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateInputSecurityGroupInputShapeAWSREST(v *types.CreateInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateInputSecurityGroupInputShapeAWSJSON(v *types.CreateInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateTagsInputShapeAWSREST(v *types.CreateTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateTagsInputShapeAWSJSON(v *types.CreateTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteChannelInputShapeAWSREST(v *types.DeleteChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteChannelInputShapeAWSJSON(v *types.DeleteChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteInputInputShapeAWSREST(v *types.DeleteInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteInputInputShapeAWSJSON(v *types.DeleteInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteInputSecurityGroupInputShapeAWSREST(v *types.DeleteInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteInputSecurityGroupInputShapeAWSJSON(v *types.DeleteInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteReservationInputShapeAWSREST(v *types.DeleteReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteReservationInputShapeAWSJSON(v *types.DeleteReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteScheduleInputShapeAWSREST(v *types.DeleteScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteScheduleInputShapeAWSJSON(v *types.DeleteScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteTagsInputShapeAWSREST(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteTagsInputShapeAWSJSON(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeChannelInputShapeAWSREST(v *types.DescribeChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeChannelInputShapeAWSJSON(v *types.DescribeChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeInputInputShapeAWSREST(v *types.DescribeInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeInputInputShapeAWSJSON(v *types.DescribeInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeInputSecurityGroupInputShapeAWSREST(v *types.DescribeInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeInputSecurityGroupInputShapeAWSJSON(v *types.DescribeInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeOfferingInputShapeAWSREST(v *types.DescribeOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeOfferingInputShapeAWSJSON(v *types.DescribeOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeReservationInputShapeAWSREST(v *types.DescribeReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeReservationInputShapeAWSJSON(v *types.DescribeReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeScheduleInputShapeAWSREST(v *types.DescribeScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeScheduleInputShapeAWSJSON(v *types.DescribeScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListChannelsInputShapeAWSREST(v *types.ListChannelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListChannelsInputShapeAWSJSON(v *types.ListChannelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListInputSecurityGroupsInputShapeAWSREST(v *types.ListInputSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListInputSecurityGroupsInputShapeAWSJSON(v *types.ListInputSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListInputsInputShapeAWSREST(v *types.ListInputsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListInputsInputShapeAWSJSON(v *types.ListInputsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListOfferingsInputShapeAWSREST(v *types.ListOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListOfferingsInputShapeAWSJSON(v *types.ListOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListReservationsInputShapeAWSREST(v *types.ListReservationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListReservationsInputShapeAWSJSON(v *types.ListReservationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPurchaseOfferingInputShapeAWSREST(v *types.PurchaseOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPurchaseOfferingInputShapeAWSJSON(v *types.PurchaseOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartChannelInputShapeAWSREST(v *types.StartChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartChannelInputShapeAWSJSON(v *types.StartChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStopChannelInputShapeAWSREST(v *types.StopChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStopChannelInputShapeAWSJSON(v *types.StopChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateChannelInputShapeAWSREST(v *types.UpdateChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateChannelInputShapeAWSJSON(v *types.UpdateChannelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateChannelClassInputShapeAWSREST(v *types.UpdateChannelClassInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateChannelClassInputShapeAWSJSON(v *types.UpdateChannelClassInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateInputInputShapeAWSREST(v *types.UpdateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateInputInputShapeAWSJSON(v *types.UpdateInputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateInputSecurityGroupInputShapeAWSREST(v *types.UpdateInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateInputSecurityGroupInputShapeAWSJSON(v *types.UpdateInputSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateReservationInputShapeAWSREST(v *types.UpdateReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateReservationInputShapeAWSJSON(v *types.UpdateReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m BatchUpdateScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchUpdateScheduleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchUpdateScheduleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchUpdateScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchUpdateSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInputSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInputSecurityGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateInputSecurityGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInputSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInputSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInputSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInputSecurityGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteInputSecurityGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInputSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInputSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteReservationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteReservationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteScheduleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteScheduleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInputSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInputSecurityGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeInputSecurityGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInputSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInputSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOfferingInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeOfferingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeReservationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeScheduleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeScheduleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListChannelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListChannelsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListChannelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListChannelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListChannels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInputSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInputSecurityGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListInputSecurityGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInputSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInputSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListInputsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListInputsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListInputsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListInputsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListInputs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOfferingsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListOfferingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListReservationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListReservationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListReservationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListReservationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListReservations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseOfferingInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPurchaseOfferingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStopChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateChannelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateChannelInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateChannelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateChannelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateChannel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateChannelClassMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateChannelClassInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateChannelClassInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateChannelClassMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateChannelClass.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateInputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateInputInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateInputInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateInputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateInput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateInputSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateInputSecurityGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateInputSecurityGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateInputSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateInputSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateReservationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateReservationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
