// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/transfer/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateServerMarshaler defines marshaler for CreateServer operation
type CreateServerMarshaler struct {
	Input *types.CreateServerInput
}

// CreateUserMarshaler defines marshaler for CreateUser operation
type CreateUserMarshaler struct {
	Input *types.CreateUserInput
}

// DeleteServerMarshaler defines marshaler for DeleteServer operation
type DeleteServerMarshaler struct {
	Input *types.DeleteServerInput
}

// DeleteSshPublicKeyMarshaler defines marshaler for DeleteSshPublicKey operation
type DeleteSshPublicKeyMarshaler struct {
	Input *types.DeleteSshPublicKeyInput
}

// DeleteUserMarshaler defines marshaler for DeleteUser operation
type DeleteUserMarshaler struct {
	Input *types.DeleteUserInput
}

// DescribeServerMarshaler defines marshaler for DescribeServer operation
type DescribeServerMarshaler struct {
	Input *types.DescribeServerInput
}

// DescribeUserMarshaler defines marshaler for DescribeUser operation
type DescribeUserMarshaler struct {
	Input *types.DescribeUserInput
}

// ImportSshPublicKeyMarshaler defines marshaler for ImportSshPublicKey operation
type ImportSshPublicKeyMarshaler struct {
	Input *types.ImportSshPublicKeyInput
}

// ListServersMarshaler defines marshaler for ListServers operation
type ListServersMarshaler struct {
	Input *types.ListServersInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListUsersMarshaler defines marshaler for ListUsers operation
type ListUsersMarshaler struct {
	Input *types.ListUsersInput
}

// StartServerMarshaler defines marshaler for StartServer operation
type StartServerMarshaler struct {
	Input *types.StartServerInput
}

// StopServerMarshaler defines marshaler for StopServer operation
type StopServerMarshaler struct {
	Input *types.StopServerInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// TestIdentityProviderMarshaler defines marshaler for TestIdentityProvider operation
type TestIdentityProviderMarshaler struct {
	Input *types.TestIdentityProviderInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateServerMarshaler defines marshaler for UpdateServer operation
type UpdateServerMarshaler struct {
	Input *types.UpdateServerInput
}

// UpdateUserMarshaler defines marshaler for UpdateUser operation
type UpdateUserMarshaler struct {
	Input *types.UpdateUserInput
}

func MarshalCreateServerInputShapeAWSJSON(v *types.CreateServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserInputShapeAWSJSON(v *types.CreateUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteServerInputShapeAWSJSON(v *types.DeleteServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSshPublicKeyInputShapeAWSJSON(v *types.DeleteSshPublicKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserInputShapeAWSJSON(v *types.DeleteUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeServerInputShapeAWSJSON(v *types.DescribeServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserInputShapeAWSJSON(v *types.DescribeUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalImportSshPublicKeyInputShapeAWSJSON(v *types.ImportSshPublicKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListServersInputShapeAWSJSON(v *types.ListServersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUsersInputShapeAWSJSON(v *types.ListUsersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartServerInputShapeAWSJSON(v *types.StartServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopServerInputShapeAWSJSON(v *types.StopServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTestIdentityProviderInputShapeAWSJSON(v *types.TestIdentityProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateServerInputShapeAWSJSON(v *types.UpdateServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUserInputShapeAWSJSON(v *types.UpdateUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSshPublicKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSshPublicKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSshPublicKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSshPublicKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportSshPublicKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportSshPublicKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportSshPublicKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportSshPublicKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUsersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUsersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUsersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUsers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestIdentityProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestIdentityProviderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestIdentityProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestIdentityProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
