// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codestar/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssociateTeamMemberMarshaler defines marshaler for AssociateTeamMember operation
type AssociateTeamMemberMarshaler struct {
	Input *types.AssociateTeamMemberInput
}

// CreateProjectMarshaler defines marshaler for CreateProject operation
type CreateProjectMarshaler struct {
	Input *types.CreateProjectInput
}

// CreateUserProfileMarshaler defines marshaler for CreateUserProfile operation
type CreateUserProfileMarshaler struct {
	Input *types.CreateUserProfileInput
}

// DeleteProjectMarshaler defines marshaler for DeleteProject operation
type DeleteProjectMarshaler struct {
	Input *types.DeleteProjectInput
}

// DeleteUserProfileMarshaler defines marshaler for DeleteUserProfile operation
type DeleteUserProfileMarshaler struct {
	Input *types.DeleteUserProfileInput
}

// DescribeProjectMarshaler defines marshaler for DescribeProject operation
type DescribeProjectMarshaler struct {
	Input *types.DescribeProjectInput
}

// DescribeUserProfileMarshaler defines marshaler for DescribeUserProfile operation
type DescribeUserProfileMarshaler struct {
	Input *types.DescribeUserProfileInput
}

// DisassociateTeamMemberMarshaler defines marshaler for DisassociateTeamMember operation
type DisassociateTeamMemberMarshaler struct {
	Input *types.DisassociateTeamMemberInput
}

// ListProjectsMarshaler defines marshaler for ListProjects operation
type ListProjectsMarshaler struct {
	Input *types.ListProjectsInput
}

// ListResourcesMarshaler defines marshaler for ListResources operation
type ListResourcesMarshaler struct {
	Input *types.ListResourcesInput
}

// ListTagsForProjectMarshaler defines marshaler for ListTagsForProject operation
type ListTagsForProjectMarshaler struct {
	Input *types.ListTagsForProjectInput
}

// ListTeamMembersMarshaler defines marshaler for ListTeamMembers operation
type ListTeamMembersMarshaler struct {
	Input *types.ListTeamMembersInput
}

// ListUserProfilesMarshaler defines marshaler for ListUserProfiles operation
type ListUserProfilesMarshaler struct {
	Input *types.ListUserProfilesInput
}

// TagProjectMarshaler defines marshaler for TagProject operation
type TagProjectMarshaler struct {
	Input *types.TagProjectInput
}

// UntagProjectMarshaler defines marshaler for UntagProject operation
type UntagProjectMarshaler struct {
	Input *types.UntagProjectInput
}

// UpdateProjectMarshaler defines marshaler for UpdateProject operation
type UpdateProjectMarshaler struct {
	Input *types.UpdateProjectInput
}

// UpdateTeamMemberMarshaler defines marshaler for UpdateTeamMember operation
type UpdateTeamMemberMarshaler struct {
	Input *types.UpdateTeamMemberInput
}

// UpdateUserProfileMarshaler defines marshaler for UpdateUserProfile operation
type UpdateUserProfileMarshaler struct {
	Input *types.UpdateUserProfileInput
}

func MarshalAssociateTeamMemberInputShapeAWSJSON(v *types.AssociateTeamMemberInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateProjectInputShapeAWSJSON(v *types.CreateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserProfileInputShapeAWSJSON(v *types.CreateUserProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteProjectInputShapeAWSJSON(v *types.DeleteProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserProfileInputShapeAWSJSON(v *types.DeleteUserProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProjectInputShapeAWSJSON(v *types.DescribeProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserProfileInputShapeAWSJSON(v *types.DescribeUserProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateTeamMemberInputShapeAWSJSON(v *types.DisassociateTeamMemberInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProjectsInputShapeAWSJSON(v *types.ListProjectsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListResourcesInputShapeAWSJSON(v *types.ListResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForProjectInputShapeAWSJSON(v *types.ListTagsForProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTeamMembersInputShapeAWSJSON(v *types.ListTeamMembersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUserProfilesInputShapeAWSJSON(v *types.ListUserProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagProjectInputShapeAWSJSON(v *types.TagProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagProjectInputShapeAWSJSON(v *types.UntagProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProjectInputShapeAWSJSON(v *types.UpdateProjectInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTeamMemberInputShapeAWSJSON(v *types.UpdateTeamMemberInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUserProfileInputShapeAWSJSON(v *types.UpdateUserProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AssociateTeamMemberMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateTeamMemberInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateTeamMemberMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateTeamMember.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUserProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUserProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateTeamMemberMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateTeamMemberInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateTeamMemberMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateTeamMember.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProjectsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProjectsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProjectsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProjects.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTeamMembersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTeamMembersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTeamMembersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTeamMembers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUserProfilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUserProfilesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUserProfilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUserProfiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProjectMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProjectInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProjectMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProject.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTeamMemberMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTeamMemberInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTeamMemberMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTeamMember.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUserProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
