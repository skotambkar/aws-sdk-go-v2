// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/mturk/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptQualificationRequestMarshaler defines marshaler for AcceptQualificationRequest operation
type AcceptQualificationRequestMarshaler struct {
	Input *types.AcceptQualificationRequestInput
}

// ApproveAssignmentMarshaler defines marshaler for ApproveAssignment operation
type ApproveAssignmentMarshaler struct {
	Input *types.ApproveAssignmentInput
}

// AssociateQualificationWithWorkerMarshaler defines marshaler for AssociateQualificationWithWorker operation
type AssociateQualificationWithWorkerMarshaler struct {
	Input *types.AssociateQualificationWithWorkerInput
}

// CreateAdditionalAssignmentsForHITMarshaler defines marshaler for CreateAdditionalAssignmentsForHIT operation
type CreateAdditionalAssignmentsForHITMarshaler struct {
	Input *types.CreateAdditionalAssignmentsForHITInput
}

// CreateHITMarshaler defines marshaler for CreateHIT operation
type CreateHITMarshaler struct {
	Input *types.CreateHITInput
}

// CreateHITTypeMarshaler defines marshaler for CreateHITType operation
type CreateHITTypeMarshaler struct {
	Input *types.CreateHITTypeInput
}

// CreateHITWithHITTypeMarshaler defines marshaler for CreateHITWithHITType operation
type CreateHITWithHITTypeMarshaler struct {
	Input *types.CreateHITWithHITTypeInput
}

// CreateQualificationTypeMarshaler defines marshaler for CreateQualificationType operation
type CreateQualificationTypeMarshaler struct {
	Input *types.CreateQualificationTypeInput
}

// CreateWorkerBlockMarshaler defines marshaler for CreateWorkerBlock operation
type CreateWorkerBlockMarshaler struct {
	Input *types.CreateWorkerBlockInput
}

// DeleteHITMarshaler defines marshaler for DeleteHIT operation
type DeleteHITMarshaler struct {
	Input *types.DeleteHITInput
}

// DeleteQualificationTypeMarshaler defines marshaler for DeleteQualificationType operation
type DeleteQualificationTypeMarshaler struct {
	Input *types.DeleteQualificationTypeInput
}

// DeleteWorkerBlockMarshaler defines marshaler for DeleteWorkerBlock operation
type DeleteWorkerBlockMarshaler struct {
	Input *types.DeleteWorkerBlockInput
}

// DisassociateQualificationFromWorkerMarshaler defines marshaler for DisassociateQualificationFromWorker operation
type DisassociateQualificationFromWorkerMarshaler struct {
	Input *types.DisassociateQualificationFromWorkerInput
}

// GetAccountBalanceMarshaler defines marshaler for GetAccountBalance operation
type GetAccountBalanceMarshaler struct {
	Input *types.GetAccountBalanceInput
}

// GetAssignmentMarshaler defines marshaler for GetAssignment operation
type GetAssignmentMarshaler struct {
	Input *types.GetAssignmentInput
}

// GetFileUploadURLMarshaler defines marshaler for GetFileUploadURL operation
type GetFileUploadURLMarshaler struct {
	Input *types.GetFileUploadURLInput
}

// GetHITMarshaler defines marshaler for GetHIT operation
type GetHITMarshaler struct {
	Input *types.GetHITInput
}

// GetQualificationScoreMarshaler defines marshaler for GetQualificationScore operation
type GetQualificationScoreMarshaler struct {
	Input *types.GetQualificationScoreInput
}

// GetQualificationTypeMarshaler defines marshaler for GetQualificationType operation
type GetQualificationTypeMarshaler struct {
	Input *types.GetQualificationTypeInput
}

// ListAssignmentsForHITMarshaler defines marshaler for ListAssignmentsForHIT operation
type ListAssignmentsForHITMarshaler struct {
	Input *types.ListAssignmentsForHITInput
}

// ListBonusPaymentsMarshaler defines marshaler for ListBonusPayments operation
type ListBonusPaymentsMarshaler struct {
	Input *types.ListBonusPaymentsInput
}

// ListHITsMarshaler defines marshaler for ListHITs operation
type ListHITsMarshaler struct {
	Input *types.ListHITsInput
}

// ListHITsForQualificationTypeMarshaler defines marshaler for ListHITsForQualificationType operation
type ListHITsForQualificationTypeMarshaler struct {
	Input *types.ListHITsForQualificationTypeInput
}

// ListQualificationRequestsMarshaler defines marshaler for ListQualificationRequests operation
type ListQualificationRequestsMarshaler struct {
	Input *types.ListQualificationRequestsInput
}

// ListQualificationTypesMarshaler defines marshaler for ListQualificationTypes operation
type ListQualificationTypesMarshaler struct {
	Input *types.ListQualificationTypesInput
}

// ListReviewPolicyResultsForHITMarshaler defines marshaler for ListReviewPolicyResultsForHIT operation
type ListReviewPolicyResultsForHITMarshaler struct {
	Input *types.ListReviewPolicyResultsForHITInput
}

// ListReviewableHITsMarshaler defines marshaler for ListReviewableHITs operation
type ListReviewableHITsMarshaler struct {
	Input *types.ListReviewableHITsInput
}

// ListWorkerBlocksMarshaler defines marshaler for ListWorkerBlocks operation
type ListWorkerBlocksMarshaler struct {
	Input *types.ListWorkerBlocksInput
}

// ListWorkersWithQualificationTypeMarshaler defines marshaler for ListWorkersWithQualificationType operation
type ListWorkersWithQualificationTypeMarshaler struct {
	Input *types.ListWorkersWithQualificationTypeInput
}

// NotifyWorkersMarshaler defines marshaler for NotifyWorkers operation
type NotifyWorkersMarshaler struct {
	Input *types.NotifyWorkersInput
}

// RejectAssignmentMarshaler defines marshaler for RejectAssignment operation
type RejectAssignmentMarshaler struct {
	Input *types.RejectAssignmentInput
}

// RejectQualificationRequestMarshaler defines marshaler for RejectQualificationRequest operation
type RejectQualificationRequestMarshaler struct {
	Input *types.RejectQualificationRequestInput
}

// SendBonusMarshaler defines marshaler for SendBonus operation
type SendBonusMarshaler struct {
	Input *types.SendBonusInput
}

// SendTestEventNotificationMarshaler defines marshaler for SendTestEventNotification operation
type SendTestEventNotificationMarshaler struct {
	Input *types.SendTestEventNotificationInput
}

// UpdateExpirationForHITMarshaler defines marshaler for UpdateExpirationForHIT operation
type UpdateExpirationForHITMarshaler struct {
	Input *types.UpdateExpirationForHITInput
}

// UpdateHITReviewStatusMarshaler defines marshaler for UpdateHITReviewStatus operation
type UpdateHITReviewStatusMarshaler struct {
	Input *types.UpdateHITReviewStatusInput
}

// UpdateHITTypeOfHITMarshaler defines marshaler for UpdateHITTypeOfHIT operation
type UpdateHITTypeOfHITMarshaler struct {
	Input *types.UpdateHITTypeOfHITInput
}

// UpdateNotificationSettingsMarshaler defines marshaler for UpdateNotificationSettings operation
type UpdateNotificationSettingsMarshaler struct {
	Input *types.UpdateNotificationSettingsInput
}

// UpdateQualificationTypeMarshaler defines marshaler for UpdateQualificationType operation
type UpdateQualificationTypeMarshaler struct {
	Input *types.UpdateQualificationTypeInput
}

func MarshalAcceptQualificationRequestInputShapeAWSJSON(v *types.AcceptQualificationRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalApproveAssignmentInputShapeAWSJSON(v *types.ApproveAssignmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociateQualificationWithWorkerInputShapeAWSJSON(v *types.AssociateQualificationWithWorkerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateAdditionalAssignmentsForHITInputShapeAWSJSON(v *types.CreateAdditionalAssignmentsForHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateHITInputShapeAWSJSON(v *types.CreateHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateHITTypeInputShapeAWSJSON(v *types.CreateHITTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateHITWithHITTypeInputShapeAWSJSON(v *types.CreateHITWithHITTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateQualificationTypeInputShapeAWSJSON(v *types.CreateQualificationTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateWorkerBlockInputShapeAWSJSON(v *types.CreateWorkerBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteHITInputShapeAWSJSON(v *types.DeleteHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteQualificationTypeInputShapeAWSJSON(v *types.DeleteQualificationTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteWorkerBlockInputShapeAWSJSON(v *types.DeleteWorkerBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateQualificationFromWorkerInputShapeAWSJSON(v *types.DisassociateQualificationFromWorkerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAccountBalanceInputShapeAWSJSON(v *types.GetAccountBalanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAssignmentInputShapeAWSJSON(v *types.GetAssignmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetFileUploadURLInputShapeAWSJSON(v *types.GetFileUploadURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetHITInputShapeAWSJSON(v *types.GetHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetQualificationScoreInputShapeAWSJSON(v *types.GetQualificationScoreInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetQualificationTypeInputShapeAWSJSON(v *types.GetQualificationTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAssignmentsForHITInputShapeAWSJSON(v *types.ListAssignmentsForHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBonusPaymentsInputShapeAWSJSON(v *types.ListBonusPaymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListHITsInputShapeAWSJSON(v *types.ListHITsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListHITsForQualificationTypeInputShapeAWSJSON(v *types.ListHITsForQualificationTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListQualificationRequestsInputShapeAWSJSON(v *types.ListQualificationRequestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListQualificationTypesInputShapeAWSJSON(v *types.ListQualificationTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListReviewPolicyResultsForHITInputShapeAWSJSON(v *types.ListReviewPolicyResultsForHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListReviewableHITsInputShapeAWSJSON(v *types.ListReviewableHITsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListWorkerBlocksInputShapeAWSJSON(v *types.ListWorkerBlocksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListWorkersWithQualificationTypeInputShapeAWSJSON(v *types.ListWorkersWithQualificationTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalNotifyWorkersInputShapeAWSJSON(v *types.NotifyWorkersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRejectAssignmentInputShapeAWSJSON(v *types.RejectAssignmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRejectQualificationRequestInputShapeAWSJSON(v *types.RejectQualificationRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSendBonusInputShapeAWSJSON(v *types.SendBonusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSendTestEventNotificationInputShapeAWSJSON(v *types.SendTestEventNotificationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateExpirationForHITInputShapeAWSJSON(v *types.UpdateExpirationForHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateHITReviewStatusInputShapeAWSJSON(v *types.UpdateHITReviewStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateHITTypeOfHITInputShapeAWSJSON(v *types.UpdateHITTypeOfHITInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateNotificationSettingsInputShapeAWSJSON(v *types.UpdateNotificationSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateQualificationTypeInputShapeAWSJSON(v *types.UpdateQualificationTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AcceptQualificationRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptQualificationRequestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptQualificationRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptQualificationRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ApproveAssignmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalApproveAssignmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ApproveAssignmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ApproveAssignment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateQualificationWithWorkerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateQualificationWithWorkerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateQualificationWithWorkerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateQualificationWithWorker.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAdditionalAssignmentsForHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAdditionalAssignmentsForHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAdditionalAssignmentsForHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAdditionalAssignmentsForHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateHITTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHITTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHITTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHITType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateHITWithHITTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHITWithHITTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHITWithHITTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHITWithHITType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateQualificationTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateQualificationTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateQualificationTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateQualificationType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateWorkerBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateWorkerBlockInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateWorkerBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateWorkerBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteQualificationTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteQualificationTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteQualificationTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteQualificationType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteWorkerBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteWorkerBlockInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteWorkerBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteWorkerBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateQualificationFromWorkerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateQualificationFromWorkerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateQualificationFromWorkerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateQualificationFromWorker.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccountBalanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccountBalanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccountBalanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccountBalance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAssignmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAssignmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAssignmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAssignment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFileUploadURLMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFileUploadURLInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFileUploadURLMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFileUploadURL.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQualificationScoreMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQualificationScoreInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQualificationScoreMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQualificationScore.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQualificationTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQualificationTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQualificationTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQualificationType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAssignmentsForHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAssignmentsForHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAssignmentsForHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAssignmentsForHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBonusPaymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBonusPaymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBonusPaymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBonusPayments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListHITsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListHITsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListHITsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListHITs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListHITsForQualificationTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListHITsForQualificationTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListHITsForQualificationTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListHITsForQualificationType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListQualificationRequestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListQualificationRequestsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListQualificationRequestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListQualificationRequests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListQualificationTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListQualificationTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListQualificationTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListQualificationTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListReviewPolicyResultsForHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListReviewPolicyResultsForHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListReviewPolicyResultsForHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListReviewPolicyResultsForHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListReviewableHITsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListReviewableHITsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListReviewableHITsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListReviewableHITs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListWorkerBlocksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListWorkerBlocksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListWorkerBlocksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListWorkerBlocks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListWorkersWithQualificationTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListWorkersWithQualificationTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListWorkersWithQualificationTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListWorkersWithQualificationType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m NotifyWorkersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalNotifyWorkersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m NotifyWorkersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "NotifyWorkers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectAssignmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectAssignmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectAssignmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectAssignment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectQualificationRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectQualificationRequestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectQualificationRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectQualificationRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendBonusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendBonusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendBonusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendBonus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendTestEventNotificationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendTestEventNotificationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendTestEventNotificationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendTestEventNotification.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateExpirationForHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateExpirationForHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateExpirationForHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateExpirationForHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateHITReviewStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateHITReviewStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateHITReviewStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateHITReviewStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateHITTypeOfHITMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateHITTypeOfHITInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateHITTypeOfHITMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateHITTypeOfHIT.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateNotificationSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateNotificationSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateNotificationSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateNotificationSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateQualificationTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateQualificationTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateQualificationTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateQualificationType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
