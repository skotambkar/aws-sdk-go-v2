// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/elasticache/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddTagsToResourceMarshaler defines marshaler for AddTagsToResource operation
type AddTagsToResourceMarshaler struct {
	Input *types.AddTagsToResourceInput
}

// AuthorizeCacheSecurityGroupIngressMarshaler defines marshaler for AuthorizeCacheSecurityGroupIngress operation
type AuthorizeCacheSecurityGroupIngressMarshaler struct {
	Input *types.AuthorizeCacheSecurityGroupIngressInput
}

// BatchApplyUpdateActionMarshaler defines marshaler for BatchApplyUpdateAction operation
type BatchApplyUpdateActionMarshaler struct {
	Input *types.BatchApplyUpdateActionInput
}

// BatchStopUpdateActionMarshaler defines marshaler for BatchStopUpdateAction operation
type BatchStopUpdateActionMarshaler struct {
	Input *types.BatchStopUpdateActionInput
}

// CompleteMigrationMarshaler defines marshaler for CompleteMigration operation
type CompleteMigrationMarshaler struct {
	Input *types.CompleteMigrationInput
}

// CopySnapshotMarshaler defines marshaler for CopySnapshot operation
type CopySnapshotMarshaler struct {
	Input *types.CopySnapshotInput
}

// CreateCacheClusterMarshaler defines marshaler for CreateCacheCluster operation
type CreateCacheClusterMarshaler struct {
	Input *types.CreateCacheClusterInput
}

// CreateCacheParameterGroupMarshaler defines marshaler for CreateCacheParameterGroup operation
type CreateCacheParameterGroupMarshaler struct {
	Input *types.CreateCacheParameterGroupInput
}

// CreateCacheSecurityGroupMarshaler defines marshaler for CreateCacheSecurityGroup operation
type CreateCacheSecurityGroupMarshaler struct {
	Input *types.CreateCacheSecurityGroupInput
}

// CreateCacheSubnetGroupMarshaler defines marshaler for CreateCacheSubnetGroup operation
type CreateCacheSubnetGroupMarshaler struct {
	Input *types.CreateCacheSubnetGroupInput
}

// CreateReplicationGroupMarshaler defines marshaler for CreateReplicationGroup operation
type CreateReplicationGroupMarshaler struct {
	Input *types.CreateReplicationGroupInput
}

// CreateSnapshotMarshaler defines marshaler for CreateSnapshot operation
type CreateSnapshotMarshaler struct {
	Input *types.CreateSnapshotInput
}

// DecreaseReplicaCountMarshaler defines marshaler for DecreaseReplicaCount operation
type DecreaseReplicaCountMarshaler struct {
	Input *types.DecreaseReplicaCountInput
}

// DeleteCacheClusterMarshaler defines marshaler for DeleteCacheCluster operation
type DeleteCacheClusterMarshaler struct {
	Input *types.DeleteCacheClusterInput
}

// DeleteCacheParameterGroupMarshaler defines marshaler for DeleteCacheParameterGroup operation
type DeleteCacheParameterGroupMarshaler struct {
	Input *types.DeleteCacheParameterGroupInput
}

// DeleteCacheSecurityGroupMarshaler defines marshaler for DeleteCacheSecurityGroup operation
type DeleteCacheSecurityGroupMarshaler struct {
	Input *types.DeleteCacheSecurityGroupInput
}

// DeleteCacheSubnetGroupMarshaler defines marshaler for DeleteCacheSubnetGroup operation
type DeleteCacheSubnetGroupMarshaler struct {
	Input *types.DeleteCacheSubnetGroupInput
}

// DeleteReplicationGroupMarshaler defines marshaler for DeleteReplicationGroup operation
type DeleteReplicationGroupMarshaler struct {
	Input *types.DeleteReplicationGroupInput
}

// DeleteSnapshotMarshaler defines marshaler for DeleteSnapshot operation
type DeleteSnapshotMarshaler struct {
	Input *types.DeleteSnapshotInput
}

// DescribeCacheClustersMarshaler defines marshaler for DescribeCacheClusters operation
type DescribeCacheClustersMarshaler struct {
	Input *types.DescribeCacheClustersInput
}

// DescribeCacheEngineVersionsMarshaler defines marshaler for DescribeCacheEngineVersions operation
type DescribeCacheEngineVersionsMarshaler struct {
	Input *types.DescribeCacheEngineVersionsInput
}

// DescribeCacheParameterGroupsMarshaler defines marshaler for DescribeCacheParameterGroups operation
type DescribeCacheParameterGroupsMarshaler struct {
	Input *types.DescribeCacheParameterGroupsInput
}

// DescribeCacheParametersMarshaler defines marshaler for DescribeCacheParameters operation
type DescribeCacheParametersMarshaler struct {
	Input *types.DescribeCacheParametersInput
}

// DescribeCacheSecurityGroupsMarshaler defines marshaler for DescribeCacheSecurityGroups operation
type DescribeCacheSecurityGroupsMarshaler struct {
	Input *types.DescribeCacheSecurityGroupsInput
}

// DescribeCacheSubnetGroupsMarshaler defines marshaler for DescribeCacheSubnetGroups operation
type DescribeCacheSubnetGroupsMarshaler struct {
	Input *types.DescribeCacheSubnetGroupsInput
}

// DescribeEngineDefaultParametersMarshaler defines marshaler for DescribeEngineDefaultParameters operation
type DescribeEngineDefaultParametersMarshaler struct {
	Input *types.DescribeEngineDefaultParametersInput
}

// DescribeEventsMarshaler defines marshaler for DescribeEvents operation
type DescribeEventsMarshaler struct {
	Input *types.DescribeEventsInput
}

// DescribeReplicationGroupsMarshaler defines marshaler for DescribeReplicationGroups operation
type DescribeReplicationGroupsMarshaler struct {
	Input *types.DescribeReplicationGroupsInput
}

// DescribeReservedCacheNodesMarshaler defines marshaler for DescribeReservedCacheNodes operation
type DescribeReservedCacheNodesMarshaler struct {
	Input *types.DescribeReservedCacheNodesInput
}

// DescribeReservedCacheNodesOfferingsMarshaler defines marshaler for DescribeReservedCacheNodesOfferings operation
type DescribeReservedCacheNodesOfferingsMarshaler struct {
	Input *types.DescribeReservedCacheNodesOfferingsInput
}

// DescribeServiceUpdatesMarshaler defines marshaler for DescribeServiceUpdates operation
type DescribeServiceUpdatesMarshaler struct {
	Input *types.DescribeServiceUpdatesInput
}

// DescribeSnapshotsMarshaler defines marshaler for DescribeSnapshots operation
type DescribeSnapshotsMarshaler struct {
	Input *types.DescribeSnapshotsInput
}

// DescribeUpdateActionsMarshaler defines marshaler for DescribeUpdateActions operation
type DescribeUpdateActionsMarshaler struct {
	Input *types.DescribeUpdateActionsInput
}

// IncreaseReplicaCountMarshaler defines marshaler for IncreaseReplicaCount operation
type IncreaseReplicaCountMarshaler struct {
	Input *types.IncreaseReplicaCountInput
}

// ListAllowedNodeTypeModificationsMarshaler defines marshaler for ListAllowedNodeTypeModifications operation
type ListAllowedNodeTypeModificationsMarshaler struct {
	Input *types.ListAllowedNodeTypeModificationsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ModifyCacheClusterMarshaler defines marshaler for ModifyCacheCluster operation
type ModifyCacheClusterMarshaler struct {
	Input *types.ModifyCacheClusterInput
}

// ModifyCacheParameterGroupMarshaler defines marshaler for ModifyCacheParameterGroup operation
type ModifyCacheParameterGroupMarshaler struct {
	Input *types.ModifyCacheParameterGroupInput
}

// ModifyCacheSubnetGroupMarshaler defines marshaler for ModifyCacheSubnetGroup operation
type ModifyCacheSubnetGroupMarshaler struct {
	Input *types.ModifyCacheSubnetGroupInput
}

// ModifyReplicationGroupMarshaler defines marshaler for ModifyReplicationGroup operation
type ModifyReplicationGroupMarshaler struct {
	Input *types.ModifyReplicationGroupInput
}

// ModifyReplicationGroupShardConfigurationMarshaler defines marshaler for ModifyReplicationGroupShardConfiguration operation
type ModifyReplicationGroupShardConfigurationMarshaler struct {
	Input *types.ModifyReplicationGroupShardConfigurationInput
}

// PurchaseReservedCacheNodesOfferingMarshaler defines marshaler for PurchaseReservedCacheNodesOffering operation
type PurchaseReservedCacheNodesOfferingMarshaler struct {
	Input *types.PurchaseReservedCacheNodesOfferingInput
}

// RebootCacheClusterMarshaler defines marshaler for RebootCacheCluster operation
type RebootCacheClusterMarshaler struct {
	Input *types.RebootCacheClusterInput
}

// RemoveTagsFromResourceMarshaler defines marshaler for RemoveTagsFromResource operation
type RemoveTagsFromResourceMarshaler struct {
	Input *types.RemoveTagsFromResourceInput
}

// ResetCacheParameterGroupMarshaler defines marshaler for ResetCacheParameterGroup operation
type ResetCacheParameterGroupMarshaler struct {
	Input *types.ResetCacheParameterGroupInput
}

// RevokeCacheSecurityGroupIngressMarshaler defines marshaler for RevokeCacheSecurityGroupIngress operation
type RevokeCacheSecurityGroupIngressMarshaler struct {
	Input *types.RevokeCacheSecurityGroupIngressInput
}

// StartMigrationMarshaler defines marshaler for StartMigration operation
type StartMigrationMarshaler struct {
	Input *types.StartMigrationInput
}

// TestFailoverMarshaler defines marshaler for TestFailover operation
type TestFailoverMarshaler struct {
	Input *types.TestFailoverInput
}

func MarshalAddTagsToResourceInputShapeAWSQuery(v *types.AddTagsToResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAuthorizeCacheSecurityGroupIngressInputShapeAWSQuery(v *types.AuthorizeCacheSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalBatchApplyUpdateActionInputShapeAWSQuery(v *types.BatchApplyUpdateActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalBatchStopUpdateActionInputShapeAWSQuery(v *types.BatchStopUpdateActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCompleteMigrationInputShapeAWSQuery(v *types.CompleteMigrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopySnapshotInputShapeAWSQuery(v *types.CopySnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateCacheClusterInputShapeAWSQuery(v *types.CreateCacheClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateCacheParameterGroupInputShapeAWSQuery(v *types.CreateCacheParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateCacheSecurityGroupInputShapeAWSQuery(v *types.CreateCacheSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateCacheSubnetGroupInputShapeAWSQuery(v *types.CreateCacheSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateReplicationGroupInputShapeAWSQuery(v *types.CreateReplicationGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateSnapshotInputShapeAWSQuery(v *types.CreateSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDecreaseReplicaCountInputShapeAWSQuery(v *types.DecreaseReplicaCountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteCacheClusterInputShapeAWSQuery(v *types.DeleteCacheClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteCacheParameterGroupInputShapeAWSQuery(v *types.DeleteCacheParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteCacheSecurityGroupInputShapeAWSQuery(v *types.DeleteCacheSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteCacheSubnetGroupInputShapeAWSQuery(v *types.DeleteCacheSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteReplicationGroupInputShapeAWSQuery(v *types.DeleteReplicationGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteSnapshotInputShapeAWSQuery(v *types.DeleteSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCacheClustersInputShapeAWSQuery(v *types.DescribeCacheClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCacheEngineVersionsInputShapeAWSQuery(v *types.DescribeCacheEngineVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCacheParameterGroupsInputShapeAWSQuery(v *types.DescribeCacheParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCacheParametersInputShapeAWSQuery(v *types.DescribeCacheParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCacheSecurityGroupsInputShapeAWSQuery(v *types.DescribeCacheSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeCacheSubnetGroupsInputShapeAWSQuery(v *types.DescribeCacheSubnetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEngineDefaultParametersInputShapeAWSQuery(v *types.DescribeEngineDefaultParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventsInputShapeAWSQuery(v *types.DescribeEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReplicationGroupsInputShapeAWSQuery(v *types.DescribeReplicationGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReservedCacheNodesInputShapeAWSQuery(v *types.DescribeReservedCacheNodesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReservedCacheNodesOfferingsInputShapeAWSQuery(v *types.DescribeReservedCacheNodesOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeServiceUpdatesInputShapeAWSQuery(v *types.DescribeServiceUpdatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeSnapshotsInputShapeAWSQuery(v *types.DescribeSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeUpdateActionsInputShapeAWSQuery(v *types.DescribeUpdateActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalIncreaseReplicaCountInputShapeAWSQuery(v *types.IncreaseReplicaCountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListAllowedNodeTypeModificationsInputShapeAWSQuery(v *types.ListAllowedNodeTypeModificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSQuery(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyCacheClusterInputShapeAWSQuery(v *types.ModifyCacheClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyCacheParameterGroupInputShapeAWSQuery(v *types.ModifyCacheParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyCacheSubnetGroupInputShapeAWSQuery(v *types.ModifyCacheSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyReplicationGroupInputShapeAWSQuery(v *types.ModifyReplicationGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyReplicationGroupShardConfigurationInputShapeAWSQuery(v *types.ModifyReplicationGroupShardConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPurchaseReservedCacheNodesOfferingInputShapeAWSQuery(v *types.PurchaseReservedCacheNodesOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRebootCacheClusterInputShapeAWSQuery(v *types.RebootCacheClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveTagsFromResourceInputShapeAWSQuery(v *types.RemoveTagsFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetCacheParameterGroupInputShapeAWSQuery(v *types.ResetCacheParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRevokeCacheSecurityGroupIngressInputShapeAWSQuery(v *types.RevokeCacheSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStartMigrationInputShapeAWSQuery(v *types.StartMigrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalTestFailoverInputShapeAWSQuery(v *types.TestFailoverInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AddTagsToResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeCacheSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeCacheSecurityGroupIngressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeCacheSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeCacheSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchApplyUpdateActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchApplyUpdateActionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchApplyUpdateActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchApplyUpdateAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchStopUpdateActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchStopUpdateActionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchStopUpdateActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchStopUpdateAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CompleteMigrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCompleteMigrationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CompleteMigrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CompleteMigration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopySnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopySnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopySnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopySnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCacheClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCacheClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCacheClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCacheCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCacheParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCacheParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCacheParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCacheParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCacheSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCacheSecurityGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCacheSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCacheSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCacheSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCacheSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCacheSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCacheSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateReplicationGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateReplicationGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateReplicationGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateReplicationGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DecreaseReplicaCountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDecreaseReplicaCountInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DecreaseReplicaCountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DecreaseReplicaCount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCacheClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCacheClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCacheClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCacheCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCacheParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCacheParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCacheParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCacheParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCacheSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCacheSecurityGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCacheSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCacheSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCacheSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCacheSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCacheSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCacheSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteReplicationGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteReplicationGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteReplicationGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteReplicationGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheClustersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCacheClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheEngineVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheEngineVersionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheEngineVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCacheEngineVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheParameterGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCacheParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCacheParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheSecurityGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCacheSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheSubnetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheSubnetGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheSubnetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCacheSubnetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEngineDefaultParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEngineDefaultParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEngineDefaultParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEngineDefaultParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReplicationGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReplicationGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReplicationGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReplicationGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedCacheNodesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedCacheNodesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedCacheNodesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedCacheNodes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedCacheNodesOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedCacheNodesOfferingsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedCacheNodesOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedCacheNodesOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeServiceUpdatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeServiceUpdatesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeServiceUpdatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeServiceUpdates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUpdateActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUpdateActionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUpdateActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUpdateActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m IncreaseReplicaCountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalIncreaseReplicaCountInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m IncreaseReplicaCountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "IncreaseReplicaCount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAllowedNodeTypeModificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAllowedNodeTypeModificationsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAllowedNodeTypeModificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAllowedNodeTypeModifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyCacheClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyCacheClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyCacheClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyCacheCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyCacheParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyCacheParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyCacheParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyCacheParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyCacheSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyCacheSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyCacheSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyCacheSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyReplicationGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyReplicationGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyReplicationGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyReplicationGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyReplicationGroupShardConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyReplicationGroupShardConfigurationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyReplicationGroupShardConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyReplicationGroupShardConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseReservedCacheNodesOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseReservedCacheNodesOfferingInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseReservedCacheNodesOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseReservedCacheNodesOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootCacheClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootCacheClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootCacheClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootCacheCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetCacheParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetCacheParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetCacheParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetCacheParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeCacheSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeCacheSecurityGroupIngressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeCacheSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeCacheSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartMigrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartMigrationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartMigrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartMigration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TestFailoverMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTestFailoverInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TestFailoverMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TestFailover.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
