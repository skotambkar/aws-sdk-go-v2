// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/groundstation/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelContactMarshaler defines marshaler for CancelContact operation
type CancelContactMarshaler struct {
	Input *types.CancelContactInput
}

// CreateConfigMarshaler defines marshaler for CreateConfig operation
type CreateConfigMarshaler struct {
	Input *types.CreateConfigInput
}

// CreateDataflowEndpointGroupMarshaler defines marshaler for CreateDataflowEndpointGroup operation
type CreateDataflowEndpointGroupMarshaler struct {
	Input *types.CreateDataflowEndpointGroupInput
}

// CreateMissionProfileMarshaler defines marshaler for CreateMissionProfile operation
type CreateMissionProfileMarshaler struct {
	Input *types.CreateMissionProfileInput
}

// DeleteConfigMarshaler defines marshaler for DeleteConfig operation
type DeleteConfigMarshaler struct {
	Input *types.DeleteConfigInput
}

// DeleteDataflowEndpointGroupMarshaler defines marshaler for DeleteDataflowEndpointGroup operation
type DeleteDataflowEndpointGroupMarshaler struct {
	Input *types.DeleteDataflowEndpointGroupInput
}

// DeleteMissionProfileMarshaler defines marshaler for DeleteMissionProfile operation
type DeleteMissionProfileMarshaler struct {
	Input *types.DeleteMissionProfileInput
}

// DescribeContactMarshaler defines marshaler for DescribeContact operation
type DescribeContactMarshaler struct {
	Input *types.DescribeContactInput
}

// GetConfigMarshaler defines marshaler for GetConfig operation
type GetConfigMarshaler struct {
	Input *types.GetConfigInput
}

// GetDataflowEndpointGroupMarshaler defines marshaler for GetDataflowEndpointGroup operation
type GetDataflowEndpointGroupMarshaler struct {
	Input *types.GetDataflowEndpointGroupInput
}

// GetMinuteUsageMarshaler defines marshaler for GetMinuteUsage operation
type GetMinuteUsageMarshaler struct {
	Input *types.GetMinuteUsageInput
}

// GetMissionProfileMarshaler defines marshaler for GetMissionProfile operation
type GetMissionProfileMarshaler struct {
	Input *types.GetMissionProfileInput
}

// GetSatelliteMarshaler defines marshaler for GetSatellite operation
type GetSatelliteMarshaler struct {
	Input *types.GetSatelliteInput
}

// ListConfigsMarshaler defines marshaler for ListConfigs operation
type ListConfigsMarshaler struct {
	Input *types.ListConfigsInput
}

// ListContactsMarshaler defines marshaler for ListContacts operation
type ListContactsMarshaler struct {
	Input *types.ListContactsInput
}

// ListDataflowEndpointGroupsMarshaler defines marshaler for ListDataflowEndpointGroups operation
type ListDataflowEndpointGroupsMarshaler struct {
	Input *types.ListDataflowEndpointGroupsInput
}

// ListGroundStationsMarshaler defines marshaler for ListGroundStations operation
type ListGroundStationsMarshaler struct {
	Input *types.ListGroundStationsInput
}

// ListMissionProfilesMarshaler defines marshaler for ListMissionProfiles operation
type ListMissionProfilesMarshaler struct {
	Input *types.ListMissionProfilesInput
}

// ListSatellitesMarshaler defines marshaler for ListSatellites operation
type ListSatellitesMarshaler struct {
	Input *types.ListSatellitesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ReserveContactMarshaler defines marshaler for ReserveContact operation
type ReserveContactMarshaler struct {
	Input *types.ReserveContactInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateConfigMarshaler defines marshaler for UpdateConfig operation
type UpdateConfigMarshaler struct {
	Input *types.UpdateConfigInput
}

// UpdateMissionProfileMarshaler defines marshaler for UpdateMissionProfile operation
type UpdateMissionProfileMarshaler struct {
	Input *types.UpdateMissionProfileInput
}

func MarshalCancelContactInputShapeAWSREST(v *types.CancelContactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelContactInputShapeAWSJSON(v *types.CancelContactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateConfigInputShapeAWSREST(v *types.CreateConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateConfigInputShapeAWSJSON(v *types.CreateConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDataflowEndpointGroupInputShapeAWSREST(v *types.CreateDataflowEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDataflowEndpointGroupInputShapeAWSJSON(v *types.CreateDataflowEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateMissionProfileInputShapeAWSREST(v *types.CreateMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateMissionProfileInputShapeAWSJSON(v *types.CreateMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteConfigInputShapeAWSREST(v *types.DeleteConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteConfigInputShapeAWSJSON(v *types.DeleteConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDataflowEndpointGroupInputShapeAWSREST(v *types.DeleteDataflowEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDataflowEndpointGroupInputShapeAWSJSON(v *types.DeleteDataflowEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteMissionProfileInputShapeAWSREST(v *types.DeleteMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteMissionProfileInputShapeAWSJSON(v *types.DeleteMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeContactInputShapeAWSREST(v *types.DescribeContactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeContactInputShapeAWSJSON(v *types.DescribeContactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetConfigInputShapeAWSREST(v *types.GetConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetConfigInputShapeAWSJSON(v *types.GetConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDataflowEndpointGroupInputShapeAWSREST(v *types.GetDataflowEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDataflowEndpointGroupInputShapeAWSJSON(v *types.GetDataflowEndpointGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMinuteUsageInputShapeAWSREST(v *types.GetMinuteUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMinuteUsageInputShapeAWSJSON(v *types.GetMinuteUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMissionProfileInputShapeAWSREST(v *types.GetMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMissionProfileInputShapeAWSJSON(v *types.GetMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSatelliteInputShapeAWSREST(v *types.GetSatelliteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSatelliteInputShapeAWSJSON(v *types.GetSatelliteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListConfigsInputShapeAWSREST(v *types.ListConfigsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListConfigsInputShapeAWSJSON(v *types.ListConfigsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListContactsInputShapeAWSREST(v *types.ListContactsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListContactsInputShapeAWSJSON(v *types.ListContactsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDataflowEndpointGroupsInputShapeAWSREST(v *types.ListDataflowEndpointGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDataflowEndpointGroupsInputShapeAWSJSON(v *types.ListDataflowEndpointGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListGroundStationsInputShapeAWSREST(v *types.ListGroundStationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListGroundStationsInputShapeAWSJSON(v *types.ListGroundStationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListMissionProfilesInputShapeAWSREST(v *types.ListMissionProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListMissionProfilesInputShapeAWSJSON(v *types.ListMissionProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSatellitesInputShapeAWSREST(v *types.ListSatellitesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSatellitesInputShapeAWSJSON(v *types.ListSatellitesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalReserveContactInputShapeAWSREST(v *types.ReserveContactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalReserveContactInputShapeAWSJSON(v *types.ReserveContactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateConfigInputShapeAWSREST(v *types.UpdateConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateConfigInputShapeAWSJSON(v *types.UpdateConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateMissionProfileInputShapeAWSREST(v *types.UpdateMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateMissionProfileInputShapeAWSJSON(v *types.UpdateMissionProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CancelContactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelContactInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelContactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelContactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelContact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConfigInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDataflowEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDataflowEndpointGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDataflowEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDataflowEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDataflowEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMissionProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMissionProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateMissionProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMissionProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMissionProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConfigInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDataflowEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDataflowEndpointGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDataflowEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDataflowEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDataflowEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMissionProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMissionProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteMissionProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMissionProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMissionProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeContactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeContactInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeContactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeContactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeContact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConfigInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDataflowEndpointGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDataflowEndpointGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDataflowEndpointGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDataflowEndpointGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDataflowEndpointGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMinuteUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMinuteUsageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMinuteUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMinuteUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMinuteUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMissionProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMissionProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMissionProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMissionProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMissionProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSatelliteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSatelliteInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSatelliteInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSatelliteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSatellite.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListConfigsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListConfigsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListConfigsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListConfigsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListConfigs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListContactsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListContactsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListContactsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListContactsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListContacts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDataflowEndpointGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDataflowEndpointGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDataflowEndpointGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDataflowEndpointGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDataflowEndpointGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroundStationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroundStationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListGroundStationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroundStationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroundStations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListMissionProfilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListMissionProfilesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListMissionProfilesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListMissionProfilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListMissionProfiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSatellitesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSatellitesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSatellitesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSatellitesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSatellites.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReserveContactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReserveContactInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalReserveContactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReserveContactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReserveContact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateConfigInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateMissionProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateMissionProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateMissionProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateMissionProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateMissionProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
