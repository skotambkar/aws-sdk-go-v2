// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/ioteventsdata/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchPutMessageMarshaler defines marshaler for BatchPutMessage operation
type BatchPutMessageMarshaler struct {
	Input *types.BatchPutMessageInput
}

// BatchUpdateDetectorMarshaler defines marshaler for BatchUpdateDetector operation
type BatchUpdateDetectorMarshaler struct {
	Input *types.BatchUpdateDetectorInput
}

// DescribeDetectorMarshaler defines marshaler for DescribeDetector operation
type DescribeDetectorMarshaler struct {
	Input *types.DescribeDetectorInput
}

// ListDetectorsMarshaler defines marshaler for ListDetectors operation
type ListDetectorsMarshaler struct {
	Input *types.ListDetectorsInput
}

func MarshalBatchPutMessageInputShapeAWSREST(v *types.BatchPutMessageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchPutMessageInputShapeAWSJSON(v *types.BatchPutMessageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalBatchUpdateDetectorInputShapeAWSREST(v *types.BatchUpdateDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchUpdateDetectorInputShapeAWSJSON(v *types.BatchUpdateDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeDetectorInputShapeAWSREST(v *types.DescribeDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeDetectorInputShapeAWSJSON(v *types.DescribeDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDetectorsInputShapeAWSREST(v *types.ListDetectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDetectorsInputShapeAWSJSON(v *types.ListDetectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m BatchPutMessageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchPutMessageInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchPutMessageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchPutMessageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchPutMessage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchUpdateDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchUpdateDetectorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchUpdateDetectorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchUpdateDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchUpdateDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDetectorInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeDetectorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDetectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDetectorsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDetectorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDetectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDetectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
