// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/servicecatalog/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptPortfolioShareMarshaler defines marshaler for AcceptPortfolioShare operation
type AcceptPortfolioShareMarshaler struct {
	Input *types.AcceptPortfolioShareInput
}

// AssociateBudgetWithResourceMarshaler defines marshaler for AssociateBudgetWithResource operation
type AssociateBudgetWithResourceMarshaler struct {
	Input *types.AssociateBudgetWithResourceInput
}

// AssociatePrincipalWithPortfolioMarshaler defines marshaler for AssociatePrincipalWithPortfolio operation
type AssociatePrincipalWithPortfolioMarshaler struct {
	Input *types.AssociatePrincipalWithPortfolioInput
}

// AssociateProductWithPortfolioMarshaler defines marshaler for AssociateProductWithPortfolio operation
type AssociateProductWithPortfolioMarshaler struct {
	Input *types.AssociateProductWithPortfolioInput
}

// AssociateServiceActionWithProvisioningArtifactMarshaler defines marshaler for AssociateServiceActionWithProvisioningArtifact operation
type AssociateServiceActionWithProvisioningArtifactMarshaler struct {
	Input *types.AssociateServiceActionWithProvisioningArtifactInput
}

// AssociateTagOptionWithResourceMarshaler defines marshaler for AssociateTagOptionWithResource operation
type AssociateTagOptionWithResourceMarshaler struct {
	Input *types.AssociateTagOptionWithResourceInput
}

// BatchAssociateServiceActionWithProvisioningArtifactMarshaler defines marshaler for BatchAssociateServiceActionWithProvisioningArtifact operation
type BatchAssociateServiceActionWithProvisioningArtifactMarshaler struct {
	Input *types.BatchAssociateServiceActionWithProvisioningArtifactInput
}

// BatchDisassociateServiceActionFromProvisioningArtifactMarshaler defines marshaler for BatchDisassociateServiceActionFromProvisioningArtifact operation
type BatchDisassociateServiceActionFromProvisioningArtifactMarshaler struct {
	Input *types.BatchDisassociateServiceActionFromProvisioningArtifactInput
}

// CopyProductMarshaler defines marshaler for CopyProduct operation
type CopyProductMarshaler struct {
	Input *types.CopyProductInput
}

// CreateConstraintMarshaler defines marshaler for CreateConstraint operation
type CreateConstraintMarshaler struct {
	Input *types.CreateConstraintInput
}

// CreatePortfolioMarshaler defines marshaler for CreatePortfolio operation
type CreatePortfolioMarshaler struct {
	Input *types.CreatePortfolioInput
}

// CreatePortfolioShareMarshaler defines marshaler for CreatePortfolioShare operation
type CreatePortfolioShareMarshaler struct {
	Input *types.CreatePortfolioShareInput
}

// CreateProductMarshaler defines marshaler for CreateProduct operation
type CreateProductMarshaler struct {
	Input *types.CreateProductInput
}

// CreateProvisionedProductPlanMarshaler defines marshaler for CreateProvisionedProductPlan operation
type CreateProvisionedProductPlanMarshaler struct {
	Input *types.CreateProvisionedProductPlanInput
}

// CreateProvisioningArtifactMarshaler defines marshaler for CreateProvisioningArtifact operation
type CreateProvisioningArtifactMarshaler struct {
	Input *types.CreateProvisioningArtifactInput
}

// CreateServiceActionMarshaler defines marshaler for CreateServiceAction operation
type CreateServiceActionMarshaler struct {
	Input *types.CreateServiceActionInput
}

// CreateTagOptionMarshaler defines marshaler for CreateTagOption operation
type CreateTagOptionMarshaler struct {
	Input *types.CreateTagOptionInput
}

// DeleteConstraintMarshaler defines marshaler for DeleteConstraint operation
type DeleteConstraintMarshaler struct {
	Input *types.DeleteConstraintInput
}

// DeletePortfolioMarshaler defines marshaler for DeletePortfolio operation
type DeletePortfolioMarshaler struct {
	Input *types.DeletePortfolioInput
}

// DeletePortfolioShareMarshaler defines marshaler for DeletePortfolioShare operation
type DeletePortfolioShareMarshaler struct {
	Input *types.DeletePortfolioShareInput
}

// DeleteProductMarshaler defines marshaler for DeleteProduct operation
type DeleteProductMarshaler struct {
	Input *types.DeleteProductInput
}

// DeleteProvisionedProductPlanMarshaler defines marshaler for DeleteProvisionedProductPlan operation
type DeleteProvisionedProductPlanMarshaler struct {
	Input *types.DeleteProvisionedProductPlanInput
}

// DeleteProvisioningArtifactMarshaler defines marshaler for DeleteProvisioningArtifact operation
type DeleteProvisioningArtifactMarshaler struct {
	Input *types.DeleteProvisioningArtifactInput
}

// DeleteServiceActionMarshaler defines marshaler for DeleteServiceAction operation
type DeleteServiceActionMarshaler struct {
	Input *types.DeleteServiceActionInput
}

// DeleteTagOptionMarshaler defines marshaler for DeleteTagOption operation
type DeleteTagOptionMarshaler struct {
	Input *types.DeleteTagOptionInput
}

// DescribeConstraintMarshaler defines marshaler for DescribeConstraint operation
type DescribeConstraintMarshaler struct {
	Input *types.DescribeConstraintInput
}

// DescribeCopyProductStatusMarshaler defines marshaler for DescribeCopyProductStatus operation
type DescribeCopyProductStatusMarshaler struct {
	Input *types.DescribeCopyProductStatusInput
}

// DescribePortfolioMarshaler defines marshaler for DescribePortfolio operation
type DescribePortfolioMarshaler struct {
	Input *types.DescribePortfolioInput
}

// DescribePortfolioShareStatusMarshaler defines marshaler for DescribePortfolioShareStatus operation
type DescribePortfolioShareStatusMarshaler struct {
	Input *types.DescribePortfolioShareStatusInput
}

// DescribeProductMarshaler defines marshaler for DescribeProduct operation
type DescribeProductMarshaler struct {
	Input *types.DescribeProductInput
}

// DescribeProductAsAdminMarshaler defines marshaler for DescribeProductAsAdmin operation
type DescribeProductAsAdminMarshaler struct {
	Input *types.DescribeProductAsAdminInput
}

// DescribeProductViewMarshaler defines marshaler for DescribeProductView operation
type DescribeProductViewMarshaler struct {
	Input *types.DescribeProductViewInput
}

// DescribeProvisionedProductMarshaler defines marshaler for DescribeProvisionedProduct operation
type DescribeProvisionedProductMarshaler struct {
	Input *types.DescribeProvisionedProductInput
}

// DescribeProvisionedProductPlanMarshaler defines marshaler for DescribeProvisionedProductPlan operation
type DescribeProvisionedProductPlanMarshaler struct {
	Input *types.DescribeProvisionedProductPlanInput
}

// DescribeProvisioningArtifactMarshaler defines marshaler for DescribeProvisioningArtifact operation
type DescribeProvisioningArtifactMarshaler struct {
	Input *types.DescribeProvisioningArtifactInput
}

// DescribeProvisioningParametersMarshaler defines marshaler for DescribeProvisioningParameters operation
type DescribeProvisioningParametersMarshaler struct {
	Input *types.DescribeProvisioningParametersInput
}

// DescribeRecordMarshaler defines marshaler for DescribeRecord operation
type DescribeRecordMarshaler struct {
	Input *types.DescribeRecordInput
}

// DescribeServiceActionMarshaler defines marshaler for DescribeServiceAction operation
type DescribeServiceActionMarshaler struct {
	Input *types.DescribeServiceActionInput
}

// DescribeServiceActionExecutionParametersMarshaler defines marshaler for DescribeServiceActionExecutionParameters operation
type DescribeServiceActionExecutionParametersMarshaler struct {
	Input *types.DescribeServiceActionExecutionParametersInput
}

// DescribeTagOptionMarshaler defines marshaler for DescribeTagOption operation
type DescribeTagOptionMarshaler struct {
	Input *types.DescribeTagOptionInput
}

// DisableAWSOrganizationsAccessMarshaler defines marshaler for DisableAWSOrganizationsAccess operation
type DisableAWSOrganizationsAccessMarshaler struct {
	Input *types.DisableAWSOrganizationsAccessInput
}

// DisassociateBudgetFromResourceMarshaler defines marshaler for DisassociateBudgetFromResource operation
type DisassociateBudgetFromResourceMarshaler struct {
	Input *types.DisassociateBudgetFromResourceInput
}

// DisassociatePrincipalFromPortfolioMarshaler defines marshaler for DisassociatePrincipalFromPortfolio operation
type DisassociatePrincipalFromPortfolioMarshaler struct {
	Input *types.DisassociatePrincipalFromPortfolioInput
}

// DisassociateProductFromPortfolioMarshaler defines marshaler for DisassociateProductFromPortfolio operation
type DisassociateProductFromPortfolioMarshaler struct {
	Input *types.DisassociateProductFromPortfolioInput
}

// DisassociateServiceActionFromProvisioningArtifactMarshaler defines marshaler for DisassociateServiceActionFromProvisioningArtifact operation
type DisassociateServiceActionFromProvisioningArtifactMarshaler struct {
	Input *types.DisassociateServiceActionFromProvisioningArtifactInput
}

// DisassociateTagOptionFromResourceMarshaler defines marshaler for DisassociateTagOptionFromResource operation
type DisassociateTagOptionFromResourceMarshaler struct {
	Input *types.DisassociateTagOptionFromResourceInput
}

// EnableAWSOrganizationsAccessMarshaler defines marshaler for EnableAWSOrganizationsAccess operation
type EnableAWSOrganizationsAccessMarshaler struct {
	Input *types.EnableAWSOrganizationsAccessInput
}

// ExecuteProvisionedProductPlanMarshaler defines marshaler for ExecuteProvisionedProductPlan operation
type ExecuteProvisionedProductPlanMarshaler struct {
	Input *types.ExecuteProvisionedProductPlanInput
}

// ExecuteProvisionedProductServiceActionMarshaler defines marshaler for ExecuteProvisionedProductServiceAction operation
type ExecuteProvisionedProductServiceActionMarshaler struct {
	Input *types.ExecuteProvisionedProductServiceActionInput
}

// GetAWSOrganizationsAccessStatusMarshaler defines marshaler for GetAWSOrganizationsAccessStatus operation
type GetAWSOrganizationsAccessStatusMarshaler struct {
	Input *types.GetAWSOrganizationsAccessStatusInput
}

// ListAcceptedPortfolioSharesMarshaler defines marshaler for ListAcceptedPortfolioShares operation
type ListAcceptedPortfolioSharesMarshaler struct {
	Input *types.ListAcceptedPortfolioSharesInput
}

// ListBudgetsForResourceMarshaler defines marshaler for ListBudgetsForResource operation
type ListBudgetsForResourceMarshaler struct {
	Input *types.ListBudgetsForResourceInput
}

// ListConstraintsForPortfolioMarshaler defines marshaler for ListConstraintsForPortfolio operation
type ListConstraintsForPortfolioMarshaler struct {
	Input *types.ListConstraintsForPortfolioInput
}

// ListLaunchPathsMarshaler defines marshaler for ListLaunchPaths operation
type ListLaunchPathsMarshaler struct {
	Input *types.ListLaunchPathsInput
}

// ListOrganizationPortfolioAccessMarshaler defines marshaler for ListOrganizationPortfolioAccess operation
type ListOrganizationPortfolioAccessMarshaler struct {
	Input *types.ListOrganizationPortfolioAccessInput
}

// ListPortfolioAccessMarshaler defines marshaler for ListPortfolioAccess operation
type ListPortfolioAccessMarshaler struct {
	Input *types.ListPortfolioAccessInput
}

// ListPortfoliosMarshaler defines marshaler for ListPortfolios operation
type ListPortfoliosMarshaler struct {
	Input *types.ListPortfoliosInput
}

// ListPortfoliosForProductMarshaler defines marshaler for ListPortfoliosForProduct operation
type ListPortfoliosForProductMarshaler struct {
	Input *types.ListPortfoliosForProductInput
}

// ListPrincipalsForPortfolioMarshaler defines marshaler for ListPrincipalsForPortfolio operation
type ListPrincipalsForPortfolioMarshaler struct {
	Input *types.ListPrincipalsForPortfolioInput
}

// ListProvisionedProductPlansMarshaler defines marshaler for ListProvisionedProductPlans operation
type ListProvisionedProductPlansMarshaler struct {
	Input *types.ListProvisionedProductPlansInput
}

// ListProvisioningArtifactsMarshaler defines marshaler for ListProvisioningArtifacts operation
type ListProvisioningArtifactsMarshaler struct {
	Input *types.ListProvisioningArtifactsInput
}

// ListProvisioningArtifactsForServiceActionMarshaler defines marshaler for ListProvisioningArtifactsForServiceAction operation
type ListProvisioningArtifactsForServiceActionMarshaler struct {
	Input *types.ListProvisioningArtifactsForServiceActionInput
}

// ListRecordHistoryMarshaler defines marshaler for ListRecordHistory operation
type ListRecordHistoryMarshaler struct {
	Input *types.ListRecordHistoryInput
}

// ListResourcesForTagOptionMarshaler defines marshaler for ListResourcesForTagOption operation
type ListResourcesForTagOptionMarshaler struct {
	Input *types.ListResourcesForTagOptionInput
}

// ListServiceActionsMarshaler defines marshaler for ListServiceActions operation
type ListServiceActionsMarshaler struct {
	Input *types.ListServiceActionsInput
}

// ListServiceActionsForProvisioningArtifactMarshaler defines marshaler for ListServiceActionsForProvisioningArtifact operation
type ListServiceActionsForProvisioningArtifactMarshaler struct {
	Input *types.ListServiceActionsForProvisioningArtifactInput
}

// ListStackInstancesForProvisionedProductMarshaler defines marshaler for ListStackInstancesForProvisionedProduct operation
type ListStackInstancesForProvisionedProductMarshaler struct {
	Input *types.ListStackInstancesForProvisionedProductInput
}

// ListTagOptionsMarshaler defines marshaler for ListTagOptions operation
type ListTagOptionsMarshaler struct {
	Input *types.ListTagOptionsInput
}

// ProvisionProductMarshaler defines marshaler for ProvisionProduct operation
type ProvisionProductMarshaler struct {
	Input *types.ProvisionProductInput
}

// RejectPortfolioShareMarshaler defines marshaler for RejectPortfolioShare operation
type RejectPortfolioShareMarshaler struct {
	Input *types.RejectPortfolioShareInput
}

// ScanProvisionedProductsMarshaler defines marshaler for ScanProvisionedProducts operation
type ScanProvisionedProductsMarshaler struct {
	Input *types.ScanProvisionedProductsInput
}

// SearchProductsMarshaler defines marshaler for SearchProducts operation
type SearchProductsMarshaler struct {
	Input *types.SearchProductsInput
}

// SearchProductsAsAdminMarshaler defines marshaler for SearchProductsAsAdmin operation
type SearchProductsAsAdminMarshaler struct {
	Input *types.SearchProductsAsAdminInput
}

// SearchProvisionedProductsMarshaler defines marshaler for SearchProvisionedProducts operation
type SearchProvisionedProductsMarshaler struct {
	Input *types.SearchProvisionedProductsInput
}

// TerminateProvisionedProductMarshaler defines marshaler for TerminateProvisionedProduct operation
type TerminateProvisionedProductMarshaler struct {
	Input *types.TerminateProvisionedProductInput
}

// UpdateConstraintMarshaler defines marshaler for UpdateConstraint operation
type UpdateConstraintMarshaler struct {
	Input *types.UpdateConstraintInput
}

// UpdatePortfolioMarshaler defines marshaler for UpdatePortfolio operation
type UpdatePortfolioMarshaler struct {
	Input *types.UpdatePortfolioInput
}

// UpdateProductMarshaler defines marshaler for UpdateProduct operation
type UpdateProductMarshaler struct {
	Input *types.UpdateProductInput
}

// UpdateProvisionedProductMarshaler defines marshaler for UpdateProvisionedProduct operation
type UpdateProvisionedProductMarshaler struct {
	Input *types.UpdateProvisionedProductInput
}

// UpdateProvisionedProductPropertiesMarshaler defines marshaler for UpdateProvisionedProductProperties operation
type UpdateProvisionedProductPropertiesMarshaler struct {
	Input *types.UpdateProvisionedProductPropertiesInput
}

// UpdateProvisioningArtifactMarshaler defines marshaler for UpdateProvisioningArtifact operation
type UpdateProvisioningArtifactMarshaler struct {
	Input *types.UpdateProvisioningArtifactInput
}

// UpdateServiceActionMarshaler defines marshaler for UpdateServiceAction operation
type UpdateServiceActionMarshaler struct {
	Input *types.UpdateServiceActionInput
}

// UpdateTagOptionMarshaler defines marshaler for UpdateTagOption operation
type UpdateTagOptionMarshaler struct {
	Input *types.UpdateTagOptionInput
}

func MarshalAcceptPortfolioShareInputShapeAWSJSON(v *types.AcceptPortfolioShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociateBudgetWithResourceInputShapeAWSJSON(v *types.AssociateBudgetWithResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociatePrincipalWithPortfolioInputShapeAWSJSON(v *types.AssociatePrincipalWithPortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociateProductWithPortfolioInputShapeAWSJSON(v *types.AssociateProductWithPortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociateServiceActionWithProvisioningArtifactInputShapeAWSJSON(v *types.AssociateServiceActionWithProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociateTagOptionWithResourceInputShapeAWSJSON(v *types.AssociateTagOptionWithResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchAssociateServiceActionWithProvisioningArtifactInputShapeAWSJSON(v *types.BatchAssociateServiceActionWithProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchDisassociateServiceActionFromProvisioningArtifactInputShapeAWSJSON(v *types.BatchDisassociateServiceActionFromProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCopyProductInputShapeAWSJSON(v *types.CopyProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateConstraintInputShapeAWSJSON(v *types.CreateConstraintInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePortfolioInputShapeAWSJSON(v *types.CreatePortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePortfolioShareInputShapeAWSJSON(v *types.CreatePortfolioShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateProductInputShapeAWSJSON(v *types.CreateProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateProvisionedProductPlanInputShapeAWSJSON(v *types.CreateProvisionedProductPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateProvisioningArtifactInputShapeAWSJSON(v *types.CreateProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateServiceActionInputShapeAWSJSON(v *types.CreateServiceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTagOptionInputShapeAWSJSON(v *types.CreateTagOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteConstraintInputShapeAWSJSON(v *types.DeleteConstraintInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePortfolioInputShapeAWSJSON(v *types.DeletePortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePortfolioShareInputShapeAWSJSON(v *types.DeletePortfolioShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteProductInputShapeAWSJSON(v *types.DeleteProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteProvisionedProductPlanInputShapeAWSJSON(v *types.DeleteProvisionedProductPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteProvisioningArtifactInputShapeAWSJSON(v *types.DeleteProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteServiceActionInputShapeAWSJSON(v *types.DeleteServiceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTagOptionInputShapeAWSJSON(v *types.DeleteTagOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeConstraintInputShapeAWSJSON(v *types.DescribeConstraintInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCopyProductStatusInputShapeAWSJSON(v *types.DescribeCopyProductStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePortfolioInputShapeAWSJSON(v *types.DescribePortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePortfolioShareStatusInputShapeAWSJSON(v *types.DescribePortfolioShareStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProductInputShapeAWSJSON(v *types.DescribeProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProductAsAdminInputShapeAWSJSON(v *types.DescribeProductAsAdminInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProductViewInputShapeAWSJSON(v *types.DescribeProductViewInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProvisionedProductInputShapeAWSJSON(v *types.DescribeProvisionedProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProvisionedProductPlanInputShapeAWSJSON(v *types.DescribeProvisionedProductPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProvisioningArtifactInputShapeAWSJSON(v *types.DescribeProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProvisioningParametersInputShapeAWSJSON(v *types.DescribeProvisioningParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRecordInputShapeAWSJSON(v *types.DescribeRecordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeServiceActionInputShapeAWSJSON(v *types.DescribeServiceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeServiceActionExecutionParametersInputShapeAWSJSON(v *types.DescribeServiceActionExecutionParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTagOptionInputShapeAWSJSON(v *types.DescribeTagOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableAWSOrganizationsAccessInputShapeAWSJSON(v *types.DisableAWSOrganizationsAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateBudgetFromResourceInputShapeAWSJSON(v *types.DisassociateBudgetFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociatePrincipalFromPortfolioInputShapeAWSJSON(v *types.DisassociatePrincipalFromPortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateProductFromPortfolioInputShapeAWSJSON(v *types.DisassociateProductFromPortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateServiceActionFromProvisioningArtifactInputShapeAWSJSON(v *types.DisassociateServiceActionFromProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateTagOptionFromResourceInputShapeAWSJSON(v *types.DisassociateTagOptionFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableAWSOrganizationsAccessInputShapeAWSJSON(v *types.EnableAWSOrganizationsAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalExecuteProvisionedProductPlanInputShapeAWSJSON(v *types.ExecuteProvisionedProductPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalExecuteProvisionedProductServiceActionInputShapeAWSJSON(v *types.ExecuteProvisionedProductServiceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAWSOrganizationsAccessStatusInputShapeAWSJSON(v *types.GetAWSOrganizationsAccessStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAcceptedPortfolioSharesInputShapeAWSJSON(v *types.ListAcceptedPortfolioSharesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBudgetsForResourceInputShapeAWSJSON(v *types.ListBudgetsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListConstraintsForPortfolioInputShapeAWSJSON(v *types.ListConstraintsForPortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListLaunchPathsInputShapeAWSJSON(v *types.ListLaunchPathsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOrganizationPortfolioAccessInputShapeAWSJSON(v *types.ListOrganizationPortfolioAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPortfolioAccessInputShapeAWSJSON(v *types.ListPortfolioAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPortfoliosInputShapeAWSJSON(v *types.ListPortfoliosInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPortfoliosForProductInputShapeAWSJSON(v *types.ListPortfoliosForProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPrincipalsForPortfolioInputShapeAWSJSON(v *types.ListPrincipalsForPortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProvisionedProductPlansInputShapeAWSJSON(v *types.ListProvisionedProductPlansInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProvisioningArtifactsInputShapeAWSJSON(v *types.ListProvisioningArtifactsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProvisioningArtifactsForServiceActionInputShapeAWSJSON(v *types.ListProvisioningArtifactsForServiceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRecordHistoryInputShapeAWSJSON(v *types.ListRecordHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListResourcesForTagOptionInputShapeAWSJSON(v *types.ListResourcesForTagOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListServiceActionsInputShapeAWSJSON(v *types.ListServiceActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListServiceActionsForProvisioningArtifactInputShapeAWSJSON(v *types.ListServiceActionsForProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListStackInstancesForProvisionedProductInputShapeAWSJSON(v *types.ListStackInstancesForProvisionedProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagOptionsInputShapeAWSJSON(v *types.ListTagOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalProvisionProductInputShapeAWSJSON(v *types.ProvisionProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRejectPortfolioShareInputShapeAWSJSON(v *types.RejectPortfolioShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalScanProvisionedProductsInputShapeAWSJSON(v *types.ScanProvisionedProductsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSearchProductsInputShapeAWSJSON(v *types.SearchProductsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSearchProductsAsAdminInputShapeAWSJSON(v *types.SearchProductsAsAdminInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSearchProvisionedProductsInputShapeAWSJSON(v *types.SearchProvisionedProductsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTerminateProvisionedProductInputShapeAWSJSON(v *types.TerminateProvisionedProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateConstraintInputShapeAWSJSON(v *types.UpdateConstraintInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdatePortfolioInputShapeAWSJSON(v *types.UpdatePortfolioInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProductInputShapeAWSJSON(v *types.UpdateProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProvisionedProductInputShapeAWSJSON(v *types.UpdateProvisionedProductInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProvisionedProductPropertiesInputShapeAWSJSON(v *types.UpdateProvisionedProductPropertiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateProvisioningArtifactInputShapeAWSJSON(v *types.UpdateProvisioningArtifactInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateServiceActionInputShapeAWSJSON(v *types.UpdateServiceActionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTagOptionInputShapeAWSJSON(v *types.UpdateTagOptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AcceptPortfolioShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptPortfolioShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptPortfolioShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptPortfolioShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateBudgetWithResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateBudgetWithResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateBudgetWithResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateBudgetWithResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociatePrincipalWithPortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociatePrincipalWithPortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociatePrincipalWithPortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociatePrincipalWithPortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateProductWithPortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateProductWithPortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateProductWithPortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateProductWithPortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateServiceActionWithProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateServiceActionWithProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateServiceActionWithProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateServiceActionWithProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateTagOptionWithResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateTagOptionWithResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateTagOptionWithResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateTagOptionWithResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchAssociateServiceActionWithProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchAssociateServiceActionWithProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchAssociateServiceActionWithProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchAssociateServiceActionWithProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDisassociateServiceActionFromProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDisassociateServiceActionFromProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDisassociateServiceActionFromProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDisassociateServiceActionFromProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateConstraintMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConstraintInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConstraintMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConstraint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePortfolioShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePortfolioShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePortfolioShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePortfolioShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProvisionedProductPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProvisionedProductPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProvisionedProductPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProvisionedProductPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateServiceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateServiceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateServiceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateServiceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTagOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTagOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTagOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTagOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConstraintMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConstraintInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConstraintMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConstraint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePortfolioShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePortfolioShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePortfolioShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePortfolioShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProvisionedProductPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProvisionedProductPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProvisionedProductPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProvisionedProductPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServiceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServiceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServiceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteServiceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTagOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTagOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTagOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTagOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeConstraintMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeConstraintInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeConstraintMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeConstraint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCopyProductStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCopyProductStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCopyProductStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCopyProductStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePortfolioShareStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePortfolioShareStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePortfolioShareStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePortfolioShareStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProductAsAdminMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProductAsAdminInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProductAsAdminMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProductAsAdmin.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProductViewMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProductViewInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProductViewMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProductView.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProvisionedProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProvisionedProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProvisionedProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProvisionedProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProvisionedProductPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProvisionedProductPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProvisionedProductPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProvisionedProductPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProvisioningParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProvisioningParametersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProvisioningParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProvisioningParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRecordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRecordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRecordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRecord.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeServiceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeServiceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeServiceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeServiceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeServiceActionExecutionParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeServiceActionExecutionParametersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeServiceActionExecutionParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeServiceActionExecutionParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTagOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTagOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTagOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTagOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableAWSOrganizationsAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableAWSOrganizationsAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableAWSOrganizationsAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableAWSOrganizationsAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateBudgetFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateBudgetFromResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateBudgetFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateBudgetFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociatePrincipalFromPortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociatePrincipalFromPortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociatePrincipalFromPortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociatePrincipalFromPortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateProductFromPortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateProductFromPortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateProductFromPortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateProductFromPortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateServiceActionFromProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateServiceActionFromProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateServiceActionFromProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateServiceActionFromProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateTagOptionFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateTagOptionFromResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateTagOptionFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateTagOptionFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableAWSOrganizationsAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableAWSOrganizationsAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableAWSOrganizationsAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableAWSOrganizationsAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExecuteProvisionedProductPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExecuteProvisionedProductPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExecuteProvisionedProductPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExecuteProvisionedProductPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExecuteProvisionedProductServiceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExecuteProvisionedProductServiceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExecuteProvisionedProductServiceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExecuteProvisionedProductServiceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAWSOrganizationsAccessStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAWSOrganizationsAccessStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAWSOrganizationsAccessStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAWSOrganizationsAccessStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAcceptedPortfolioSharesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAcceptedPortfolioSharesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAcceptedPortfolioSharesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAcceptedPortfolioShares.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBudgetsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBudgetsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBudgetsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBudgetsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListConstraintsForPortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListConstraintsForPortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListConstraintsForPortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListConstraintsForPortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLaunchPathsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLaunchPathsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLaunchPathsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLaunchPaths.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOrganizationPortfolioAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOrganizationPortfolioAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOrganizationPortfolioAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOrganizationPortfolioAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPortfolioAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPortfolioAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPortfolioAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPortfolioAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPortfoliosMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPortfoliosInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPortfoliosMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPortfolios.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPortfoliosForProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPortfoliosForProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPortfoliosForProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPortfoliosForProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPrincipalsForPortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPrincipalsForPortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPrincipalsForPortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPrincipalsForPortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProvisionedProductPlansMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProvisionedProductPlansInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProvisionedProductPlansMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProvisionedProductPlans.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProvisioningArtifactsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProvisioningArtifactsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProvisioningArtifactsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProvisioningArtifacts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProvisioningArtifactsForServiceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProvisioningArtifactsForServiceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProvisioningArtifactsForServiceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProvisioningArtifactsForServiceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRecordHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRecordHistoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRecordHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRecordHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourcesForTagOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourcesForTagOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourcesForTagOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResourcesForTagOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServiceActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServiceActionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServiceActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServiceActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServiceActionsForProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServiceActionsForProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServiceActionsForProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServiceActionsForProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStackInstancesForProvisionedProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStackInstancesForProvisionedProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStackInstancesForProvisionedProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStackInstancesForProvisionedProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagOptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ProvisionProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalProvisionProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ProvisionProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ProvisionProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectPortfolioShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectPortfolioShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectPortfolioShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectPortfolioShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ScanProvisionedProductsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalScanProvisionedProductsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ScanProvisionedProductsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ScanProvisionedProducts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchProductsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchProductsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchProductsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchProducts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchProductsAsAdminMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchProductsAsAdminInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchProductsAsAdminMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchProductsAsAdmin.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchProvisionedProductsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchProvisionedProductsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchProvisionedProductsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchProvisionedProducts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TerminateProvisionedProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTerminateProvisionedProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TerminateProvisionedProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TerminateProvisionedProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateConstraintMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateConstraintInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateConstraintMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateConstraint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePortfolioMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePortfolioInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePortfolioMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePortfolio.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProvisionedProductMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProvisionedProductInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProvisionedProductMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProvisionedProduct.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProvisionedProductPropertiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProvisionedProductPropertiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProvisionedProductPropertiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProvisionedProductProperties.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateProvisioningArtifactMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateProvisioningArtifactInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateProvisioningArtifactMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateProvisioningArtifact.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServiceActionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServiceActionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServiceActionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateServiceAction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTagOptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTagOptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTagOptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTagOption.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
