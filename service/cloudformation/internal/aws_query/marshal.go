// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/cloudformation/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelUpdateStackMarshaler defines marshaler for CancelUpdateStack operation
type CancelUpdateStackMarshaler struct {
	Input *types.CancelUpdateStackInput
}

// ContinueUpdateRollbackMarshaler defines marshaler for ContinueUpdateRollback operation
type ContinueUpdateRollbackMarshaler struct {
	Input *types.ContinueUpdateRollbackInput
}

// CreateChangeSetMarshaler defines marshaler for CreateChangeSet operation
type CreateChangeSetMarshaler struct {
	Input *types.CreateChangeSetInput
}

// CreateStackMarshaler defines marshaler for CreateStack operation
type CreateStackMarshaler struct {
	Input *types.CreateStackInput
}

// CreateStackInstancesMarshaler defines marshaler for CreateStackInstances operation
type CreateStackInstancesMarshaler struct {
	Input *types.CreateStackInstancesInput
}

// CreateStackSetMarshaler defines marshaler for CreateStackSet operation
type CreateStackSetMarshaler struct {
	Input *types.CreateStackSetInput
}

// DeleteChangeSetMarshaler defines marshaler for DeleteChangeSet operation
type DeleteChangeSetMarshaler struct {
	Input *types.DeleteChangeSetInput
}

// DeleteStackMarshaler defines marshaler for DeleteStack operation
type DeleteStackMarshaler struct {
	Input *types.DeleteStackInput
}

// DeleteStackInstancesMarshaler defines marshaler for DeleteStackInstances operation
type DeleteStackInstancesMarshaler struct {
	Input *types.DeleteStackInstancesInput
}

// DeleteStackSetMarshaler defines marshaler for DeleteStackSet operation
type DeleteStackSetMarshaler struct {
	Input *types.DeleteStackSetInput
}

// DeregisterTypeMarshaler defines marshaler for DeregisterType operation
type DeregisterTypeMarshaler struct {
	Input *types.DeregisterTypeInput
}

// DescribeAccountLimitsMarshaler defines marshaler for DescribeAccountLimits operation
type DescribeAccountLimitsMarshaler struct {
	Input *types.DescribeAccountLimitsInput
}

// DescribeChangeSetMarshaler defines marshaler for DescribeChangeSet operation
type DescribeChangeSetMarshaler struct {
	Input *types.DescribeChangeSetInput
}

// DescribeStackDriftDetectionStatusMarshaler defines marshaler for DescribeStackDriftDetectionStatus operation
type DescribeStackDriftDetectionStatusMarshaler struct {
	Input *types.DescribeStackDriftDetectionStatusInput
}

// DescribeStackEventsMarshaler defines marshaler for DescribeStackEvents operation
type DescribeStackEventsMarshaler struct {
	Input *types.DescribeStackEventsInput
}

// DescribeStackInstanceMarshaler defines marshaler for DescribeStackInstance operation
type DescribeStackInstanceMarshaler struct {
	Input *types.DescribeStackInstanceInput
}

// DescribeStackResourceMarshaler defines marshaler for DescribeStackResource operation
type DescribeStackResourceMarshaler struct {
	Input *types.DescribeStackResourceInput
}

// DescribeStackResourceDriftsMarshaler defines marshaler for DescribeStackResourceDrifts operation
type DescribeStackResourceDriftsMarshaler struct {
	Input *types.DescribeStackResourceDriftsInput
}

// DescribeStackResourcesMarshaler defines marshaler for DescribeStackResources operation
type DescribeStackResourcesMarshaler struct {
	Input *types.DescribeStackResourcesInput
}

// DescribeStackSetMarshaler defines marshaler for DescribeStackSet operation
type DescribeStackSetMarshaler struct {
	Input *types.DescribeStackSetInput
}

// DescribeStackSetOperationMarshaler defines marshaler for DescribeStackSetOperation operation
type DescribeStackSetOperationMarshaler struct {
	Input *types.DescribeStackSetOperationInput
}

// DescribeStacksMarshaler defines marshaler for DescribeStacks operation
type DescribeStacksMarshaler struct {
	Input *types.DescribeStacksInput
}

// DescribeTypeMarshaler defines marshaler for DescribeType operation
type DescribeTypeMarshaler struct {
	Input *types.DescribeTypeInput
}

// DescribeTypeRegistrationMarshaler defines marshaler for DescribeTypeRegistration operation
type DescribeTypeRegistrationMarshaler struct {
	Input *types.DescribeTypeRegistrationInput
}

// DetectStackDriftMarshaler defines marshaler for DetectStackDrift operation
type DetectStackDriftMarshaler struct {
	Input *types.DetectStackDriftInput
}

// DetectStackResourceDriftMarshaler defines marshaler for DetectStackResourceDrift operation
type DetectStackResourceDriftMarshaler struct {
	Input *types.DetectStackResourceDriftInput
}

// DetectStackSetDriftMarshaler defines marshaler for DetectStackSetDrift operation
type DetectStackSetDriftMarshaler struct {
	Input *types.DetectStackSetDriftInput
}

// EstimateTemplateCostMarshaler defines marshaler for EstimateTemplateCost operation
type EstimateTemplateCostMarshaler struct {
	Input *types.EstimateTemplateCostInput
}

// ExecuteChangeSetMarshaler defines marshaler for ExecuteChangeSet operation
type ExecuteChangeSetMarshaler struct {
	Input *types.ExecuteChangeSetInput
}

// GetStackPolicyMarshaler defines marshaler for GetStackPolicy operation
type GetStackPolicyMarshaler struct {
	Input *types.GetStackPolicyInput
}

// GetTemplateMarshaler defines marshaler for GetTemplate operation
type GetTemplateMarshaler struct {
	Input *types.GetTemplateInput
}

// GetTemplateSummaryMarshaler defines marshaler for GetTemplateSummary operation
type GetTemplateSummaryMarshaler struct {
	Input *types.GetTemplateSummaryInput
}

// ListChangeSetsMarshaler defines marshaler for ListChangeSets operation
type ListChangeSetsMarshaler struct {
	Input *types.ListChangeSetsInput
}

// ListExportsMarshaler defines marshaler for ListExports operation
type ListExportsMarshaler struct {
	Input *types.ListExportsInput
}

// ListImportsMarshaler defines marshaler for ListImports operation
type ListImportsMarshaler struct {
	Input *types.ListImportsInput
}

// ListStackInstancesMarshaler defines marshaler for ListStackInstances operation
type ListStackInstancesMarshaler struct {
	Input *types.ListStackInstancesInput
}

// ListStackResourcesMarshaler defines marshaler for ListStackResources operation
type ListStackResourcesMarshaler struct {
	Input *types.ListStackResourcesInput
}

// ListStackSetOperationResultsMarshaler defines marshaler for ListStackSetOperationResults operation
type ListStackSetOperationResultsMarshaler struct {
	Input *types.ListStackSetOperationResultsInput
}

// ListStackSetOperationsMarshaler defines marshaler for ListStackSetOperations operation
type ListStackSetOperationsMarshaler struct {
	Input *types.ListStackSetOperationsInput
}

// ListStackSetsMarshaler defines marshaler for ListStackSets operation
type ListStackSetsMarshaler struct {
	Input *types.ListStackSetsInput
}

// ListStacksMarshaler defines marshaler for ListStacks operation
type ListStacksMarshaler struct {
	Input *types.ListStacksInput
}

// ListTypeRegistrationsMarshaler defines marshaler for ListTypeRegistrations operation
type ListTypeRegistrationsMarshaler struct {
	Input *types.ListTypeRegistrationsInput
}

// ListTypeVersionsMarshaler defines marshaler for ListTypeVersions operation
type ListTypeVersionsMarshaler struct {
	Input *types.ListTypeVersionsInput
}

// ListTypesMarshaler defines marshaler for ListTypes operation
type ListTypesMarshaler struct {
	Input *types.ListTypesInput
}

// RecordHandlerProgressMarshaler defines marshaler for RecordHandlerProgress operation
type RecordHandlerProgressMarshaler struct {
	Input *types.RecordHandlerProgressInput
}

// RegisterTypeMarshaler defines marshaler for RegisterType operation
type RegisterTypeMarshaler struct {
	Input *types.RegisterTypeInput
}

// SetStackPolicyMarshaler defines marshaler for SetStackPolicy operation
type SetStackPolicyMarshaler struct {
	Input *types.SetStackPolicyInput
}

// SetTypeDefaultVersionMarshaler defines marshaler for SetTypeDefaultVersion operation
type SetTypeDefaultVersionMarshaler struct {
	Input *types.SetTypeDefaultVersionInput
}

// SignalResourceMarshaler defines marshaler for SignalResource operation
type SignalResourceMarshaler struct {
	Input *types.SignalResourceInput
}

// StopStackSetOperationMarshaler defines marshaler for StopStackSetOperation operation
type StopStackSetOperationMarshaler struct {
	Input *types.StopStackSetOperationInput
}

// UpdateStackMarshaler defines marshaler for UpdateStack operation
type UpdateStackMarshaler struct {
	Input *types.UpdateStackInput
}

// UpdateStackInstancesMarshaler defines marshaler for UpdateStackInstances operation
type UpdateStackInstancesMarshaler struct {
	Input *types.UpdateStackInstancesInput
}

// UpdateStackSetMarshaler defines marshaler for UpdateStackSet operation
type UpdateStackSetMarshaler struct {
	Input *types.UpdateStackSetInput
}

// UpdateTerminationProtectionMarshaler defines marshaler for UpdateTerminationProtection operation
type UpdateTerminationProtectionMarshaler struct {
	Input *types.UpdateTerminationProtectionInput
}

// ValidateTemplateMarshaler defines marshaler for ValidateTemplate operation
type ValidateTemplateMarshaler struct {
	Input *types.ValidateTemplateInput
}

func MarshalCancelUpdateStackInputShapeAWSQuery(v *types.CancelUpdateStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalContinueUpdateRollbackInputShapeAWSQuery(v *types.ContinueUpdateRollbackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateChangeSetInputShapeAWSQuery(v *types.CreateChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateStackInputShapeAWSQuery(v *types.CreateStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateStackInstancesInputShapeAWSQuery(v *types.CreateStackInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateStackSetInputShapeAWSQuery(v *types.CreateStackSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteChangeSetInputShapeAWSQuery(v *types.DeleteChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteStackInputShapeAWSQuery(v *types.DeleteStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteStackInstancesInputShapeAWSQuery(v *types.DeleteStackInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteStackSetInputShapeAWSQuery(v *types.DeleteStackSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeregisterTypeInputShapeAWSQuery(v *types.DeregisterTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAccountLimitsInputShapeAWSQuery(v *types.DescribeAccountLimitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeChangeSetInputShapeAWSQuery(v *types.DescribeChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackDriftDetectionStatusInputShapeAWSQuery(v *types.DescribeStackDriftDetectionStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackEventsInputShapeAWSQuery(v *types.DescribeStackEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackInstanceInputShapeAWSQuery(v *types.DescribeStackInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackResourceInputShapeAWSQuery(v *types.DescribeStackResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackResourceDriftsInputShapeAWSQuery(v *types.DescribeStackResourceDriftsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackResourcesInputShapeAWSQuery(v *types.DescribeStackResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackSetInputShapeAWSQuery(v *types.DescribeStackSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStackSetOperationInputShapeAWSQuery(v *types.DescribeStackSetOperationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStacksInputShapeAWSQuery(v *types.DescribeStacksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeTypeInputShapeAWSQuery(v *types.DescribeTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeTypeRegistrationInputShapeAWSQuery(v *types.DescribeTypeRegistrationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetectStackDriftInputShapeAWSQuery(v *types.DetectStackDriftInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetectStackResourceDriftInputShapeAWSQuery(v *types.DetectStackResourceDriftInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetectStackSetDriftInputShapeAWSQuery(v *types.DetectStackSetDriftInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalEstimateTemplateCostInputShapeAWSQuery(v *types.EstimateTemplateCostInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalExecuteChangeSetInputShapeAWSQuery(v *types.ExecuteChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetStackPolicyInputShapeAWSQuery(v *types.GetStackPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetTemplateInputShapeAWSQuery(v *types.GetTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetTemplateSummaryInputShapeAWSQuery(v *types.GetTemplateSummaryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListChangeSetsInputShapeAWSQuery(v *types.ListChangeSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListExportsInputShapeAWSQuery(v *types.ListExportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListImportsInputShapeAWSQuery(v *types.ListImportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListStackInstancesInputShapeAWSQuery(v *types.ListStackInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListStackResourcesInputShapeAWSQuery(v *types.ListStackResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListStackSetOperationResultsInputShapeAWSQuery(v *types.ListStackSetOperationResultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListStackSetOperationsInputShapeAWSQuery(v *types.ListStackSetOperationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListStackSetsInputShapeAWSQuery(v *types.ListStackSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListStacksInputShapeAWSQuery(v *types.ListStacksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTypeRegistrationsInputShapeAWSQuery(v *types.ListTypeRegistrationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTypeVersionsInputShapeAWSQuery(v *types.ListTypeVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTypesInputShapeAWSQuery(v *types.ListTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRecordHandlerProgressInputShapeAWSQuery(v *types.RecordHandlerProgressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRegisterTypeInputShapeAWSQuery(v *types.RegisterTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetStackPolicyInputShapeAWSQuery(v *types.SetStackPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetTypeDefaultVersionInputShapeAWSQuery(v *types.SetTypeDefaultVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSignalResourceInputShapeAWSQuery(v *types.SignalResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalStopStackSetOperationInputShapeAWSQuery(v *types.StopStackSetOperationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateStackInputShapeAWSQuery(v *types.UpdateStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateStackInstancesInputShapeAWSQuery(v *types.UpdateStackInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateStackSetInputShapeAWSQuery(v *types.UpdateStackSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUpdateTerminationProtectionInputShapeAWSQuery(v *types.UpdateTerminationProtectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalValidateTemplateInputShapeAWSQuery(v *types.ValidateTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m CancelUpdateStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelUpdateStackInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelUpdateStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelUpdateStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ContinueUpdateRollbackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalContinueUpdateRollbackInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ContinueUpdateRollbackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ContinueUpdateRollback.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateChangeSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStackInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStackInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStackInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStackInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStackInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStackSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStackSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStackSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStackSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteChangeSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStackInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStackInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStackInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStackInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStackInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStackSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStackSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStackSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStackSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterTypeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountLimitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountLimitsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountLimitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccountLimits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeChangeSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackDriftDetectionStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackDriftDetectionStatusInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackDriftDetectionStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackDriftDetectionStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackEventsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackInstanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackResourceDriftsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackResourceDriftsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackResourceDriftsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackResourceDrifts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackResourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackResourcesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackResourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackResources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStackSetOperationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStackSetOperationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStackSetOperationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStackSetOperation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStacksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStacksInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStacksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStacks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTypeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTypeRegistrationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTypeRegistrationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTypeRegistrationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTypeRegistration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectStackDriftMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectStackDriftInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectStackDriftMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectStackDrift.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectStackResourceDriftMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectStackResourceDriftInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectStackResourceDriftMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectStackResourceDrift.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetectStackSetDriftMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetectStackSetDriftInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetectStackSetDriftMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetectStackSetDrift.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EstimateTemplateCostMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEstimateTemplateCostInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EstimateTemplateCostMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EstimateTemplateCost.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExecuteChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExecuteChangeSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExecuteChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExecuteChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetStackPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetStackPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetStackPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetStackPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTemplateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTemplateSummaryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTemplateSummaryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTemplateSummaryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTemplateSummary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListChangeSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListChangeSetsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListChangeSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListChangeSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListExportsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListExportsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListExportsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListExports.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListImportsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListImportsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListImportsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListImports.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStackInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStackInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStackInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStackInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStackResourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStackResourcesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStackResourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStackResources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStackSetOperationResultsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStackSetOperationResultsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStackSetOperationResultsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStackSetOperationResults.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStackSetOperationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStackSetOperationsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStackSetOperationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStackSetOperations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStackSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStackSetsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStackSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStackSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStacksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStacksInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStacksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStacks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTypeRegistrationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTypeRegistrationsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTypeRegistrationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTypeRegistrations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTypeVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTypeVersionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTypeVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTypeVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTypesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RecordHandlerProgressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRecordHandlerProgressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RecordHandlerProgressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RecordHandlerProgress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterTypeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetStackPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetStackPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetStackPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetStackPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetTypeDefaultVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetTypeDefaultVersionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetTypeDefaultVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetTypeDefaultVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SignalResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSignalResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SignalResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SignalResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopStackSetOperationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopStackSetOperationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopStackSetOperationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopStackSetOperation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateStackInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateStackInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateStackInstancesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateStackInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateStackInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateStackSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateStackSetInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateStackSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateStackSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTerminationProtectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTerminationProtectionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTerminationProtectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTerminationProtection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ValidateTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalValidateTemplateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ValidateTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ValidateTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
