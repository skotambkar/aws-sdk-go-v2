// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/serverlessapplicationrepository/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateApplicationMarshaler defines marshaler for CreateApplication operation
type CreateApplicationMarshaler struct {
	Input *types.CreateApplicationInput
}

// CreateApplicationVersionMarshaler defines marshaler for CreateApplicationVersion operation
type CreateApplicationVersionMarshaler struct {
	Input *types.CreateApplicationVersionInput
}

// CreateCloudFormationChangeSetMarshaler defines marshaler for CreateCloudFormationChangeSet operation
type CreateCloudFormationChangeSetMarshaler struct {
	Input *types.CreateCloudFormationChangeSetInput
}

// CreateCloudFormationTemplateMarshaler defines marshaler for CreateCloudFormationTemplate operation
type CreateCloudFormationTemplateMarshaler struct {
	Input *types.CreateCloudFormationTemplateInput
}

// DeleteApplicationMarshaler defines marshaler for DeleteApplication operation
type DeleteApplicationMarshaler struct {
	Input *types.DeleteApplicationInput
}

// GetApplicationMarshaler defines marshaler for GetApplication operation
type GetApplicationMarshaler struct {
	Input *types.GetApplicationInput
}

// GetApplicationPolicyMarshaler defines marshaler for GetApplicationPolicy operation
type GetApplicationPolicyMarshaler struct {
	Input *types.GetApplicationPolicyInput
}

// GetCloudFormationTemplateMarshaler defines marshaler for GetCloudFormationTemplate operation
type GetCloudFormationTemplateMarshaler struct {
	Input *types.GetCloudFormationTemplateInput
}

// ListApplicationDependenciesMarshaler defines marshaler for ListApplicationDependencies operation
type ListApplicationDependenciesMarshaler struct {
	Input *types.ListApplicationDependenciesInput
}

// ListApplicationVersionsMarshaler defines marshaler for ListApplicationVersions operation
type ListApplicationVersionsMarshaler struct {
	Input *types.ListApplicationVersionsInput
}

// ListApplicationsMarshaler defines marshaler for ListApplications operation
type ListApplicationsMarshaler struct {
	Input *types.ListApplicationsInput
}

// PutApplicationPolicyMarshaler defines marshaler for PutApplicationPolicy operation
type PutApplicationPolicyMarshaler struct {
	Input *types.PutApplicationPolicyInput
}

// UpdateApplicationMarshaler defines marshaler for UpdateApplication operation
type UpdateApplicationMarshaler struct {
	Input *types.UpdateApplicationInput
}

func MarshalCreateApplicationInputShapeAWSREST(v *types.CreateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateApplicationInputShapeAWSJSON(v *types.CreateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateApplicationVersionInputShapeAWSREST(v *types.CreateApplicationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateApplicationVersionInputShapeAWSJSON(v *types.CreateApplicationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateCloudFormationChangeSetInputShapeAWSREST(v *types.CreateCloudFormationChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateCloudFormationChangeSetInputShapeAWSJSON(v *types.CreateCloudFormationChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateCloudFormationTemplateInputShapeAWSREST(v *types.CreateCloudFormationTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateCloudFormationTemplateInputShapeAWSJSON(v *types.CreateCloudFormationTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteApplicationInputShapeAWSREST(v *types.DeleteApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteApplicationInputShapeAWSJSON(v *types.DeleteApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApplicationInputShapeAWSREST(v *types.GetApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApplicationInputShapeAWSJSON(v *types.GetApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetApplicationPolicyInputShapeAWSREST(v *types.GetApplicationPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetApplicationPolicyInputShapeAWSJSON(v *types.GetApplicationPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCloudFormationTemplateInputShapeAWSREST(v *types.GetCloudFormationTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCloudFormationTemplateInputShapeAWSJSON(v *types.GetCloudFormationTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListApplicationDependenciesInputShapeAWSREST(v *types.ListApplicationDependenciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListApplicationDependenciesInputShapeAWSJSON(v *types.ListApplicationDependenciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListApplicationVersionsInputShapeAWSREST(v *types.ListApplicationVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListApplicationVersionsInputShapeAWSJSON(v *types.ListApplicationVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListApplicationsInputShapeAWSREST(v *types.ListApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListApplicationsInputShapeAWSJSON(v *types.ListApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutApplicationPolicyInputShapeAWSREST(v *types.PutApplicationPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutApplicationPolicyInputShapeAWSJSON(v *types.PutApplicationPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateApplicationInputShapeAWSREST(v *types.UpdateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateApplicationInputShapeAWSJSON(v *types.UpdateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateApplicationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApplicationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateApplicationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApplicationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApplicationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCloudFormationChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCloudFormationChangeSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateCloudFormationChangeSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCloudFormationChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCloudFormationChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCloudFormationTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCloudFormationTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateCloudFormationTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCloudFormationTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCloudFormationTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApplicationPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApplicationPolicyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetApplicationPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApplicationPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApplicationPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCloudFormationTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCloudFormationTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCloudFormationTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCloudFormationTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCloudFormationTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationDependenciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationDependenciesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListApplicationDependenciesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationDependenciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplicationDependencies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListApplicationVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplicationVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutApplicationPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutApplicationPolicyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutApplicationPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutApplicationPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutApplicationPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
