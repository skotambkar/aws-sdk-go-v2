// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/greengrass/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssociateRoleToGroupMarshaler defines marshaler for AssociateRoleToGroup operation
type AssociateRoleToGroupMarshaler struct {
	Input *types.AssociateRoleToGroupInput
}

// AssociateServiceRoleToAccountMarshaler defines marshaler for AssociateServiceRoleToAccount operation
type AssociateServiceRoleToAccountMarshaler struct {
	Input *types.AssociateServiceRoleToAccountInput
}

// CreateConnectorDefinitionMarshaler defines marshaler for CreateConnectorDefinition operation
type CreateConnectorDefinitionMarshaler struct {
	Input *types.CreateConnectorDefinitionInput
}

// CreateConnectorDefinitionVersionMarshaler defines marshaler for CreateConnectorDefinitionVersion operation
type CreateConnectorDefinitionVersionMarshaler struct {
	Input *types.CreateConnectorDefinitionVersionInput
}

// CreateCoreDefinitionMarshaler defines marshaler for CreateCoreDefinition operation
type CreateCoreDefinitionMarshaler struct {
	Input *types.CreateCoreDefinitionInput
}

// CreateCoreDefinitionVersionMarshaler defines marshaler for CreateCoreDefinitionVersion operation
type CreateCoreDefinitionVersionMarshaler struct {
	Input *types.CreateCoreDefinitionVersionInput
}

// CreateDeploymentMarshaler defines marshaler for CreateDeployment operation
type CreateDeploymentMarshaler struct {
	Input *types.CreateDeploymentInput
}

// CreateDeviceDefinitionMarshaler defines marshaler for CreateDeviceDefinition operation
type CreateDeviceDefinitionMarshaler struct {
	Input *types.CreateDeviceDefinitionInput
}

// CreateDeviceDefinitionVersionMarshaler defines marshaler for CreateDeviceDefinitionVersion operation
type CreateDeviceDefinitionVersionMarshaler struct {
	Input *types.CreateDeviceDefinitionVersionInput
}

// CreateFunctionDefinitionMarshaler defines marshaler for CreateFunctionDefinition operation
type CreateFunctionDefinitionMarshaler struct {
	Input *types.CreateFunctionDefinitionInput
}

// CreateFunctionDefinitionVersionMarshaler defines marshaler for CreateFunctionDefinitionVersion operation
type CreateFunctionDefinitionVersionMarshaler struct {
	Input *types.CreateFunctionDefinitionVersionInput
}

// CreateGroupMarshaler defines marshaler for CreateGroup operation
type CreateGroupMarshaler struct {
	Input *types.CreateGroupInput
}

// CreateGroupCertificateAuthorityMarshaler defines marshaler for CreateGroupCertificateAuthority operation
type CreateGroupCertificateAuthorityMarshaler struct {
	Input *types.CreateGroupCertificateAuthorityInput
}

// CreateGroupVersionMarshaler defines marshaler for CreateGroupVersion operation
type CreateGroupVersionMarshaler struct {
	Input *types.CreateGroupVersionInput
}

// CreateLoggerDefinitionMarshaler defines marshaler for CreateLoggerDefinition operation
type CreateLoggerDefinitionMarshaler struct {
	Input *types.CreateLoggerDefinitionInput
}

// CreateLoggerDefinitionVersionMarshaler defines marshaler for CreateLoggerDefinitionVersion operation
type CreateLoggerDefinitionVersionMarshaler struct {
	Input *types.CreateLoggerDefinitionVersionInput
}

// CreateResourceDefinitionMarshaler defines marshaler for CreateResourceDefinition operation
type CreateResourceDefinitionMarshaler struct {
	Input *types.CreateResourceDefinitionInput
}

// CreateResourceDefinitionVersionMarshaler defines marshaler for CreateResourceDefinitionVersion operation
type CreateResourceDefinitionVersionMarshaler struct {
	Input *types.CreateResourceDefinitionVersionInput
}

// CreateSoftwareUpdateJobMarshaler defines marshaler for CreateSoftwareUpdateJob operation
type CreateSoftwareUpdateJobMarshaler struct {
	Input *types.CreateSoftwareUpdateJobInput
}

// CreateSubscriptionDefinitionMarshaler defines marshaler for CreateSubscriptionDefinition operation
type CreateSubscriptionDefinitionMarshaler struct {
	Input *types.CreateSubscriptionDefinitionInput
}

// CreateSubscriptionDefinitionVersionMarshaler defines marshaler for CreateSubscriptionDefinitionVersion operation
type CreateSubscriptionDefinitionVersionMarshaler struct {
	Input *types.CreateSubscriptionDefinitionVersionInput
}

// DeleteConnectorDefinitionMarshaler defines marshaler for DeleteConnectorDefinition operation
type DeleteConnectorDefinitionMarshaler struct {
	Input *types.DeleteConnectorDefinitionInput
}

// DeleteCoreDefinitionMarshaler defines marshaler for DeleteCoreDefinition operation
type DeleteCoreDefinitionMarshaler struct {
	Input *types.DeleteCoreDefinitionInput
}

// DeleteDeviceDefinitionMarshaler defines marshaler for DeleteDeviceDefinition operation
type DeleteDeviceDefinitionMarshaler struct {
	Input *types.DeleteDeviceDefinitionInput
}

// DeleteFunctionDefinitionMarshaler defines marshaler for DeleteFunctionDefinition operation
type DeleteFunctionDefinitionMarshaler struct {
	Input *types.DeleteFunctionDefinitionInput
}

// DeleteGroupMarshaler defines marshaler for DeleteGroup operation
type DeleteGroupMarshaler struct {
	Input *types.DeleteGroupInput
}

// DeleteLoggerDefinitionMarshaler defines marshaler for DeleteLoggerDefinition operation
type DeleteLoggerDefinitionMarshaler struct {
	Input *types.DeleteLoggerDefinitionInput
}

// DeleteResourceDefinitionMarshaler defines marshaler for DeleteResourceDefinition operation
type DeleteResourceDefinitionMarshaler struct {
	Input *types.DeleteResourceDefinitionInput
}

// DeleteSubscriptionDefinitionMarshaler defines marshaler for DeleteSubscriptionDefinition operation
type DeleteSubscriptionDefinitionMarshaler struct {
	Input *types.DeleteSubscriptionDefinitionInput
}

// DisassociateRoleFromGroupMarshaler defines marshaler for DisassociateRoleFromGroup operation
type DisassociateRoleFromGroupMarshaler struct {
	Input *types.DisassociateRoleFromGroupInput
}

// DisassociateServiceRoleFromAccountMarshaler defines marshaler for DisassociateServiceRoleFromAccount operation
type DisassociateServiceRoleFromAccountMarshaler struct {
	Input *types.DisassociateServiceRoleFromAccountInput
}

// GetAssociatedRoleMarshaler defines marshaler for GetAssociatedRole operation
type GetAssociatedRoleMarshaler struct {
	Input *types.GetAssociatedRoleInput
}

// GetBulkDeploymentStatusMarshaler defines marshaler for GetBulkDeploymentStatus operation
type GetBulkDeploymentStatusMarshaler struct {
	Input *types.GetBulkDeploymentStatusInput
}

// GetConnectivityInfoMarshaler defines marshaler for GetConnectivityInfo operation
type GetConnectivityInfoMarshaler struct {
	Input *types.GetConnectivityInfoInput
}

// GetConnectorDefinitionMarshaler defines marshaler for GetConnectorDefinition operation
type GetConnectorDefinitionMarshaler struct {
	Input *types.GetConnectorDefinitionInput
}

// GetConnectorDefinitionVersionMarshaler defines marshaler for GetConnectorDefinitionVersion operation
type GetConnectorDefinitionVersionMarshaler struct {
	Input *types.GetConnectorDefinitionVersionInput
}

// GetCoreDefinitionMarshaler defines marshaler for GetCoreDefinition operation
type GetCoreDefinitionMarshaler struct {
	Input *types.GetCoreDefinitionInput
}

// GetCoreDefinitionVersionMarshaler defines marshaler for GetCoreDefinitionVersion operation
type GetCoreDefinitionVersionMarshaler struct {
	Input *types.GetCoreDefinitionVersionInput
}

// GetDeploymentStatusMarshaler defines marshaler for GetDeploymentStatus operation
type GetDeploymentStatusMarshaler struct {
	Input *types.GetDeploymentStatusInput
}

// GetDeviceDefinitionMarshaler defines marshaler for GetDeviceDefinition operation
type GetDeviceDefinitionMarshaler struct {
	Input *types.GetDeviceDefinitionInput
}

// GetDeviceDefinitionVersionMarshaler defines marshaler for GetDeviceDefinitionVersion operation
type GetDeviceDefinitionVersionMarshaler struct {
	Input *types.GetDeviceDefinitionVersionInput
}

// GetFunctionDefinitionMarshaler defines marshaler for GetFunctionDefinition operation
type GetFunctionDefinitionMarshaler struct {
	Input *types.GetFunctionDefinitionInput
}

// GetFunctionDefinitionVersionMarshaler defines marshaler for GetFunctionDefinitionVersion operation
type GetFunctionDefinitionVersionMarshaler struct {
	Input *types.GetFunctionDefinitionVersionInput
}

// GetGroupMarshaler defines marshaler for GetGroup operation
type GetGroupMarshaler struct {
	Input *types.GetGroupInput
}

// GetGroupCertificateAuthorityMarshaler defines marshaler for GetGroupCertificateAuthority operation
type GetGroupCertificateAuthorityMarshaler struct {
	Input *types.GetGroupCertificateAuthorityInput
}

// GetGroupCertificateConfigurationMarshaler defines marshaler for GetGroupCertificateConfiguration operation
type GetGroupCertificateConfigurationMarshaler struct {
	Input *types.GetGroupCertificateConfigurationInput
}

// GetGroupVersionMarshaler defines marshaler for GetGroupVersion operation
type GetGroupVersionMarshaler struct {
	Input *types.GetGroupVersionInput
}

// GetLoggerDefinitionMarshaler defines marshaler for GetLoggerDefinition operation
type GetLoggerDefinitionMarshaler struct {
	Input *types.GetLoggerDefinitionInput
}

// GetLoggerDefinitionVersionMarshaler defines marshaler for GetLoggerDefinitionVersion operation
type GetLoggerDefinitionVersionMarshaler struct {
	Input *types.GetLoggerDefinitionVersionInput
}

// GetResourceDefinitionMarshaler defines marshaler for GetResourceDefinition operation
type GetResourceDefinitionMarshaler struct {
	Input *types.GetResourceDefinitionInput
}

// GetResourceDefinitionVersionMarshaler defines marshaler for GetResourceDefinitionVersion operation
type GetResourceDefinitionVersionMarshaler struct {
	Input *types.GetResourceDefinitionVersionInput
}

// GetServiceRoleForAccountMarshaler defines marshaler for GetServiceRoleForAccount operation
type GetServiceRoleForAccountMarshaler struct {
	Input *types.GetServiceRoleForAccountInput
}

// GetSubscriptionDefinitionMarshaler defines marshaler for GetSubscriptionDefinition operation
type GetSubscriptionDefinitionMarshaler struct {
	Input *types.GetSubscriptionDefinitionInput
}

// GetSubscriptionDefinitionVersionMarshaler defines marshaler for GetSubscriptionDefinitionVersion operation
type GetSubscriptionDefinitionVersionMarshaler struct {
	Input *types.GetSubscriptionDefinitionVersionInput
}

// ListBulkDeploymentDetailedReportsMarshaler defines marshaler for ListBulkDeploymentDetailedReports operation
type ListBulkDeploymentDetailedReportsMarshaler struct {
	Input *types.ListBulkDeploymentDetailedReportsInput
}

// ListBulkDeploymentsMarshaler defines marshaler for ListBulkDeployments operation
type ListBulkDeploymentsMarshaler struct {
	Input *types.ListBulkDeploymentsInput
}

// ListConnectorDefinitionVersionsMarshaler defines marshaler for ListConnectorDefinitionVersions operation
type ListConnectorDefinitionVersionsMarshaler struct {
	Input *types.ListConnectorDefinitionVersionsInput
}

// ListConnectorDefinitionsMarshaler defines marshaler for ListConnectorDefinitions operation
type ListConnectorDefinitionsMarshaler struct {
	Input *types.ListConnectorDefinitionsInput
}

// ListCoreDefinitionVersionsMarshaler defines marshaler for ListCoreDefinitionVersions operation
type ListCoreDefinitionVersionsMarshaler struct {
	Input *types.ListCoreDefinitionVersionsInput
}

// ListCoreDefinitionsMarshaler defines marshaler for ListCoreDefinitions operation
type ListCoreDefinitionsMarshaler struct {
	Input *types.ListCoreDefinitionsInput
}

// ListDeploymentsMarshaler defines marshaler for ListDeployments operation
type ListDeploymentsMarshaler struct {
	Input *types.ListDeploymentsInput
}

// ListDeviceDefinitionVersionsMarshaler defines marshaler for ListDeviceDefinitionVersions operation
type ListDeviceDefinitionVersionsMarshaler struct {
	Input *types.ListDeviceDefinitionVersionsInput
}

// ListDeviceDefinitionsMarshaler defines marshaler for ListDeviceDefinitions operation
type ListDeviceDefinitionsMarshaler struct {
	Input *types.ListDeviceDefinitionsInput
}

// ListFunctionDefinitionVersionsMarshaler defines marshaler for ListFunctionDefinitionVersions operation
type ListFunctionDefinitionVersionsMarshaler struct {
	Input *types.ListFunctionDefinitionVersionsInput
}

// ListFunctionDefinitionsMarshaler defines marshaler for ListFunctionDefinitions operation
type ListFunctionDefinitionsMarshaler struct {
	Input *types.ListFunctionDefinitionsInput
}

// ListGroupCertificateAuthoritiesMarshaler defines marshaler for ListGroupCertificateAuthorities operation
type ListGroupCertificateAuthoritiesMarshaler struct {
	Input *types.ListGroupCertificateAuthoritiesInput
}

// ListGroupVersionsMarshaler defines marshaler for ListGroupVersions operation
type ListGroupVersionsMarshaler struct {
	Input *types.ListGroupVersionsInput
}

// ListGroupsMarshaler defines marshaler for ListGroups operation
type ListGroupsMarshaler struct {
	Input *types.ListGroupsInput
}

// ListLoggerDefinitionVersionsMarshaler defines marshaler for ListLoggerDefinitionVersions operation
type ListLoggerDefinitionVersionsMarshaler struct {
	Input *types.ListLoggerDefinitionVersionsInput
}

// ListLoggerDefinitionsMarshaler defines marshaler for ListLoggerDefinitions operation
type ListLoggerDefinitionsMarshaler struct {
	Input *types.ListLoggerDefinitionsInput
}

// ListResourceDefinitionVersionsMarshaler defines marshaler for ListResourceDefinitionVersions operation
type ListResourceDefinitionVersionsMarshaler struct {
	Input *types.ListResourceDefinitionVersionsInput
}

// ListResourceDefinitionsMarshaler defines marshaler for ListResourceDefinitions operation
type ListResourceDefinitionsMarshaler struct {
	Input *types.ListResourceDefinitionsInput
}

// ListSubscriptionDefinitionVersionsMarshaler defines marshaler for ListSubscriptionDefinitionVersions operation
type ListSubscriptionDefinitionVersionsMarshaler struct {
	Input *types.ListSubscriptionDefinitionVersionsInput
}

// ListSubscriptionDefinitionsMarshaler defines marshaler for ListSubscriptionDefinitions operation
type ListSubscriptionDefinitionsMarshaler struct {
	Input *types.ListSubscriptionDefinitionsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ResetDeploymentsMarshaler defines marshaler for ResetDeployments operation
type ResetDeploymentsMarshaler struct {
	Input *types.ResetDeploymentsInput
}

// StartBulkDeploymentMarshaler defines marshaler for StartBulkDeployment operation
type StartBulkDeploymentMarshaler struct {
	Input *types.StartBulkDeploymentInput
}

// StopBulkDeploymentMarshaler defines marshaler for StopBulkDeployment operation
type StopBulkDeploymentMarshaler struct {
	Input *types.StopBulkDeploymentInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateConnectivityInfoMarshaler defines marshaler for UpdateConnectivityInfo operation
type UpdateConnectivityInfoMarshaler struct {
	Input *types.UpdateConnectivityInfoInput
}

// UpdateConnectorDefinitionMarshaler defines marshaler for UpdateConnectorDefinition operation
type UpdateConnectorDefinitionMarshaler struct {
	Input *types.UpdateConnectorDefinitionInput
}

// UpdateCoreDefinitionMarshaler defines marshaler for UpdateCoreDefinition operation
type UpdateCoreDefinitionMarshaler struct {
	Input *types.UpdateCoreDefinitionInput
}

// UpdateDeviceDefinitionMarshaler defines marshaler for UpdateDeviceDefinition operation
type UpdateDeviceDefinitionMarshaler struct {
	Input *types.UpdateDeviceDefinitionInput
}

// UpdateFunctionDefinitionMarshaler defines marshaler for UpdateFunctionDefinition operation
type UpdateFunctionDefinitionMarshaler struct {
	Input *types.UpdateFunctionDefinitionInput
}

// UpdateGroupMarshaler defines marshaler for UpdateGroup operation
type UpdateGroupMarshaler struct {
	Input *types.UpdateGroupInput
}

// UpdateGroupCertificateConfigurationMarshaler defines marshaler for UpdateGroupCertificateConfiguration operation
type UpdateGroupCertificateConfigurationMarshaler struct {
	Input *types.UpdateGroupCertificateConfigurationInput
}

// UpdateLoggerDefinitionMarshaler defines marshaler for UpdateLoggerDefinition operation
type UpdateLoggerDefinitionMarshaler struct {
	Input *types.UpdateLoggerDefinitionInput
}

// UpdateResourceDefinitionMarshaler defines marshaler for UpdateResourceDefinition operation
type UpdateResourceDefinitionMarshaler struct {
	Input *types.UpdateResourceDefinitionInput
}

// UpdateSubscriptionDefinitionMarshaler defines marshaler for UpdateSubscriptionDefinition operation
type UpdateSubscriptionDefinitionMarshaler struct {
	Input *types.UpdateSubscriptionDefinitionInput
}

func MarshalAssociateRoleToGroupInputShapeAWSREST(v *types.AssociateRoleToGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalAssociateRoleToGroupInputShapeAWSJSON(v *types.AssociateRoleToGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalAssociateServiceRoleToAccountInputShapeAWSREST(v *types.AssociateServiceRoleToAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalAssociateServiceRoleToAccountInputShapeAWSJSON(v *types.AssociateServiceRoleToAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateConnectorDefinitionInputShapeAWSREST(v *types.CreateConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateConnectorDefinitionInputShapeAWSJSON(v *types.CreateConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateConnectorDefinitionVersionInputShapeAWSREST(v *types.CreateConnectorDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateConnectorDefinitionVersionInputShapeAWSJSON(v *types.CreateConnectorDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateCoreDefinitionInputShapeAWSREST(v *types.CreateCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateCoreDefinitionInputShapeAWSJSON(v *types.CreateCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateCoreDefinitionVersionInputShapeAWSREST(v *types.CreateCoreDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateCoreDefinitionVersionInputShapeAWSJSON(v *types.CreateCoreDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeploymentInputShapeAWSREST(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeploymentInputShapeAWSJSON(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeviceDefinitionInputShapeAWSREST(v *types.CreateDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeviceDefinitionInputShapeAWSJSON(v *types.CreateDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeviceDefinitionVersionInputShapeAWSREST(v *types.CreateDeviceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeviceDefinitionVersionInputShapeAWSJSON(v *types.CreateDeviceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateFunctionDefinitionInputShapeAWSREST(v *types.CreateFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateFunctionDefinitionInputShapeAWSJSON(v *types.CreateFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateFunctionDefinitionVersionInputShapeAWSREST(v *types.CreateFunctionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateFunctionDefinitionVersionInputShapeAWSJSON(v *types.CreateFunctionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateGroupInputShapeAWSREST(v *types.CreateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateGroupInputShapeAWSJSON(v *types.CreateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateGroupCertificateAuthorityInputShapeAWSREST(v *types.CreateGroupCertificateAuthorityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateGroupCertificateAuthorityInputShapeAWSJSON(v *types.CreateGroupCertificateAuthorityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateGroupVersionInputShapeAWSREST(v *types.CreateGroupVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateGroupVersionInputShapeAWSJSON(v *types.CreateGroupVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateLoggerDefinitionInputShapeAWSREST(v *types.CreateLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateLoggerDefinitionInputShapeAWSJSON(v *types.CreateLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateLoggerDefinitionVersionInputShapeAWSREST(v *types.CreateLoggerDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateLoggerDefinitionVersionInputShapeAWSJSON(v *types.CreateLoggerDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateResourceDefinitionInputShapeAWSREST(v *types.CreateResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateResourceDefinitionInputShapeAWSJSON(v *types.CreateResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateResourceDefinitionVersionInputShapeAWSREST(v *types.CreateResourceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateResourceDefinitionVersionInputShapeAWSJSON(v *types.CreateResourceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSoftwareUpdateJobInputShapeAWSREST(v *types.CreateSoftwareUpdateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSoftwareUpdateJobInputShapeAWSJSON(v *types.CreateSoftwareUpdateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSubscriptionDefinitionInputShapeAWSREST(v *types.CreateSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSubscriptionDefinitionInputShapeAWSJSON(v *types.CreateSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSubscriptionDefinitionVersionInputShapeAWSREST(v *types.CreateSubscriptionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSubscriptionDefinitionVersionInputShapeAWSJSON(v *types.CreateSubscriptionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteConnectorDefinitionInputShapeAWSREST(v *types.DeleteConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteConnectorDefinitionInputShapeAWSJSON(v *types.DeleteConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteCoreDefinitionInputShapeAWSREST(v *types.DeleteCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteCoreDefinitionInputShapeAWSJSON(v *types.DeleteCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteDeviceDefinitionInputShapeAWSREST(v *types.DeleteDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteDeviceDefinitionInputShapeAWSJSON(v *types.DeleteDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteFunctionDefinitionInputShapeAWSREST(v *types.DeleteFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteFunctionDefinitionInputShapeAWSJSON(v *types.DeleteFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteGroupInputShapeAWSREST(v *types.DeleteGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteGroupInputShapeAWSJSON(v *types.DeleteGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteLoggerDefinitionInputShapeAWSREST(v *types.DeleteLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteLoggerDefinitionInputShapeAWSJSON(v *types.DeleteLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteResourceDefinitionInputShapeAWSREST(v *types.DeleteResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteResourceDefinitionInputShapeAWSJSON(v *types.DeleteResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSubscriptionDefinitionInputShapeAWSREST(v *types.DeleteSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSubscriptionDefinitionInputShapeAWSJSON(v *types.DeleteSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateRoleFromGroupInputShapeAWSREST(v *types.DisassociateRoleFromGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateRoleFromGroupInputShapeAWSJSON(v *types.DisassociateRoleFromGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateServiceRoleFromAccountInputShapeAWSREST(v *types.DisassociateServiceRoleFromAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateServiceRoleFromAccountInputShapeAWSJSON(v *types.DisassociateServiceRoleFromAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetAssociatedRoleInputShapeAWSREST(v *types.GetAssociatedRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetAssociatedRoleInputShapeAWSJSON(v *types.GetAssociatedRoleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBulkDeploymentStatusInputShapeAWSREST(v *types.GetBulkDeploymentStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBulkDeploymentStatusInputShapeAWSJSON(v *types.GetBulkDeploymentStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetConnectivityInfoInputShapeAWSREST(v *types.GetConnectivityInfoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetConnectivityInfoInputShapeAWSJSON(v *types.GetConnectivityInfoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetConnectorDefinitionInputShapeAWSREST(v *types.GetConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetConnectorDefinitionInputShapeAWSJSON(v *types.GetConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetConnectorDefinitionVersionInputShapeAWSREST(v *types.GetConnectorDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetConnectorDefinitionVersionInputShapeAWSJSON(v *types.GetConnectorDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCoreDefinitionInputShapeAWSREST(v *types.GetCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCoreDefinitionInputShapeAWSJSON(v *types.GetCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetCoreDefinitionVersionInputShapeAWSREST(v *types.GetCoreDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetCoreDefinitionVersionInputShapeAWSJSON(v *types.GetCoreDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeploymentStatusInputShapeAWSREST(v *types.GetDeploymentStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeploymentStatusInputShapeAWSJSON(v *types.GetDeploymentStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeviceDefinitionInputShapeAWSREST(v *types.GetDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeviceDefinitionInputShapeAWSJSON(v *types.GetDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDeviceDefinitionVersionInputShapeAWSREST(v *types.GetDeviceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDeviceDefinitionVersionInputShapeAWSJSON(v *types.GetDeviceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetFunctionDefinitionInputShapeAWSREST(v *types.GetFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetFunctionDefinitionInputShapeAWSJSON(v *types.GetFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetFunctionDefinitionVersionInputShapeAWSREST(v *types.GetFunctionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetFunctionDefinitionVersionInputShapeAWSJSON(v *types.GetFunctionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGroupInputShapeAWSREST(v *types.GetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGroupInputShapeAWSJSON(v *types.GetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGroupCertificateAuthorityInputShapeAWSREST(v *types.GetGroupCertificateAuthorityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGroupCertificateAuthorityInputShapeAWSJSON(v *types.GetGroupCertificateAuthorityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGroupCertificateConfigurationInputShapeAWSREST(v *types.GetGroupCertificateConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGroupCertificateConfigurationInputShapeAWSJSON(v *types.GetGroupCertificateConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGroupVersionInputShapeAWSREST(v *types.GetGroupVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGroupVersionInputShapeAWSJSON(v *types.GetGroupVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetLoggerDefinitionInputShapeAWSREST(v *types.GetLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetLoggerDefinitionInputShapeAWSJSON(v *types.GetLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetLoggerDefinitionVersionInputShapeAWSREST(v *types.GetLoggerDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetLoggerDefinitionVersionInputShapeAWSJSON(v *types.GetLoggerDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetResourceDefinitionInputShapeAWSREST(v *types.GetResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetResourceDefinitionInputShapeAWSJSON(v *types.GetResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetResourceDefinitionVersionInputShapeAWSREST(v *types.GetResourceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetResourceDefinitionVersionInputShapeAWSJSON(v *types.GetResourceDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetServiceRoleForAccountInputShapeAWSREST(v *types.GetServiceRoleForAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetServiceRoleForAccountInputShapeAWSJSON(v *types.GetServiceRoleForAccountInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSubscriptionDefinitionInputShapeAWSREST(v *types.GetSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSubscriptionDefinitionInputShapeAWSJSON(v *types.GetSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSubscriptionDefinitionVersionInputShapeAWSREST(v *types.GetSubscriptionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSubscriptionDefinitionVersionInputShapeAWSJSON(v *types.GetSubscriptionDefinitionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBulkDeploymentDetailedReportsInputShapeAWSREST(v *types.ListBulkDeploymentDetailedReportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBulkDeploymentDetailedReportsInputShapeAWSJSON(v *types.ListBulkDeploymentDetailedReportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBulkDeploymentsInputShapeAWSREST(v *types.ListBulkDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBulkDeploymentsInputShapeAWSJSON(v *types.ListBulkDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListConnectorDefinitionVersionsInputShapeAWSREST(v *types.ListConnectorDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListConnectorDefinitionVersionsInputShapeAWSJSON(v *types.ListConnectorDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListConnectorDefinitionsInputShapeAWSREST(v *types.ListConnectorDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListConnectorDefinitionsInputShapeAWSJSON(v *types.ListConnectorDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListCoreDefinitionVersionsInputShapeAWSREST(v *types.ListCoreDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListCoreDefinitionVersionsInputShapeAWSJSON(v *types.ListCoreDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListCoreDefinitionsInputShapeAWSREST(v *types.ListCoreDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListCoreDefinitionsInputShapeAWSJSON(v *types.ListCoreDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDeploymentsInputShapeAWSREST(v *types.ListDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDeploymentsInputShapeAWSJSON(v *types.ListDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDeviceDefinitionVersionsInputShapeAWSREST(v *types.ListDeviceDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDeviceDefinitionVersionsInputShapeAWSJSON(v *types.ListDeviceDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDeviceDefinitionsInputShapeAWSREST(v *types.ListDeviceDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDeviceDefinitionsInputShapeAWSJSON(v *types.ListDeviceDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListFunctionDefinitionVersionsInputShapeAWSREST(v *types.ListFunctionDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListFunctionDefinitionVersionsInputShapeAWSJSON(v *types.ListFunctionDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListFunctionDefinitionsInputShapeAWSREST(v *types.ListFunctionDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListFunctionDefinitionsInputShapeAWSJSON(v *types.ListFunctionDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListGroupCertificateAuthoritiesInputShapeAWSREST(v *types.ListGroupCertificateAuthoritiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListGroupCertificateAuthoritiesInputShapeAWSJSON(v *types.ListGroupCertificateAuthoritiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListGroupVersionsInputShapeAWSREST(v *types.ListGroupVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListGroupVersionsInputShapeAWSJSON(v *types.ListGroupVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListGroupsInputShapeAWSREST(v *types.ListGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListGroupsInputShapeAWSJSON(v *types.ListGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListLoggerDefinitionVersionsInputShapeAWSREST(v *types.ListLoggerDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListLoggerDefinitionVersionsInputShapeAWSJSON(v *types.ListLoggerDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListLoggerDefinitionsInputShapeAWSREST(v *types.ListLoggerDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListLoggerDefinitionsInputShapeAWSJSON(v *types.ListLoggerDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListResourceDefinitionVersionsInputShapeAWSREST(v *types.ListResourceDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListResourceDefinitionVersionsInputShapeAWSJSON(v *types.ListResourceDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListResourceDefinitionsInputShapeAWSREST(v *types.ListResourceDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListResourceDefinitionsInputShapeAWSJSON(v *types.ListResourceDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSubscriptionDefinitionVersionsInputShapeAWSREST(v *types.ListSubscriptionDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSubscriptionDefinitionVersionsInputShapeAWSJSON(v *types.ListSubscriptionDefinitionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSubscriptionDefinitionsInputShapeAWSREST(v *types.ListSubscriptionDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSubscriptionDefinitionsInputShapeAWSJSON(v *types.ListSubscriptionDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalResetDeploymentsInputShapeAWSREST(v *types.ResetDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalResetDeploymentsInputShapeAWSJSON(v *types.ResetDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartBulkDeploymentInputShapeAWSREST(v *types.StartBulkDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartBulkDeploymentInputShapeAWSJSON(v *types.StartBulkDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStopBulkDeploymentInputShapeAWSREST(v *types.StopBulkDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStopBulkDeploymentInputShapeAWSJSON(v *types.StopBulkDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateConnectivityInfoInputShapeAWSREST(v *types.UpdateConnectivityInfoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateConnectivityInfoInputShapeAWSJSON(v *types.UpdateConnectivityInfoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateConnectorDefinitionInputShapeAWSREST(v *types.UpdateConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateConnectorDefinitionInputShapeAWSJSON(v *types.UpdateConnectorDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateCoreDefinitionInputShapeAWSREST(v *types.UpdateCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateCoreDefinitionInputShapeAWSJSON(v *types.UpdateCoreDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateDeviceDefinitionInputShapeAWSREST(v *types.UpdateDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateDeviceDefinitionInputShapeAWSJSON(v *types.UpdateDeviceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateFunctionDefinitionInputShapeAWSREST(v *types.UpdateFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateFunctionDefinitionInputShapeAWSJSON(v *types.UpdateFunctionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateGroupInputShapeAWSREST(v *types.UpdateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateGroupInputShapeAWSJSON(v *types.UpdateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateGroupCertificateConfigurationInputShapeAWSREST(v *types.UpdateGroupCertificateConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateGroupCertificateConfigurationInputShapeAWSJSON(v *types.UpdateGroupCertificateConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateLoggerDefinitionInputShapeAWSREST(v *types.UpdateLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateLoggerDefinitionInputShapeAWSJSON(v *types.UpdateLoggerDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateResourceDefinitionInputShapeAWSREST(v *types.UpdateResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateResourceDefinitionInputShapeAWSJSON(v *types.UpdateResourceDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateSubscriptionDefinitionInputShapeAWSREST(v *types.UpdateSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateSubscriptionDefinitionInputShapeAWSJSON(v *types.UpdateSubscriptionDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m AssociateRoleToGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateRoleToGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalAssociateRoleToGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateRoleToGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateRoleToGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateServiceRoleToAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateServiceRoleToAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalAssociateServiceRoleToAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateServiceRoleToAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateServiceRoleToAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateConnectorDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConnectorDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateConnectorDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConnectorDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConnectorDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateConnectorDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConnectorDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateConnectorDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConnectorDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConnectorDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCoreDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCoreDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateCoreDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCoreDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCoreDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCoreDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCoreDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateCoreDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCoreDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCoreDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeviceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeviceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeviceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeviceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeviceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeviceDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeviceDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeviceDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeviceDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeviceDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFunctionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFunctionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateFunctionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFunctionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFunctionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFunctionDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFunctionDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateFunctionDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFunctionDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFunctionDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGroupCertificateAuthorityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGroupCertificateAuthorityInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateGroupCertificateAuthorityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGroupCertificateAuthorityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGroupCertificateAuthority.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGroupVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGroupVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateGroupVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGroupVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGroupVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoggerDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoggerDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateLoggerDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoggerDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoggerDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoggerDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoggerDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateLoggerDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoggerDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoggerDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateResourceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateResourceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateResourceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateResourceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateResourceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateResourceDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateResourceDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateResourceDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateResourceDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateResourceDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSoftwareUpdateJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSoftwareUpdateJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSoftwareUpdateJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSoftwareUpdateJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSoftwareUpdateJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSubscriptionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSubscriptionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSubscriptionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSubscriptionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSubscriptionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSubscriptionDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSubscriptionDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSubscriptionDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSubscriptionDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSubscriptionDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConnectorDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConnectorDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteConnectorDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConnectorDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConnectorDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCoreDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCoreDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteCoreDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCoreDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCoreDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDeviceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDeviceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteDeviceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDeviceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDeviceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFunctionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFunctionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteFunctionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFunctionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFunctionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoggerDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoggerDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteLoggerDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoggerDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoggerDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteResourceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteResourceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteResourceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteResourceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteResourceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSubscriptionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSubscriptionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSubscriptionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSubscriptionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSubscriptionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateRoleFromGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateRoleFromGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateRoleFromGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateRoleFromGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateRoleFromGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateServiceRoleFromAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateServiceRoleFromAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateServiceRoleFromAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateServiceRoleFromAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateServiceRoleFromAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAssociatedRoleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAssociatedRoleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetAssociatedRoleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAssociatedRoleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAssociatedRole.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBulkDeploymentStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBulkDeploymentStatusInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBulkDeploymentStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBulkDeploymentStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBulkDeploymentStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConnectivityInfoMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConnectivityInfoInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetConnectivityInfoInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConnectivityInfoMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConnectivityInfo.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConnectorDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConnectorDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetConnectorDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConnectorDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConnectorDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConnectorDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConnectorDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetConnectorDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConnectorDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConnectorDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCoreDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCoreDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCoreDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCoreDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCoreDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCoreDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCoreDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetCoreDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCoreDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCoreDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentStatusInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeploymentStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeploymentStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeviceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeviceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeviceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeviceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeviceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeviceDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeviceDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDeviceDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeviceDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeviceDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFunctionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFunctionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetFunctionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFunctionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFunctionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetFunctionDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetFunctionDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetFunctionDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetFunctionDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetFunctionDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupCertificateAuthorityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupCertificateAuthorityInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGroupCertificateAuthorityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupCertificateAuthorityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroupCertificateAuthority.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupCertificateConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupCertificateConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGroupCertificateConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupCertificateConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroupCertificateConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGroupVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroupVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoggerDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoggerDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetLoggerDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoggerDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoggerDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLoggerDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLoggerDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetLoggerDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLoggerDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLoggerDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetResourceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetResourceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetResourceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetResourceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetResourceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetResourceDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetResourceDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetResourceDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetResourceDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetResourceDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServiceRoleForAccountMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServiceRoleForAccountInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetServiceRoleForAccountInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServiceRoleForAccountMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetServiceRoleForAccount.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSubscriptionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSubscriptionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSubscriptionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSubscriptionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSubscriptionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSubscriptionDefinitionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSubscriptionDefinitionVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSubscriptionDefinitionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSubscriptionDefinitionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSubscriptionDefinitionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBulkDeploymentDetailedReportsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBulkDeploymentDetailedReportsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBulkDeploymentDetailedReportsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBulkDeploymentDetailedReportsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBulkDeploymentDetailedReports.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBulkDeploymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBulkDeploymentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBulkDeploymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBulkDeploymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBulkDeployments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListConnectorDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListConnectorDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListConnectorDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListConnectorDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListConnectorDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListConnectorDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListConnectorDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListConnectorDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListConnectorDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListConnectorDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCoreDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCoreDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListCoreDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCoreDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCoreDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCoreDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCoreDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListCoreDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCoreDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCoreDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDeploymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeployments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeviceDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeviceDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDeviceDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeviceDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeviceDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeviceDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeviceDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDeviceDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeviceDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeviceDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFunctionDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFunctionDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListFunctionDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFunctionDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFunctionDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFunctionDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFunctionDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListFunctionDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFunctionDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFunctionDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupCertificateAuthoritiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupCertificateAuthoritiesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListGroupCertificateAuthoritiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupCertificateAuthoritiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroupCertificateAuthorities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListGroupVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroupVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLoggerDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLoggerDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListLoggerDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLoggerDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLoggerDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLoggerDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLoggerDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListLoggerDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLoggerDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLoggerDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourceDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourceDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListResourceDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourceDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResourceDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourceDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourceDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListResourceDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourceDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResourceDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSubscriptionDefinitionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSubscriptionDefinitionVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSubscriptionDefinitionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSubscriptionDefinitionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSubscriptionDefinitionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSubscriptionDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSubscriptionDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSubscriptionDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSubscriptionDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSubscriptionDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetDeploymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetDeploymentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalResetDeploymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetDeploymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetDeployments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartBulkDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartBulkDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartBulkDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartBulkDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartBulkDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopBulkDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopBulkDeploymentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStopBulkDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopBulkDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopBulkDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateConnectivityInfoMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateConnectivityInfoInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateConnectivityInfoInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateConnectivityInfoMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateConnectivityInfo.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateConnectorDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateConnectorDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateConnectorDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateConnectorDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateConnectorDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateCoreDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateCoreDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateCoreDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateCoreDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateCoreDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDeviceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDeviceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateDeviceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDeviceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDeviceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFunctionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFunctionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateFunctionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFunctionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFunctionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGroupCertificateConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGroupCertificateConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateGroupCertificateConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGroupCertificateConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGroupCertificateConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateLoggerDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateLoggerDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateLoggerDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateLoggerDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateLoggerDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateResourceDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateResourceDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateResourceDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateResourceDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateResourceDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSubscriptionDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSubscriptionDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateSubscriptionDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSubscriptionDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSubscriptionDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
