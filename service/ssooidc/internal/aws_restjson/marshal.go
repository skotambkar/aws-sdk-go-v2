// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/ssooidc/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateTokenMarshaler defines marshaler for CreateToken operation
type CreateTokenMarshaler struct {
	Input *types.CreateTokenInput
}

// RegisterClientMarshaler defines marshaler for RegisterClient operation
type RegisterClientMarshaler struct {
	Input *types.RegisterClientInput
}

// StartDeviceAuthorizationMarshaler defines marshaler for StartDeviceAuthorization operation
type StartDeviceAuthorizationMarshaler struct {
	Input *types.StartDeviceAuthorizationInput
}

func MarshalCreateTokenInputShapeAWSREST(v *types.CreateTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateTokenInputShapeAWSJSON(v *types.CreateTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalRegisterClientInputShapeAWSREST(v *types.RegisterClientInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalRegisterClientInputShapeAWSJSON(v *types.RegisterClientInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartDeviceAuthorizationInputShapeAWSREST(v *types.StartDeviceAuthorizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartDeviceAuthorizationInputShapeAWSJSON(v *types.StartDeviceAuthorizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTokenInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateTokenInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterClientMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterClientInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalRegisterClientInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterClientMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterClient.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartDeviceAuthorizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartDeviceAuthorizationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartDeviceAuthorizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartDeviceAuthorizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartDeviceAuthorization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
