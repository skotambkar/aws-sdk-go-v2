// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/kms/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelKeyDeletionMarshaler defines marshaler for CancelKeyDeletion operation
type CancelKeyDeletionMarshaler struct {
	Input *types.CancelKeyDeletionInput
}

// ConnectCustomKeyStoreMarshaler defines marshaler for ConnectCustomKeyStore operation
type ConnectCustomKeyStoreMarshaler struct {
	Input *types.ConnectCustomKeyStoreInput
}

// CreateAliasMarshaler defines marshaler for CreateAlias operation
type CreateAliasMarshaler struct {
	Input *types.CreateAliasInput
}

// CreateCustomKeyStoreMarshaler defines marshaler for CreateCustomKeyStore operation
type CreateCustomKeyStoreMarshaler struct {
	Input *types.CreateCustomKeyStoreInput
}

// CreateGrantMarshaler defines marshaler for CreateGrant operation
type CreateGrantMarshaler struct {
	Input *types.CreateGrantInput
}

// CreateKeyMarshaler defines marshaler for CreateKey operation
type CreateKeyMarshaler struct {
	Input *types.CreateKeyInput
}

// DecryptMarshaler defines marshaler for Decrypt operation
type DecryptMarshaler struct {
	Input *types.DecryptInput
}

// DeleteAliasMarshaler defines marshaler for DeleteAlias operation
type DeleteAliasMarshaler struct {
	Input *types.DeleteAliasInput
}

// DeleteCustomKeyStoreMarshaler defines marshaler for DeleteCustomKeyStore operation
type DeleteCustomKeyStoreMarshaler struct {
	Input *types.DeleteCustomKeyStoreInput
}

// DeleteImportedKeyMaterialMarshaler defines marshaler for DeleteImportedKeyMaterial operation
type DeleteImportedKeyMaterialMarshaler struct {
	Input *types.DeleteImportedKeyMaterialInput
}

// DescribeCustomKeyStoresMarshaler defines marshaler for DescribeCustomKeyStores operation
type DescribeCustomKeyStoresMarshaler struct {
	Input *types.DescribeCustomKeyStoresInput
}

// DescribeKeyMarshaler defines marshaler for DescribeKey operation
type DescribeKeyMarshaler struct {
	Input *types.DescribeKeyInput
}

// DisableKeyMarshaler defines marshaler for DisableKey operation
type DisableKeyMarshaler struct {
	Input *types.DisableKeyInput
}

// DisableKeyRotationMarshaler defines marshaler for DisableKeyRotation operation
type DisableKeyRotationMarshaler struct {
	Input *types.DisableKeyRotationInput
}

// DisconnectCustomKeyStoreMarshaler defines marshaler for DisconnectCustomKeyStore operation
type DisconnectCustomKeyStoreMarshaler struct {
	Input *types.DisconnectCustomKeyStoreInput
}

// EnableKeyMarshaler defines marshaler for EnableKey operation
type EnableKeyMarshaler struct {
	Input *types.EnableKeyInput
}

// EnableKeyRotationMarshaler defines marshaler for EnableKeyRotation operation
type EnableKeyRotationMarshaler struct {
	Input *types.EnableKeyRotationInput
}

// EncryptMarshaler defines marshaler for Encrypt operation
type EncryptMarshaler struct {
	Input *types.EncryptInput
}

// GenerateDataKeyMarshaler defines marshaler for GenerateDataKey operation
type GenerateDataKeyMarshaler struct {
	Input *types.GenerateDataKeyInput
}

// GenerateDataKeyWithoutPlaintextMarshaler defines marshaler for GenerateDataKeyWithoutPlaintext operation
type GenerateDataKeyWithoutPlaintextMarshaler struct {
	Input *types.GenerateDataKeyWithoutPlaintextInput
}

// GenerateRandomMarshaler defines marshaler for GenerateRandom operation
type GenerateRandomMarshaler struct {
	Input *types.GenerateRandomInput
}

// GetKeyPolicyMarshaler defines marshaler for GetKeyPolicy operation
type GetKeyPolicyMarshaler struct {
	Input *types.GetKeyPolicyInput
}

// GetKeyRotationStatusMarshaler defines marshaler for GetKeyRotationStatus operation
type GetKeyRotationStatusMarshaler struct {
	Input *types.GetKeyRotationStatusInput
}

// GetParametersForImportMarshaler defines marshaler for GetParametersForImport operation
type GetParametersForImportMarshaler struct {
	Input *types.GetParametersForImportInput
}

// ImportKeyMaterialMarshaler defines marshaler for ImportKeyMaterial operation
type ImportKeyMaterialMarshaler struct {
	Input *types.ImportKeyMaterialInput
}

// ListAliasesMarshaler defines marshaler for ListAliases operation
type ListAliasesMarshaler struct {
	Input *types.ListAliasesInput
}

// ListGrantsMarshaler defines marshaler for ListGrants operation
type ListGrantsMarshaler struct {
	Input *types.ListGrantsInput
}

// ListKeyPoliciesMarshaler defines marshaler for ListKeyPolicies operation
type ListKeyPoliciesMarshaler struct {
	Input *types.ListKeyPoliciesInput
}

// ListKeysMarshaler defines marshaler for ListKeys operation
type ListKeysMarshaler struct {
	Input *types.ListKeysInput
}

// ListResourceTagsMarshaler defines marshaler for ListResourceTags operation
type ListResourceTagsMarshaler struct {
	Input *types.ListResourceTagsInput
}

// ListRetirableGrantsMarshaler defines marshaler for ListRetirableGrants operation
type ListRetirableGrantsMarshaler struct {
	Input *types.ListRetirableGrantsInput
}

// PutKeyPolicyMarshaler defines marshaler for PutKeyPolicy operation
type PutKeyPolicyMarshaler struct {
	Input *types.PutKeyPolicyInput
}

// ReEncryptMarshaler defines marshaler for ReEncrypt operation
type ReEncryptMarshaler struct {
	Input *types.ReEncryptInput
}

// RetireGrantMarshaler defines marshaler for RetireGrant operation
type RetireGrantMarshaler struct {
	Input *types.RetireGrantInput
}

// RevokeGrantMarshaler defines marshaler for RevokeGrant operation
type RevokeGrantMarshaler struct {
	Input *types.RevokeGrantInput
}

// ScheduleKeyDeletionMarshaler defines marshaler for ScheduleKeyDeletion operation
type ScheduleKeyDeletionMarshaler struct {
	Input *types.ScheduleKeyDeletionInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateAliasMarshaler defines marshaler for UpdateAlias operation
type UpdateAliasMarshaler struct {
	Input *types.UpdateAliasInput
}

// UpdateCustomKeyStoreMarshaler defines marshaler for UpdateCustomKeyStore operation
type UpdateCustomKeyStoreMarshaler struct {
	Input *types.UpdateCustomKeyStoreInput
}

// UpdateKeyDescriptionMarshaler defines marshaler for UpdateKeyDescription operation
type UpdateKeyDescriptionMarshaler struct {
	Input *types.UpdateKeyDescriptionInput
}

func MarshalCancelKeyDeletionInputShapeAWSJSON(v *types.CancelKeyDeletionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalConnectCustomKeyStoreInputShapeAWSJSON(v *types.ConnectCustomKeyStoreInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateAliasInputShapeAWSJSON(v *types.CreateAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCustomKeyStoreInputShapeAWSJSON(v *types.CreateCustomKeyStoreInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateGrantInputShapeAWSJSON(v *types.CreateGrantInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateKeyInputShapeAWSJSON(v *types.CreateKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDecryptInputShapeAWSJSON(v *types.DecryptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteAliasInputShapeAWSJSON(v *types.DeleteAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteCustomKeyStoreInputShapeAWSJSON(v *types.DeleteCustomKeyStoreInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteImportedKeyMaterialInputShapeAWSJSON(v *types.DeleteImportedKeyMaterialInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCustomKeyStoresInputShapeAWSJSON(v *types.DescribeCustomKeyStoresInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeKeyInputShapeAWSJSON(v *types.DescribeKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableKeyInputShapeAWSJSON(v *types.DisableKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableKeyRotationInputShapeAWSJSON(v *types.DisableKeyRotationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisconnectCustomKeyStoreInputShapeAWSJSON(v *types.DisconnectCustomKeyStoreInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableKeyInputShapeAWSJSON(v *types.EnableKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableKeyRotationInputShapeAWSJSON(v *types.EnableKeyRotationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEncryptInputShapeAWSJSON(v *types.EncryptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGenerateDataKeyInputShapeAWSJSON(v *types.GenerateDataKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGenerateDataKeyWithoutPlaintextInputShapeAWSJSON(v *types.GenerateDataKeyWithoutPlaintextInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGenerateRandomInputShapeAWSJSON(v *types.GenerateRandomInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetKeyPolicyInputShapeAWSJSON(v *types.GetKeyPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetKeyRotationStatusInputShapeAWSJSON(v *types.GetKeyRotationStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetParametersForImportInputShapeAWSJSON(v *types.GetParametersForImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalImportKeyMaterialInputShapeAWSJSON(v *types.ImportKeyMaterialInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAliasesInputShapeAWSJSON(v *types.ListAliasesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListGrantsInputShapeAWSJSON(v *types.ListGrantsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListKeyPoliciesInputShapeAWSJSON(v *types.ListKeyPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListKeysInputShapeAWSJSON(v *types.ListKeysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListResourceTagsInputShapeAWSJSON(v *types.ListResourceTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRetirableGrantsInputShapeAWSJSON(v *types.ListRetirableGrantsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutKeyPolicyInputShapeAWSJSON(v *types.PutKeyPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalReEncryptInputShapeAWSJSON(v *types.ReEncryptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRetireGrantInputShapeAWSJSON(v *types.RetireGrantInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRevokeGrantInputShapeAWSJSON(v *types.RevokeGrantInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalScheduleKeyDeletionInputShapeAWSJSON(v *types.ScheduleKeyDeletionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateAliasInputShapeAWSJSON(v *types.UpdateAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateCustomKeyStoreInputShapeAWSJSON(v *types.UpdateCustomKeyStoreInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateKeyDescriptionInputShapeAWSJSON(v *types.UpdateKeyDescriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CancelKeyDeletionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelKeyDeletionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelKeyDeletionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelKeyDeletion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConnectCustomKeyStoreMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConnectCustomKeyStoreInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConnectCustomKeyStoreMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConnectCustomKeyStore.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCustomKeyStoreMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCustomKeyStoreInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCustomKeyStoreMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCustomKeyStore.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGrantMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGrantInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGrantMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGrant.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DecryptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDecryptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DecryptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Decrypt.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCustomKeyStoreMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCustomKeyStoreInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCustomKeyStoreMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCustomKeyStore.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteImportedKeyMaterialMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteImportedKeyMaterialInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteImportedKeyMaterialMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteImportedKeyMaterial.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCustomKeyStoresMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCustomKeyStoresInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCustomKeyStoresMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCustomKeyStores.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableKeyRotationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableKeyRotationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableKeyRotationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableKeyRotation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisconnectCustomKeyStoreMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisconnectCustomKeyStoreInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisconnectCustomKeyStoreMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisconnectCustomKeyStore.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableKeyRotationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableKeyRotationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableKeyRotationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableKeyRotation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EncryptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEncryptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EncryptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Encrypt.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateDataKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateDataKeyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateDataKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateDataKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateDataKeyWithoutPlaintextMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateDataKeyWithoutPlaintextInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateDataKeyWithoutPlaintextMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateDataKeyWithoutPlaintext.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GenerateRandomMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGenerateRandomInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GenerateRandomMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GenerateRandom.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetKeyPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetKeyPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetKeyPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetKeyPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetKeyRotationStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetKeyRotationStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetKeyRotationStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetKeyRotationStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetParametersForImportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetParametersForImportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetParametersForImportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetParametersForImport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportKeyMaterialMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportKeyMaterialInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportKeyMaterialMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportKeyMaterial.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAliasesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAliasesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAliasesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAliases.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGrantsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGrantsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGrantsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGrants.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListKeyPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListKeyPoliciesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListKeyPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListKeyPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListKeysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListKeysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListKeysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListKeys.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourceTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourceTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourceTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResourceTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRetirableGrantsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRetirableGrantsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRetirableGrantsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRetirableGrants.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutKeyPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutKeyPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutKeyPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutKeyPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReEncryptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReEncryptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReEncryptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReEncrypt.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RetireGrantMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRetireGrantInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RetireGrantMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RetireGrant.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeGrantMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeGrantInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeGrantMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeGrant.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ScheduleKeyDeletionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalScheduleKeyDeletionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ScheduleKeyDeletionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ScheduleKeyDeletion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateCustomKeyStoreMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateCustomKeyStoreInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateCustomKeyStoreMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateCustomKeyStore.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateKeyDescriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateKeyDescriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateKeyDescriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateKeyDescription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
