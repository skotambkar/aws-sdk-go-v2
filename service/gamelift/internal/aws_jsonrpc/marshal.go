// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/gamelift/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptMatchMarshaler defines marshaler for AcceptMatch operation
type AcceptMatchMarshaler struct {
	Input *types.AcceptMatchInput
}

// CreateAliasMarshaler defines marshaler for CreateAlias operation
type CreateAliasMarshaler struct {
	Input *types.CreateAliasInput
}

// CreateBuildMarshaler defines marshaler for CreateBuild operation
type CreateBuildMarshaler struct {
	Input *types.CreateBuildInput
}

// CreateFleetMarshaler defines marshaler for CreateFleet operation
type CreateFleetMarshaler struct {
	Input *types.CreateFleetInput
}

// CreateGameSessionMarshaler defines marshaler for CreateGameSession operation
type CreateGameSessionMarshaler struct {
	Input *types.CreateGameSessionInput
}

// CreateGameSessionQueueMarshaler defines marshaler for CreateGameSessionQueue operation
type CreateGameSessionQueueMarshaler struct {
	Input *types.CreateGameSessionQueueInput
}

// CreateMatchmakingConfigurationMarshaler defines marshaler for CreateMatchmakingConfiguration operation
type CreateMatchmakingConfigurationMarshaler struct {
	Input *types.CreateMatchmakingConfigurationInput
}

// CreateMatchmakingRuleSetMarshaler defines marshaler for CreateMatchmakingRuleSet operation
type CreateMatchmakingRuleSetMarshaler struct {
	Input *types.CreateMatchmakingRuleSetInput
}

// CreatePlayerSessionMarshaler defines marshaler for CreatePlayerSession operation
type CreatePlayerSessionMarshaler struct {
	Input *types.CreatePlayerSessionInput
}

// CreatePlayerSessionsMarshaler defines marshaler for CreatePlayerSessions operation
type CreatePlayerSessionsMarshaler struct {
	Input *types.CreatePlayerSessionsInput
}

// CreateScriptMarshaler defines marshaler for CreateScript operation
type CreateScriptMarshaler struct {
	Input *types.CreateScriptInput
}

// CreateVpcPeeringAuthorizationMarshaler defines marshaler for CreateVpcPeeringAuthorization operation
type CreateVpcPeeringAuthorizationMarshaler struct {
	Input *types.CreateVpcPeeringAuthorizationInput
}

// CreateVpcPeeringConnectionMarshaler defines marshaler for CreateVpcPeeringConnection operation
type CreateVpcPeeringConnectionMarshaler struct {
	Input *types.CreateVpcPeeringConnectionInput
}

// DeleteAliasMarshaler defines marshaler for DeleteAlias operation
type DeleteAliasMarshaler struct {
	Input *types.DeleteAliasInput
}

// DeleteBuildMarshaler defines marshaler for DeleteBuild operation
type DeleteBuildMarshaler struct {
	Input *types.DeleteBuildInput
}

// DeleteFleetMarshaler defines marshaler for DeleteFleet operation
type DeleteFleetMarshaler struct {
	Input *types.DeleteFleetInput
}

// DeleteGameSessionQueueMarshaler defines marshaler for DeleteGameSessionQueue operation
type DeleteGameSessionQueueMarshaler struct {
	Input *types.DeleteGameSessionQueueInput
}

// DeleteMatchmakingConfigurationMarshaler defines marshaler for DeleteMatchmakingConfiguration operation
type DeleteMatchmakingConfigurationMarshaler struct {
	Input *types.DeleteMatchmakingConfigurationInput
}

// DeleteMatchmakingRuleSetMarshaler defines marshaler for DeleteMatchmakingRuleSet operation
type DeleteMatchmakingRuleSetMarshaler struct {
	Input *types.DeleteMatchmakingRuleSetInput
}

// DeleteScalingPolicyMarshaler defines marshaler for DeleteScalingPolicy operation
type DeleteScalingPolicyMarshaler struct {
	Input *types.DeleteScalingPolicyInput
}

// DeleteScriptMarshaler defines marshaler for DeleteScript operation
type DeleteScriptMarshaler struct {
	Input *types.DeleteScriptInput
}

// DeleteVpcPeeringAuthorizationMarshaler defines marshaler for DeleteVpcPeeringAuthorization operation
type DeleteVpcPeeringAuthorizationMarshaler struct {
	Input *types.DeleteVpcPeeringAuthorizationInput
}

// DeleteVpcPeeringConnectionMarshaler defines marshaler for DeleteVpcPeeringConnection operation
type DeleteVpcPeeringConnectionMarshaler struct {
	Input *types.DeleteVpcPeeringConnectionInput
}

// DescribeAliasMarshaler defines marshaler for DescribeAlias operation
type DescribeAliasMarshaler struct {
	Input *types.DescribeAliasInput
}

// DescribeBuildMarshaler defines marshaler for DescribeBuild operation
type DescribeBuildMarshaler struct {
	Input *types.DescribeBuildInput
}

// DescribeEC2InstanceLimitsMarshaler defines marshaler for DescribeEC2InstanceLimits operation
type DescribeEC2InstanceLimitsMarshaler struct {
	Input *types.DescribeEC2InstanceLimitsInput
}

// DescribeFleetAttributesMarshaler defines marshaler for DescribeFleetAttributes operation
type DescribeFleetAttributesMarshaler struct {
	Input *types.DescribeFleetAttributesInput
}

// DescribeFleetCapacityMarshaler defines marshaler for DescribeFleetCapacity operation
type DescribeFleetCapacityMarshaler struct {
	Input *types.DescribeFleetCapacityInput
}

// DescribeFleetEventsMarshaler defines marshaler for DescribeFleetEvents operation
type DescribeFleetEventsMarshaler struct {
	Input *types.DescribeFleetEventsInput
}

// DescribeFleetPortSettingsMarshaler defines marshaler for DescribeFleetPortSettings operation
type DescribeFleetPortSettingsMarshaler struct {
	Input *types.DescribeFleetPortSettingsInput
}

// DescribeFleetUtilizationMarshaler defines marshaler for DescribeFleetUtilization operation
type DescribeFleetUtilizationMarshaler struct {
	Input *types.DescribeFleetUtilizationInput
}

// DescribeGameSessionDetailsMarshaler defines marshaler for DescribeGameSessionDetails operation
type DescribeGameSessionDetailsMarshaler struct {
	Input *types.DescribeGameSessionDetailsInput
}

// DescribeGameSessionPlacementMarshaler defines marshaler for DescribeGameSessionPlacement operation
type DescribeGameSessionPlacementMarshaler struct {
	Input *types.DescribeGameSessionPlacementInput
}

// DescribeGameSessionQueuesMarshaler defines marshaler for DescribeGameSessionQueues operation
type DescribeGameSessionQueuesMarshaler struct {
	Input *types.DescribeGameSessionQueuesInput
}

// DescribeGameSessionsMarshaler defines marshaler for DescribeGameSessions operation
type DescribeGameSessionsMarshaler struct {
	Input *types.DescribeGameSessionsInput
}

// DescribeInstancesMarshaler defines marshaler for DescribeInstances operation
type DescribeInstancesMarshaler struct {
	Input *types.DescribeInstancesInput
}

// DescribeMatchmakingMarshaler defines marshaler for DescribeMatchmaking operation
type DescribeMatchmakingMarshaler struct {
	Input *types.DescribeMatchmakingInput
}

// DescribeMatchmakingConfigurationsMarshaler defines marshaler for DescribeMatchmakingConfigurations operation
type DescribeMatchmakingConfigurationsMarshaler struct {
	Input *types.DescribeMatchmakingConfigurationsInput
}

// DescribeMatchmakingRuleSetsMarshaler defines marshaler for DescribeMatchmakingRuleSets operation
type DescribeMatchmakingRuleSetsMarshaler struct {
	Input *types.DescribeMatchmakingRuleSetsInput
}

// DescribePlayerSessionsMarshaler defines marshaler for DescribePlayerSessions operation
type DescribePlayerSessionsMarshaler struct {
	Input *types.DescribePlayerSessionsInput
}

// DescribeRuntimeConfigurationMarshaler defines marshaler for DescribeRuntimeConfiguration operation
type DescribeRuntimeConfigurationMarshaler struct {
	Input *types.DescribeRuntimeConfigurationInput
}

// DescribeScalingPoliciesMarshaler defines marshaler for DescribeScalingPolicies operation
type DescribeScalingPoliciesMarshaler struct {
	Input *types.DescribeScalingPoliciesInput
}

// DescribeScriptMarshaler defines marshaler for DescribeScript operation
type DescribeScriptMarshaler struct {
	Input *types.DescribeScriptInput
}

// DescribeVpcPeeringAuthorizationsMarshaler defines marshaler for DescribeVpcPeeringAuthorizations operation
type DescribeVpcPeeringAuthorizationsMarshaler struct {
	Input *types.DescribeVpcPeeringAuthorizationsInput
}

// DescribeVpcPeeringConnectionsMarshaler defines marshaler for DescribeVpcPeeringConnections operation
type DescribeVpcPeeringConnectionsMarshaler struct {
	Input *types.DescribeVpcPeeringConnectionsInput
}

// GetGameSessionLogUrlMarshaler defines marshaler for GetGameSessionLogUrl operation
type GetGameSessionLogUrlMarshaler struct {
	Input *types.GetGameSessionLogUrlInput
}

// GetInstanceAccessMarshaler defines marshaler for GetInstanceAccess operation
type GetInstanceAccessMarshaler struct {
	Input *types.GetInstanceAccessInput
}

// ListAliasesMarshaler defines marshaler for ListAliases operation
type ListAliasesMarshaler struct {
	Input *types.ListAliasesInput
}

// ListBuildsMarshaler defines marshaler for ListBuilds operation
type ListBuildsMarshaler struct {
	Input *types.ListBuildsInput
}

// ListFleetsMarshaler defines marshaler for ListFleets operation
type ListFleetsMarshaler struct {
	Input *types.ListFleetsInput
}

// ListScriptsMarshaler defines marshaler for ListScripts operation
type ListScriptsMarshaler struct {
	Input *types.ListScriptsInput
}

// PutScalingPolicyMarshaler defines marshaler for PutScalingPolicy operation
type PutScalingPolicyMarshaler struct {
	Input *types.PutScalingPolicyInput
}

// RequestUploadCredentialsMarshaler defines marshaler for RequestUploadCredentials operation
type RequestUploadCredentialsMarshaler struct {
	Input *types.RequestUploadCredentialsInput
}

// ResolveAliasMarshaler defines marshaler for ResolveAlias operation
type ResolveAliasMarshaler struct {
	Input *types.ResolveAliasInput
}

// SearchGameSessionsMarshaler defines marshaler for SearchGameSessions operation
type SearchGameSessionsMarshaler struct {
	Input *types.SearchGameSessionsInput
}

// StartFleetActionsMarshaler defines marshaler for StartFleetActions operation
type StartFleetActionsMarshaler struct {
	Input *types.StartFleetActionsInput
}

// StartGameSessionPlacementMarshaler defines marshaler for StartGameSessionPlacement operation
type StartGameSessionPlacementMarshaler struct {
	Input *types.StartGameSessionPlacementInput
}

// StartMatchBackfillMarshaler defines marshaler for StartMatchBackfill operation
type StartMatchBackfillMarshaler struct {
	Input *types.StartMatchBackfillInput
}

// StartMatchmakingMarshaler defines marshaler for StartMatchmaking operation
type StartMatchmakingMarshaler struct {
	Input *types.StartMatchmakingInput
}

// StopFleetActionsMarshaler defines marshaler for StopFleetActions operation
type StopFleetActionsMarshaler struct {
	Input *types.StopFleetActionsInput
}

// StopGameSessionPlacementMarshaler defines marshaler for StopGameSessionPlacement operation
type StopGameSessionPlacementMarshaler struct {
	Input *types.StopGameSessionPlacementInput
}

// StopMatchmakingMarshaler defines marshaler for StopMatchmaking operation
type StopMatchmakingMarshaler struct {
	Input *types.StopMatchmakingInput
}

// UpdateAliasMarshaler defines marshaler for UpdateAlias operation
type UpdateAliasMarshaler struct {
	Input *types.UpdateAliasInput
}

// UpdateBuildMarshaler defines marshaler for UpdateBuild operation
type UpdateBuildMarshaler struct {
	Input *types.UpdateBuildInput
}

// UpdateFleetAttributesMarshaler defines marshaler for UpdateFleetAttributes operation
type UpdateFleetAttributesMarshaler struct {
	Input *types.UpdateFleetAttributesInput
}

// UpdateFleetCapacityMarshaler defines marshaler for UpdateFleetCapacity operation
type UpdateFleetCapacityMarshaler struct {
	Input *types.UpdateFleetCapacityInput
}

// UpdateFleetPortSettingsMarshaler defines marshaler for UpdateFleetPortSettings operation
type UpdateFleetPortSettingsMarshaler struct {
	Input *types.UpdateFleetPortSettingsInput
}

// UpdateGameSessionMarshaler defines marshaler for UpdateGameSession operation
type UpdateGameSessionMarshaler struct {
	Input *types.UpdateGameSessionInput
}

// UpdateGameSessionQueueMarshaler defines marshaler for UpdateGameSessionQueue operation
type UpdateGameSessionQueueMarshaler struct {
	Input *types.UpdateGameSessionQueueInput
}

// UpdateMatchmakingConfigurationMarshaler defines marshaler for UpdateMatchmakingConfiguration operation
type UpdateMatchmakingConfigurationMarshaler struct {
	Input *types.UpdateMatchmakingConfigurationInput
}

// UpdateRuntimeConfigurationMarshaler defines marshaler for UpdateRuntimeConfiguration operation
type UpdateRuntimeConfigurationMarshaler struct {
	Input *types.UpdateRuntimeConfigurationInput
}

// UpdateScriptMarshaler defines marshaler for UpdateScript operation
type UpdateScriptMarshaler struct {
	Input *types.UpdateScriptInput
}

// ValidateMatchmakingRuleSetMarshaler defines marshaler for ValidateMatchmakingRuleSet operation
type ValidateMatchmakingRuleSetMarshaler struct {
	Input *types.ValidateMatchmakingRuleSetInput
}

func MarshalAcceptMatchInputShapeAWSJSON(v *types.AcceptMatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateAliasInputShapeAWSJSON(v *types.CreateAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateBuildInputShapeAWSJSON(v *types.CreateBuildInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateFleetInputShapeAWSJSON(v *types.CreateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateGameSessionInputShapeAWSJSON(v *types.CreateGameSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateGameSessionQueueInputShapeAWSJSON(v *types.CreateGameSessionQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateMatchmakingConfigurationInputShapeAWSJSON(v *types.CreateMatchmakingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateMatchmakingRuleSetInputShapeAWSJSON(v *types.CreateMatchmakingRuleSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePlayerSessionInputShapeAWSJSON(v *types.CreatePlayerSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePlayerSessionsInputShapeAWSJSON(v *types.CreatePlayerSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateScriptInputShapeAWSJSON(v *types.CreateScriptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateVpcPeeringAuthorizationInputShapeAWSJSON(v *types.CreateVpcPeeringAuthorizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateVpcPeeringConnectionInputShapeAWSJSON(v *types.CreateVpcPeeringConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteAliasInputShapeAWSJSON(v *types.DeleteAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteBuildInputShapeAWSJSON(v *types.DeleteBuildInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteFleetInputShapeAWSJSON(v *types.DeleteFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteGameSessionQueueInputShapeAWSJSON(v *types.DeleteGameSessionQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteMatchmakingConfigurationInputShapeAWSJSON(v *types.DeleteMatchmakingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteMatchmakingRuleSetInputShapeAWSJSON(v *types.DeleteMatchmakingRuleSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteScalingPolicyInputShapeAWSJSON(v *types.DeleteScalingPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteScriptInputShapeAWSJSON(v *types.DeleteScriptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteVpcPeeringAuthorizationInputShapeAWSJSON(v *types.DeleteVpcPeeringAuthorizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteVpcPeeringConnectionInputShapeAWSJSON(v *types.DeleteVpcPeeringConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAliasInputShapeAWSJSON(v *types.DescribeAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeBuildInputShapeAWSJSON(v *types.DescribeBuildInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEC2InstanceLimitsInputShapeAWSJSON(v *types.DescribeEC2InstanceLimitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFleetAttributesInputShapeAWSJSON(v *types.DescribeFleetAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFleetCapacityInputShapeAWSJSON(v *types.DescribeFleetCapacityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFleetEventsInputShapeAWSJSON(v *types.DescribeFleetEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFleetPortSettingsInputShapeAWSJSON(v *types.DescribeFleetPortSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFleetUtilizationInputShapeAWSJSON(v *types.DescribeFleetUtilizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGameSessionDetailsInputShapeAWSJSON(v *types.DescribeGameSessionDetailsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGameSessionPlacementInputShapeAWSJSON(v *types.DescribeGameSessionPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGameSessionQueuesInputShapeAWSJSON(v *types.DescribeGameSessionQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGameSessionsInputShapeAWSJSON(v *types.DescribeGameSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeInstancesInputShapeAWSJSON(v *types.DescribeInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeMatchmakingInputShapeAWSJSON(v *types.DescribeMatchmakingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeMatchmakingConfigurationsInputShapeAWSJSON(v *types.DescribeMatchmakingConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeMatchmakingRuleSetsInputShapeAWSJSON(v *types.DescribeMatchmakingRuleSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePlayerSessionsInputShapeAWSJSON(v *types.DescribePlayerSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRuntimeConfigurationInputShapeAWSJSON(v *types.DescribeRuntimeConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeScalingPoliciesInputShapeAWSJSON(v *types.DescribeScalingPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeScriptInputShapeAWSJSON(v *types.DescribeScriptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeVpcPeeringAuthorizationsInputShapeAWSJSON(v *types.DescribeVpcPeeringAuthorizationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeVpcPeeringConnectionsInputShapeAWSJSON(v *types.DescribeVpcPeeringConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetGameSessionLogUrlInputShapeAWSJSON(v *types.GetGameSessionLogUrlInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetInstanceAccessInputShapeAWSJSON(v *types.GetInstanceAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAliasesInputShapeAWSJSON(v *types.ListAliasesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBuildsInputShapeAWSJSON(v *types.ListBuildsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListFleetsInputShapeAWSJSON(v *types.ListFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListScriptsInputShapeAWSJSON(v *types.ListScriptsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutScalingPolicyInputShapeAWSJSON(v *types.PutScalingPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRequestUploadCredentialsInputShapeAWSJSON(v *types.RequestUploadCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalResolveAliasInputShapeAWSJSON(v *types.ResolveAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSearchGameSessionsInputShapeAWSJSON(v *types.SearchGameSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartFleetActionsInputShapeAWSJSON(v *types.StartFleetActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartGameSessionPlacementInputShapeAWSJSON(v *types.StartGameSessionPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartMatchBackfillInputShapeAWSJSON(v *types.StartMatchBackfillInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartMatchmakingInputShapeAWSJSON(v *types.StartMatchmakingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopFleetActionsInputShapeAWSJSON(v *types.StopFleetActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopGameSessionPlacementInputShapeAWSJSON(v *types.StopGameSessionPlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopMatchmakingInputShapeAWSJSON(v *types.StopMatchmakingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateAliasInputShapeAWSJSON(v *types.UpdateAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateBuildInputShapeAWSJSON(v *types.UpdateBuildInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateFleetAttributesInputShapeAWSJSON(v *types.UpdateFleetAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateFleetCapacityInputShapeAWSJSON(v *types.UpdateFleetCapacityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateFleetPortSettingsInputShapeAWSJSON(v *types.UpdateFleetPortSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGameSessionInputShapeAWSJSON(v *types.UpdateGameSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGameSessionQueueInputShapeAWSJSON(v *types.UpdateGameSessionQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateMatchmakingConfigurationInputShapeAWSJSON(v *types.UpdateMatchmakingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateRuntimeConfigurationInputShapeAWSJSON(v *types.UpdateRuntimeConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateScriptInputShapeAWSJSON(v *types.UpdateScriptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalValidateMatchmakingRuleSetInputShapeAWSJSON(v *types.ValidateMatchmakingRuleSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AcceptMatchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptMatchInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptMatchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptMatch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBuildMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBuildInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBuildMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBuild.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGameSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGameSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGameSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGameSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGameSessionQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGameSessionQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGameSessionQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGameSessionQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMatchmakingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMatchmakingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMatchmakingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMatchmakingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMatchmakingRuleSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMatchmakingRuleSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMatchmakingRuleSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMatchmakingRuleSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePlayerSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePlayerSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePlayerSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePlayerSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePlayerSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePlayerSessionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePlayerSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePlayerSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateScriptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateScriptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateScriptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateScript.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcPeeringAuthorizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcPeeringAuthorizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcPeeringAuthorizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcPeeringAuthorization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcPeeringConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcPeeringConnectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcPeeringConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcPeeringConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBuildMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBuildInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBuildMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBuild.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGameSessionQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGameSessionQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGameSessionQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGameSessionQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMatchmakingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMatchmakingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMatchmakingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMatchmakingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMatchmakingRuleSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMatchmakingRuleSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMatchmakingRuleSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMatchmakingRuleSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteScalingPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteScalingPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteScalingPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteScalingPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteScriptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteScriptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteScriptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteScript.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcPeeringAuthorizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcPeeringAuthorizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcPeeringAuthorizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcPeeringAuthorization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcPeeringConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcPeeringConnectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcPeeringConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcPeeringConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBuildMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBuildInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBuildMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBuild.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEC2InstanceLimitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEC2InstanceLimitsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEC2InstanceLimitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEC2InstanceLimits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetCapacityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetCapacityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetCapacityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetCapacity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetPortSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetPortSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetPortSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetPortSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetUtilizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetUtilizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetUtilizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetUtilization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGameSessionDetailsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGameSessionDetailsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGameSessionDetailsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGameSessionDetails.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGameSessionPlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGameSessionPlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGameSessionPlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGameSessionPlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGameSessionQueuesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGameSessionQueuesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGameSessionQueuesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGameSessionQueues.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGameSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGameSessionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGameSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGameSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMatchmakingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMatchmakingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMatchmakingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMatchmaking.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMatchmakingConfigurationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMatchmakingConfigurationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMatchmakingConfigurationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMatchmakingConfigurations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMatchmakingRuleSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMatchmakingRuleSetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMatchmakingRuleSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMatchmakingRuleSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePlayerSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePlayerSessionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePlayerSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePlayerSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRuntimeConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRuntimeConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRuntimeConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRuntimeConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeScalingPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeScalingPoliciesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeScalingPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeScalingPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeScriptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeScriptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeScriptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeScript.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcPeeringAuthorizationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcPeeringAuthorizationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcPeeringAuthorizationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcPeeringAuthorizations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcPeeringConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcPeeringConnectionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcPeeringConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcPeeringConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGameSessionLogUrlMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGameSessionLogUrlInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGameSessionLogUrlMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGameSessionLogUrl.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetInstanceAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetInstanceAccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetInstanceAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetInstanceAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAliasesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAliasesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAliasesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAliases.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBuildsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBuildsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBuildsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBuilds.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFleetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFleetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFleetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFleets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListScriptsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListScriptsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListScriptsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListScripts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutScalingPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutScalingPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutScalingPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutScalingPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RequestUploadCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRequestUploadCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RequestUploadCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RequestUploadCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResolveAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResolveAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResolveAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResolveAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchGameSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchGameSessionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchGameSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchGameSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartFleetActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartFleetActionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartFleetActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartFleetActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartGameSessionPlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartGameSessionPlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartGameSessionPlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartGameSessionPlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartMatchBackfillMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartMatchBackfillInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartMatchBackfillMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartMatchBackfill.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartMatchmakingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartMatchmakingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartMatchmakingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartMatchmaking.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopFleetActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopFleetActionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopFleetActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopFleetActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopGameSessionPlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopGameSessionPlacementInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopGameSessionPlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopGameSessionPlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopMatchmakingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopMatchmakingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopMatchmakingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopMatchmaking.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBuildMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBuildInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBuildMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBuild.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFleetAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFleetAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFleetAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFleetAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFleetCapacityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFleetCapacityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFleetCapacityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFleetCapacity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFleetPortSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFleetPortSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFleetPortSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFleetPortSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGameSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGameSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGameSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGameSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGameSessionQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGameSessionQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGameSessionQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGameSessionQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateMatchmakingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateMatchmakingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateMatchmakingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateMatchmakingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRuntimeConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRuntimeConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRuntimeConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRuntimeConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateScriptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateScriptInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateScriptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateScript.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ValidateMatchmakingRuleSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalValidateMatchmakingRuleSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ValidateMatchmakingRuleSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ValidateMatchmakingRuleSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
