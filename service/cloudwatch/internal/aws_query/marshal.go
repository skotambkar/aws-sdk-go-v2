// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/cloudwatch/types"
)

var _ bytes.Buffer
var _ awserr.Error

// DeleteAlarmsMarshaler defines marshaler for DeleteAlarms operation
type DeleteAlarmsMarshaler struct {
	Input *types.DeleteAlarmsInput
}

// DeleteAnomalyDetectorMarshaler defines marshaler for DeleteAnomalyDetector operation
type DeleteAnomalyDetectorMarshaler struct {
	Input *types.DeleteAnomalyDetectorInput
}

// DeleteDashboardsMarshaler defines marshaler for DeleteDashboards operation
type DeleteDashboardsMarshaler struct {
	Input *types.DeleteDashboardsInput
}

// DescribeAlarmHistoryMarshaler defines marshaler for DescribeAlarmHistory operation
type DescribeAlarmHistoryMarshaler struct {
	Input *types.DescribeAlarmHistoryInput
}

// DescribeAlarmsMarshaler defines marshaler for DescribeAlarms operation
type DescribeAlarmsMarshaler struct {
	Input *types.DescribeAlarmsInput
}

// DescribeAlarmsForMetricMarshaler defines marshaler for DescribeAlarmsForMetric operation
type DescribeAlarmsForMetricMarshaler struct {
	Input *types.DescribeAlarmsForMetricInput
}

// DescribeAnomalyDetectorsMarshaler defines marshaler for DescribeAnomalyDetectors operation
type DescribeAnomalyDetectorsMarshaler struct {
	Input *types.DescribeAnomalyDetectorsInput
}

// DisableAlarmActionsMarshaler defines marshaler for DisableAlarmActions operation
type DisableAlarmActionsMarshaler struct {
	Input *types.DisableAlarmActionsInput
}

// EnableAlarmActionsMarshaler defines marshaler for EnableAlarmActions operation
type EnableAlarmActionsMarshaler struct {
	Input *types.EnableAlarmActionsInput
}

// GetDashboardMarshaler defines marshaler for GetDashboard operation
type GetDashboardMarshaler struct {
	Input *types.GetDashboardInput
}

// GetMetricDataMarshaler defines marshaler for GetMetricData operation
type GetMetricDataMarshaler struct {
	Input *types.GetMetricDataInput
}

// GetMetricStatisticsMarshaler defines marshaler for GetMetricStatistics operation
type GetMetricStatisticsMarshaler struct {
	Input *types.GetMetricStatisticsInput
}

// GetMetricWidgetImageMarshaler defines marshaler for GetMetricWidgetImage operation
type GetMetricWidgetImageMarshaler struct {
	Input *types.GetMetricWidgetImageInput
}

// ListDashboardsMarshaler defines marshaler for ListDashboards operation
type ListDashboardsMarshaler struct {
	Input *types.ListDashboardsInput
}

// ListMetricsMarshaler defines marshaler for ListMetrics operation
type ListMetricsMarshaler struct {
	Input *types.ListMetricsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PutAnomalyDetectorMarshaler defines marshaler for PutAnomalyDetector operation
type PutAnomalyDetectorMarshaler struct {
	Input *types.PutAnomalyDetectorInput
}

// PutDashboardMarshaler defines marshaler for PutDashboard operation
type PutDashboardMarshaler struct {
	Input *types.PutDashboardInput
}

// PutMetricAlarmMarshaler defines marshaler for PutMetricAlarm operation
type PutMetricAlarmMarshaler struct {
	Input *types.PutMetricAlarmInput
}

// PutMetricDataMarshaler defines marshaler for PutMetricData operation
type PutMetricDataMarshaler struct {
	Input *types.PutMetricDataInput
}

// SetAlarmStateMarshaler defines marshaler for SetAlarmState operation
type SetAlarmStateMarshaler struct {
	Input *types.SetAlarmStateInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

func MarshalDeleteAlarmsInputShapeAWSQuery(v *types.DeleteAlarmsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteAnomalyDetectorInputShapeAWSQuery(v *types.DeleteAnomalyDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteDashboardsInputShapeAWSQuery(v *types.DeleteDashboardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAlarmHistoryInputShapeAWSQuery(v *types.DescribeAlarmHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAlarmsInputShapeAWSQuery(v *types.DescribeAlarmsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAlarmsForMetricInputShapeAWSQuery(v *types.DescribeAlarmsForMetricInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAnomalyDetectorsInputShapeAWSQuery(v *types.DescribeAnomalyDetectorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDisableAlarmActionsInputShapeAWSQuery(v *types.DisableAlarmActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalEnableAlarmActionsInputShapeAWSQuery(v *types.EnableAlarmActionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetDashboardInputShapeAWSQuery(v *types.GetDashboardInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetMetricDataInputShapeAWSQuery(v *types.GetMetricDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetMetricStatisticsInputShapeAWSQuery(v *types.GetMetricStatisticsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetMetricWidgetImageInputShapeAWSQuery(v *types.GetMetricWidgetImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListDashboardsInputShapeAWSQuery(v *types.ListDashboardsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListMetricsInputShapeAWSQuery(v *types.ListMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSQuery(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutAnomalyDetectorInputShapeAWSQuery(v *types.PutAnomalyDetectorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutDashboardInputShapeAWSQuery(v *types.PutDashboardInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutMetricAlarmInputShapeAWSQuery(v *types.PutMetricAlarmInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPutMetricDataInputShapeAWSQuery(v *types.PutMetricDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetAlarmStateInputShapeAWSQuery(v *types.SetAlarmStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSQuery(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSQuery(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m DeleteAlarmsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAlarmsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAlarmsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAlarms.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAnomalyDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAnomalyDetectorInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAnomalyDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAnomalyDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDashboardsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDashboardsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDashboardsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDashboards.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAlarmHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAlarmHistoryInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAlarmHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAlarmHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAlarmsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAlarmsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAlarmsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAlarms.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAlarmsForMetricMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAlarmsForMetricInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAlarmsForMetricMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAlarmsForMetric.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAnomalyDetectorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAnomalyDetectorsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAnomalyDetectorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAnomalyDetectors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableAlarmActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableAlarmActionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableAlarmActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableAlarmActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableAlarmActionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableAlarmActionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableAlarmActionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableAlarmActions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDashboardMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDashboardInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDashboardMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDashboard.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMetricDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMetricDataInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMetricDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMetricData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMetricStatisticsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMetricStatisticsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMetricStatisticsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMetricStatistics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMetricWidgetImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMetricWidgetImageInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMetricWidgetImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMetricWidgetImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDashboardsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDashboardsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDashboardsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDashboards.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListMetricsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListMetricsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListMetricsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListMetrics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAnomalyDetectorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAnomalyDetectorInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAnomalyDetectorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAnomalyDetector.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutDashboardMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutDashboardInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutDashboardMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutDashboard.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutMetricAlarmMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutMetricAlarmInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutMetricAlarmMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutMetricAlarm.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutMetricDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutMetricDataInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutMetricDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutMetricData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetAlarmStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetAlarmStateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetAlarmStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetAlarmState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
