// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cognitoidentityprovider/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddCustomAttributesMarshaler defines marshaler for AddCustomAttributes operation
type AddCustomAttributesMarshaler struct {
	Input *types.AddCustomAttributesInput
}

// AdminAddUserToGroupMarshaler defines marshaler for AdminAddUserToGroup operation
type AdminAddUserToGroupMarshaler struct {
	Input *types.AdminAddUserToGroupInput
}

// AdminConfirmSignUpMarshaler defines marshaler for AdminConfirmSignUp operation
type AdminConfirmSignUpMarshaler struct {
	Input *types.AdminConfirmSignUpInput
}

// AdminCreateUserMarshaler defines marshaler for AdminCreateUser operation
type AdminCreateUserMarshaler struct {
	Input *types.AdminCreateUserInput
}

// AdminDeleteUserMarshaler defines marshaler for AdminDeleteUser operation
type AdminDeleteUserMarshaler struct {
	Input *types.AdminDeleteUserInput
}

// AdminDeleteUserAttributesMarshaler defines marshaler for AdminDeleteUserAttributes operation
type AdminDeleteUserAttributesMarshaler struct {
	Input *types.AdminDeleteUserAttributesInput
}

// AdminDisableProviderForUserMarshaler defines marshaler for AdminDisableProviderForUser operation
type AdminDisableProviderForUserMarshaler struct {
	Input *types.AdminDisableProviderForUserInput
}

// AdminDisableUserMarshaler defines marshaler for AdminDisableUser operation
type AdminDisableUserMarshaler struct {
	Input *types.AdminDisableUserInput
}

// AdminEnableUserMarshaler defines marshaler for AdminEnableUser operation
type AdminEnableUserMarshaler struct {
	Input *types.AdminEnableUserInput
}

// AdminForgetDeviceMarshaler defines marshaler for AdminForgetDevice operation
type AdminForgetDeviceMarshaler struct {
	Input *types.AdminForgetDeviceInput
}

// AdminGetDeviceMarshaler defines marshaler for AdminGetDevice operation
type AdminGetDeviceMarshaler struct {
	Input *types.AdminGetDeviceInput
}

// AdminGetUserMarshaler defines marshaler for AdminGetUser operation
type AdminGetUserMarshaler struct {
	Input *types.AdminGetUserInput
}

// AdminInitiateAuthMarshaler defines marshaler for AdminInitiateAuth operation
type AdminInitiateAuthMarshaler struct {
	Input *types.AdminInitiateAuthInput
}

// AdminLinkProviderForUserMarshaler defines marshaler for AdminLinkProviderForUser operation
type AdminLinkProviderForUserMarshaler struct {
	Input *types.AdminLinkProviderForUserInput
}

// AdminListDevicesMarshaler defines marshaler for AdminListDevices operation
type AdminListDevicesMarshaler struct {
	Input *types.AdminListDevicesInput
}

// AdminListGroupsForUserMarshaler defines marshaler for AdminListGroupsForUser operation
type AdminListGroupsForUserMarshaler struct {
	Input *types.AdminListGroupsForUserInput
}

// AdminListUserAuthEventsMarshaler defines marshaler for AdminListUserAuthEvents operation
type AdminListUserAuthEventsMarshaler struct {
	Input *types.AdminListUserAuthEventsInput
}

// AdminRemoveUserFromGroupMarshaler defines marshaler for AdminRemoveUserFromGroup operation
type AdminRemoveUserFromGroupMarshaler struct {
	Input *types.AdminRemoveUserFromGroupInput
}

// AdminResetUserPasswordMarshaler defines marshaler for AdminResetUserPassword operation
type AdminResetUserPasswordMarshaler struct {
	Input *types.AdminResetUserPasswordInput
}

// AdminRespondToAuthChallengeMarshaler defines marshaler for AdminRespondToAuthChallenge operation
type AdminRespondToAuthChallengeMarshaler struct {
	Input *types.AdminRespondToAuthChallengeInput
}

// AdminSetUserMFAPreferenceMarshaler defines marshaler for AdminSetUserMFAPreference operation
type AdminSetUserMFAPreferenceMarshaler struct {
	Input *types.AdminSetUserMFAPreferenceInput
}

// AdminSetUserPasswordMarshaler defines marshaler for AdminSetUserPassword operation
type AdminSetUserPasswordMarshaler struct {
	Input *types.AdminSetUserPasswordInput
}

// AdminSetUserSettingsMarshaler defines marshaler for AdminSetUserSettings operation
type AdminSetUserSettingsMarshaler struct {
	Input *types.AdminSetUserSettingsInput
}

// AdminUpdateAuthEventFeedbackMarshaler defines marshaler for AdminUpdateAuthEventFeedback operation
type AdminUpdateAuthEventFeedbackMarshaler struct {
	Input *types.AdminUpdateAuthEventFeedbackInput
}

// AdminUpdateDeviceStatusMarshaler defines marshaler for AdminUpdateDeviceStatus operation
type AdminUpdateDeviceStatusMarshaler struct {
	Input *types.AdminUpdateDeviceStatusInput
}

// AdminUpdateUserAttributesMarshaler defines marshaler for AdminUpdateUserAttributes operation
type AdminUpdateUserAttributesMarshaler struct {
	Input *types.AdminUpdateUserAttributesInput
}

// AdminUserGlobalSignOutMarshaler defines marshaler for AdminUserGlobalSignOut operation
type AdminUserGlobalSignOutMarshaler struct {
	Input *types.AdminUserGlobalSignOutInput
}

// AssociateSoftwareTokenMarshaler defines marshaler for AssociateSoftwareToken operation
type AssociateSoftwareTokenMarshaler struct {
	Input *types.AssociateSoftwareTokenInput
}

// ChangePasswordMarshaler defines marshaler for ChangePassword operation
type ChangePasswordMarshaler struct {
	Input *types.ChangePasswordInput
}

// ConfirmDeviceMarshaler defines marshaler for ConfirmDevice operation
type ConfirmDeviceMarshaler struct {
	Input *types.ConfirmDeviceInput
}

// ConfirmForgotPasswordMarshaler defines marshaler for ConfirmForgotPassword operation
type ConfirmForgotPasswordMarshaler struct {
	Input *types.ConfirmForgotPasswordInput
}

// ConfirmSignUpMarshaler defines marshaler for ConfirmSignUp operation
type ConfirmSignUpMarshaler struct {
	Input *types.ConfirmSignUpInput
}

// CreateGroupMarshaler defines marshaler for CreateGroup operation
type CreateGroupMarshaler struct {
	Input *types.CreateGroupInput
}

// CreateIdentityProviderMarshaler defines marshaler for CreateIdentityProvider operation
type CreateIdentityProviderMarshaler struct {
	Input *types.CreateIdentityProviderInput
}

// CreateResourceServerMarshaler defines marshaler for CreateResourceServer operation
type CreateResourceServerMarshaler struct {
	Input *types.CreateResourceServerInput
}

// CreateUserImportJobMarshaler defines marshaler for CreateUserImportJob operation
type CreateUserImportJobMarshaler struct {
	Input *types.CreateUserImportJobInput
}

// CreateUserPoolMarshaler defines marshaler for CreateUserPool operation
type CreateUserPoolMarshaler struct {
	Input *types.CreateUserPoolInput
}

// CreateUserPoolClientMarshaler defines marshaler for CreateUserPoolClient operation
type CreateUserPoolClientMarshaler struct {
	Input *types.CreateUserPoolClientInput
}

// CreateUserPoolDomainMarshaler defines marshaler for CreateUserPoolDomain operation
type CreateUserPoolDomainMarshaler struct {
	Input *types.CreateUserPoolDomainInput
}

// DeleteGroupMarshaler defines marshaler for DeleteGroup operation
type DeleteGroupMarshaler struct {
	Input *types.DeleteGroupInput
}

// DeleteIdentityProviderMarshaler defines marshaler for DeleteIdentityProvider operation
type DeleteIdentityProviderMarshaler struct {
	Input *types.DeleteIdentityProviderInput
}

// DeleteResourceServerMarshaler defines marshaler for DeleteResourceServer operation
type DeleteResourceServerMarshaler struct {
	Input *types.DeleteResourceServerInput
}

// DeleteUserMarshaler defines marshaler for DeleteUser operation
type DeleteUserMarshaler struct {
	Input *types.DeleteUserInput
}

// DeleteUserAttributesMarshaler defines marshaler for DeleteUserAttributes operation
type DeleteUserAttributesMarshaler struct {
	Input *types.DeleteUserAttributesInput
}

// DeleteUserPoolMarshaler defines marshaler for DeleteUserPool operation
type DeleteUserPoolMarshaler struct {
	Input *types.DeleteUserPoolInput
}

// DeleteUserPoolClientMarshaler defines marshaler for DeleteUserPoolClient operation
type DeleteUserPoolClientMarshaler struct {
	Input *types.DeleteUserPoolClientInput
}

// DeleteUserPoolDomainMarshaler defines marshaler for DeleteUserPoolDomain operation
type DeleteUserPoolDomainMarshaler struct {
	Input *types.DeleteUserPoolDomainInput
}

// DescribeIdentityProviderMarshaler defines marshaler for DescribeIdentityProvider operation
type DescribeIdentityProviderMarshaler struct {
	Input *types.DescribeIdentityProviderInput
}

// DescribeResourceServerMarshaler defines marshaler for DescribeResourceServer operation
type DescribeResourceServerMarshaler struct {
	Input *types.DescribeResourceServerInput
}

// DescribeRiskConfigurationMarshaler defines marshaler for DescribeRiskConfiguration operation
type DescribeRiskConfigurationMarshaler struct {
	Input *types.DescribeRiskConfigurationInput
}

// DescribeUserImportJobMarshaler defines marshaler for DescribeUserImportJob operation
type DescribeUserImportJobMarshaler struct {
	Input *types.DescribeUserImportJobInput
}

// DescribeUserPoolMarshaler defines marshaler for DescribeUserPool operation
type DescribeUserPoolMarshaler struct {
	Input *types.DescribeUserPoolInput
}

// DescribeUserPoolClientMarshaler defines marshaler for DescribeUserPoolClient operation
type DescribeUserPoolClientMarshaler struct {
	Input *types.DescribeUserPoolClientInput
}

// DescribeUserPoolDomainMarshaler defines marshaler for DescribeUserPoolDomain operation
type DescribeUserPoolDomainMarshaler struct {
	Input *types.DescribeUserPoolDomainInput
}

// ForgetDeviceMarshaler defines marshaler for ForgetDevice operation
type ForgetDeviceMarshaler struct {
	Input *types.ForgetDeviceInput
}

// ForgotPasswordMarshaler defines marshaler for ForgotPassword operation
type ForgotPasswordMarshaler struct {
	Input *types.ForgotPasswordInput
}

// GetCSVHeaderMarshaler defines marshaler for GetCSVHeader operation
type GetCSVHeaderMarshaler struct {
	Input *types.GetCSVHeaderInput
}

// GetDeviceMarshaler defines marshaler for GetDevice operation
type GetDeviceMarshaler struct {
	Input *types.GetDeviceInput
}

// GetGroupMarshaler defines marshaler for GetGroup operation
type GetGroupMarshaler struct {
	Input *types.GetGroupInput
}

// GetIdentityProviderByIdentifierMarshaler defines marshaler for GetIdentityProviderByIdentifier operation
type GetIdentityProviderByIdentifierMarshaler struct {
	Input *types.GetIdentityProviderByIdentifierInput
}

// GetSigningCertificateMarshaler defines marshaler for GetSigningCertificate operation
type GetSigningCertificateMarshaler struct {
	Input *types.GetSigningCertificateInput
}

// GetUICustomizationMarshaler defines marshaler for GetUICustomization operation
type GetUICustomizationMarshaler struct {
	Input *types.GetUICustomizationInput
}

// GetUserMarshaler defines marshaler for GetUser operation
type GetUserMarshaler struct {
	Input *types.GetUserInput
}

// GetUserAttributeVerificationCodeMarshaler defines marshaler for GetUserAttributeVerificationCode operation
type GetUserAttributeVerificationCodeMarshaler struct {
	Input *types.GetUserAttributeVerificationCodeInput
}

// GetUserPoolMfaConfigMarshaler defines marshaler for GetUserPoolMfaConfig operation
type GetUserPoolMfaConfigMarshaler struct {
	Input *types.GetUserPoolMfaConfigInput
}

// GlobalSignOutMarshaler defines marshaler for GlobalSignOut operation
type GlobalSignOutMarshaler struct {
	Input *types.GlobalSignOutInput
}

// InitiateAuthMarshaler defines marshaler for InitiateAuth operation
type InitiateAuthMarshaler struct {
	Input *types.InitiateAuthInput
}

// ListDevicesMarshaler defines marshaler for ListDevices operation
type ListDevicesMarshaler struct {
	Input *types.ListDevicesInput
}

// ListGroupsMarshaler defines marshaler for ListGroups operation
type ListGroupsMarshaler struct {
	Input *types.ListGroupsInput
}

// ListIdentityProvidersMarshaler defines marshaler for ListIdentityProviders operation
type ListIdentityProvidersMarshaler struct {
	Input *types.ListIdentityProvidersInput
}

// ListResourceServersMarshaler defines marshaler for ListResourceServers operation
type ListResourceServersMarshaler struct {
	Input *types.ListResourceServersInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListUserImportJobsMarshaler defines marshaler for ListUserImportJobs operation
type ListUserImportJobsMarshaler struct {
	Input *types.ListUserImportJobsInput
}

// ListUserPoolClientsMarshaler defines marshaler for ListUserPoolClients operation
type ListUserPoolClientsMarshaler struct {
	Input *types.ListUserPoolClientsInput
}

// ListUserPoolsMarshaler defines marshaler for ListUserPools operation
type ListUserPoolsMarshaler struct {
	Input *types.ListUserPoolsInput
}

// ListUsersMarshaler defines marshaler for ListUsers operation
type ListUsersMarshaler struct {
	Input *types.ListUsersInput
}

// ListUsersInGroupMarshaler defines marshaler for ListUsersInGroup operation
type ListUsersInGroupMarshaler struct {
	Input *types.ListUsersInGroupInput
}

// ResendConfirmationCodeMarshaler defines marshaler for ResendConfirmationCode operation
type ResendConfirmationCodeMarshaler struct {
	Input *types.ResendConfirmationCodeInput
}

// RespondToAuthChallengeMarshaler defines marshaler for RespondToAuthChallenge operation
type RespondToAuthChallengeMarshaler struct {
	Input *types.RespondToAuthChallengeInput
}

// SetRiskConfigurationMarshaler defines marshaler for SetRiskConfiguration operation
type SetRiskConfigurationMarshaler struct {
	Input *types.SetRiskConfigurationInput
}

// SetUICustomizationMarshaler defines marshaler for SetUICustomization operation
type SetUICustomizationMarshaler struct {
	Input *types.SetUICustomizationInput
}

// SetUserMFAPreferenceMarshaler defines marshaler for SetUserMFAPreference operation
type SetUserMFAPreferenceMarshaler struct {
	Input *types.SetUserMFAPreferenceInput
}

// SetUserPoolMfaConfigMarshaler defines marshaler for SetUserPoolMfaConfig operation
type SetUserPoolMfaConfigMarshaler struct {
	Input *types.SetUserPoolMfaConfigInput
}

// SetUserSettingsMarshaler defines marshaler for SetUserSettings operation
type SetUserSettingsMarshaler struct {
	Input *types.SetUserSettingsInput
}

// SignUpMarshaler defines marshaler for SignUp operation
type SignUpMarshaler struct {
	Input *types.SignUpInput
}

// StartUserImportJobMarshaler defines marshaler for StartUserImportJob operation
type StartUserImportJobMarshaler struct {
	Input *types.StartUserImportJobInput
}

// StopUserImportJobMarshaler defines marshaler for StopUserImportJob operation
type StopUserImportJobMarshaler struct {
	Input *types.StopUserImportJobInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateAuthEventFeedbackMarshaler defines marshaler for UpdateAuthEventFeedback operation
type UpdateAuthEventFeedbackMarshaler struct {
	Input *types.UpdateAuthEventFeedbackInput
}

// UpdateDeviceStatusMarshaler defines marshaler for UpdateDeviceStatus operation
type UpdateDeviceStatusMarshaler struct {
	Input *types.UpdateDeviceStatusInput
}

// UpdateGroupMarshaler defines marshaler for UpdateGroup operation
type UpdateGroupMarshaler struct {
	Input *types.UpdateGroupInput
}

// UpdateIdentityProviderMarshaler defines marshaler for UpdateIdentityProvider operation
type UpdateIdentityProviderMarshaler struct {
	Input *types.UpdateIdentityProviderInput
}

// UpdateResourceServerMarshaler defines marshaler for UpdateResourceServer operation
type UpdateResourceServerMarshaler struct {
	Input *types.UpdateResourceServerInput
}

// UpdateUserAttributesMarshaler defines marshaler for UpdateUserAttributes operation
type UpdateUserAttributesMarshaler struct {
	Input *types.UpdateUserAttributesInput
}

// UpdateUserPoolMarshaler defines marshaler for UpdateUserPool operation
type UpdateUserPoolMarshaler struct {
	Input *types.UpdateUserPoolInput
}

// UpdateUserPoolClientMarshaler defines marshaler for UpdateUserPoolClient operation
type UpdateUserPoolClientMarshaler struct {
	Input *types.UpdateUserPoolClientInput
}

// UpdateUserPoolDomainMarshaler defines marshaler for UpdateUserPoolDomain operation
type UpdateUserPoolDomainMarshaler struct {
	Input *types.UpdateUserPoolDomainInput
}

// VerifySoftwareTokenMarshaler defines marshaler for VerifySoftwareToken operation
type VerifySoftwareTokenMarshaler struct {
	Input *types.VerifySoftwareTokenInput
}

// VerifyUserAttributeMarshaler defines marshaler for VerifyUserAttribute operation
type VerifyUserAttributeMarshaler struct {
	Input *types.VerifyUserAttributeInput
}

func MarshalAddCustomAttributesInputShapeAWSJSON(v *types.AddCustomAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminAddUserToGroupInputShapeAWSJSON(v *types.AdminAddUserToGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminConfirmSignUpInputShapeAWSJSON(v *types.AdminConfirmSignUpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminCreateUserInputShapeAWSJSON(v *types.AdminCreateUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminDeleteUserInputShapeAWSJSON(v *types.AdminDeleteUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminDeleteUserAttributesInputShapeAWSJSON(v *types.AdminDeleteUserAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminDisableProviderForUserInputShapeAWSJSON(v *types.AdminDisableProviderForUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminDisableUserInputShapeAWSJSON(v *types.AdminDisableUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminEnableUserInputShapeAWSJSON(v *types.AdminEnableUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminForgetDeviceInputShapeAWSJSON(v *types.AdminForgetDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminGetDeviceInputShapeAWSJSON(v *types.AdminGetDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminGetUserInputShapeAWSJSON(v *types.AdminGetUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminInitiateAuthInputShapeAWSJSON(v *types.AdminInitiateAuthInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminLinkProviderForUserInputShapeAWSJSON(v *types.AdminLinkProviderForUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminListDevicesInputShapeAWSJSON(v *types.AdminListDevicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminListGroupsForUserInputShapeAWSJSON(v *types.AdminListGroupsForUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminListUserAuthEventsInputShapeAWSJSON(v *types.AdminListUserAuthEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminRemoveUserFromGroupInputShapeAWSJSON(v *types.AdminRemoveUserFromGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminResetUserPasswordInputShapeAWSJSON(v *types.AdminResetUserPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminRespondToAuthChallengeInputShapeAWSJSON(v *types.AdminRespondToAuthChallengeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminSetUserMFAPreferenceInputShapeAWSJSON(v *types.AdminSetUserMFAPreferenceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminSetUserPasswordInputShapeAWSJSON(v *types.AdminSetUserPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminSetUserSettingsInputShapeAWSJSON(v *types.AdminSetUserSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminUpdateAuthEventFeedbackInputShapeAWSJSON(v *types.AdminUpdateAuthEventFeedbackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminUpdateDeviceStatusInputShapeAWSJSON(v *types.AdminUpdateDeviceStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminUpdateUserAttributesInputShapeAWSJSON(v *types.AdminUpdateUserAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAdminUserGlobalSignOutInputShapeAWSJSON(v *types.AdminUserGlobalSignOutInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssociateSoftwareTokenInputShapeAWSJSON(v *types.AssociateSoftwareTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalChangePasswordInputShapeAWSJSON(v *types.ChangePasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalConfirmDeviceInputShapeAWSJSON(v *types.ConfirmDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalConfirmForgotPasswordInputShapeAWSJSON(v *types.ConfirmForgotPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalConfirmSignUpInputShapeAWSJSON(v *types.ConfirmSignUpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateGroupInputShapeAWSJSON(v *types.CreateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateIdentityProviderInputShapeAWSJSON(v *types.CreateIdentityProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateResourceServerInputShapeAWSJSON(v *types.CreateResourceServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserImportJobInputShapeAWSJSON(v *types.CreateUserImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserPoolInputShapeAWSJSON(v *types.CreateUserPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserPoolClientInputShapeAWSJSON(v *types.CreateUserPoolClientInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserPoolDomainInputShapeAWSJSON(v *types.CreateUserPoolDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteGroupInputShapeAWSJSON(v *types.DeleteGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteIdentityProviderInputShapeAWSJSON(v *types.DeleteIdentityProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteResourceServerInputShapeAWSJSON(v *types.DeleteResourceServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserInputShapeAWSJSON(v *types.DeleteUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserAttributesInputShapeAWSJSON(v *types.DeleteUserAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserPoolInputShapeAWSJSON(v *types.DeleteUserPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserPoolClientInputShapeAWSJSON(v *types.DeleteUserPoolClientInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserPoolDomainInputShapeAWSJSON(v *types.DeleteUserPoolDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeIdentityProviderInputShapeAWSJSON(v *types.DescribeIdentityProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeResourceServerInputShapeAWSJSON(v *types.DescribeResourceServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRiskConfigurationInputShapeAWSJSON(v *types.DescribeRiskConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserImportJobInputShapeAWSJSON(v *types.DescribeUserImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserPoolInputShapeAWSJSON(v *types.DescribeUserPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserPoolClientInputShapeAWSJSON(v *types.DescribeUserPoolClientInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserPoolDomainInputShapeAWSJSON(v *types.DescribeUserPoolDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalForgetDeviceInputShapeAWSJSON(v *types.ForgetDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalForgotPasswordInputShapeAWSJSON(v *types.ForgotPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetCSVHeaderInputShapeAWSJSON(v *types.GetCSVHeaderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeviceInputShapeAWSJSON(v *types.GetDeviceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetGroupInputShapeAWSJSON(v *types.GetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetIdentityProviderByIdentifierInputShapeAWSJSON(v *types.GetIdentityProviderByIdentifierInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetSigningCertificateInputShapeAWSJSON(v *types.GetSigningCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetUICustomizationInputShapeAWSJSON(v *types.GetUICustomizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetUserInputShapeAWSJSON(v *types.GetUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetUserAttributeVerificationCodeInputShapeAWSJSON(v *types.GetUserAttributeVerificationCodeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetUserPoolMfaConfigInputShapeAWSJSON(v *types.GetUserPoolMfaConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGlobalSignOutInputShapeAWSJSON(v *types.GlobalSignOutInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalInitiateAuthInputShapeAWSJSON(v *types.InitiateAuthInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDevicesInputShapeAWSJSON(v *types.ListDevicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListGroupsInputShapeAWSJSON(v *types.ListGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListIdentityProvidersInputShapeAWSJSON(v *types.ListIdentityProvidersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListResourceServersInputShapeAWSJSON(v *types.ListResourceServersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUserImportJobsInputShapeAWSJSON(v *types.ListUserImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUserPoolClientsInputShapeAWSJSON(v *types.ListUserPoolClientsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUserPoolsInputShapeAWSJSON(v *types.ListUserPoolsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUsersInputShapeAWSJSON(v *types.ListUsersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListUsersInGroupInputShapeAWSJSON(v *types.ListUsersInGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalResendConfirmationCodeInputShapeAWSJSON(v *types.ResendConfirmationCodeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRespondToAuthChallengeInputShapeAWSJSON(v *types.RespondToAuthChallengeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetRiskConfigurationInputShapeAWSJSON(v *types.SetRiskConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetUICustomizationInputShapeAWSJSON(v *types.SetUICustomizationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetUserMFAPreferenceInputShapeAWSJSON(v *types.SetUserMFAPreferenceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetUserPoolMfaConfigInputShapeAWSJSON(v *types.SetUserPoolMfaConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetUserSettingsInputShapeAWSJSON(v *types.SetUserSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSignUpInputShapeAWSJSON(v *types.SignUpInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartUserImportJobInputShapeAWSJSON(v *types.StartUserImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopUserImportJobInputShapeAWSJSON(v *types.StopUserImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateAuthEventFeedbackInputShapeAWSJSON(v *types.UpdateAuthEventFeedbackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDeviceStatusInputShapeAWSJSON(v *types.UpdateDeviceStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGroupInputShapeAWSJSON(v *types.UpdateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateIdentityProviderInputShapeAWSJSON(v *types.UpdateIdentityProviderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateResourceServerInputShapeAWSJSON(v *types.UpdateResourceServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUserAttributesInputShapeAWSJSON(v *types.UpdateUserAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUserPoolInputShapeAWSJSON(v *types.UpdateUserPoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUserPoolClientInputShapeAWSJSON(v *types.UpdateUserPoolClientInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateUserPoolDomainInputShapeAWSJSON(v *types.UpdateUserPoolDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalVerifySoftwareTokenInputShapeAWSJSON(v *types.VerifySoftwareTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalVerifyUserAttributeInputShapeAWSJSON(v *types.VerifyUserAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AddCustomAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddCustomAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddCustomAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddCustomAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminAddUserToGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminAddUserToGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminAddUserToGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminAddUserToGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminConfirmSignUpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminConfirmSignUpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminConfirmSignUpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminConfirmSignUp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminCreateUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminCreateUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminCreateUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminCreateUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminDeleteUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminDeleteUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminDeleteUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminDeleteUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminDeleteUserAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminDeleteUserAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminDeleteUserAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminDeleteUserAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminDisableProviderForUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminDisableProviderForUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminDisableProviderForUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminDisableProviderForUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminDisableUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminDisableUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminDisableUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminDisableUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminEnableUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminEnableUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminEnableUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminEnableUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminForgetDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminForgetDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminForgetDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminForgetDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminGetDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminGetDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminGetDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminGetDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminGetUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminGetUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminGetUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminGetUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminInitiateAuthMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminInitiateAuthInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminInitiateAuthMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminInitiateAuth.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminLinkProviderForUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminLinkProviderForUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminLinkProviderForUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminLinkProviderForUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminListDevicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminListDevicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminListDevicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminListDevices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminListGroupsForUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminListGroupsForUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminListGroupsForUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminListGroupsForUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminListUserAuthEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminListUserAuthEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminListUserAuthEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminListUserAuthEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminRemoveUserFromGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminRemoveUserFromGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminRemoveUserFromGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminRemoveUserFromGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminResetUserPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminResetUserPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminResetUserPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminResetUserPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminRespondToAuthChallengeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminRespondToAuthChallengeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminRespondToAuthChallengeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminRespondToAuthChallenge.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminSetUserMFAPreferenceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminSetUserMFAPreferenceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminSetUserMFAPreferenceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminSetUserMFAPreference.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminSetUserPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminSetUserPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminSetUserPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminSetUserPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminSetUserSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminSetUserSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminSetUserSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminSetUserSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminUpdateAuthEventFeedbackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminUpdateAuthEventFeedbackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminUpdateAuthEventFeedbackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminUpdateAuthEventFeedback.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminUpdateDeviceStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminUpdateDeviceStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminUpdateDeviceStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminUpdateDeviceStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminUpdateUserAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminUpdateUserAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminUpdateUserAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminUpdateUserAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdminUserGlobalSignOutMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdminUserGlobalSignOutInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdminUserGlobalSignOutMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdminUserGlobalSignOut.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateSoftwareTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateSoftwareTokenInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateSoftwareTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateSoftwareToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ChangePasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalChangePasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ChangePasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ChangePassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConfirmDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConfirmDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConfirmDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConfirmDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConfirmForgotPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConfirmForgotPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConfirmForgotPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConfirmForgotPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConfirmSignUpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConfirmSignUpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConfirmSignUpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConfirmSignUp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateIdentityProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateIdentityProviderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateIdentityProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateIdentityProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateResourceServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateResourceServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateResourceServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateResourceServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUserImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUserPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserPoolClientMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserPoolClientInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserPoolClientMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUserPoolClient.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserPoolDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserPoolDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserPoolDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUserPoolDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteIdentityProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteIdentityProviderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteIdentityProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteIdentityProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteResourceServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteResourceServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteResourceServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteResourceServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserPoolClientMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserPoolClientInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserPoolClientMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserPoolClient.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserPoolDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserPoolDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserPoolDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUserPoolDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeIdentityProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeIdentityProviderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeIdentityProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeIdentityProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeResourceServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeResourceServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeResourceServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeResourceServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRiskConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRiskConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRiskConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRiskConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUserImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUserPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserPoolClientMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserPoolClientInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserPoolClientMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUserPoolClient.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserPoolDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserPoolDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserPoolDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUserPoolDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ForgetDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalForgetDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ForgetDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ForgetDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ForgotPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalForgotPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ForgotPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ForgotPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCSVHeaderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCSVHeaderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCSVHeaderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCSVHeader.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeviceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeviceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeviceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDevice.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIdentityProviderByIdentifierMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIdentityProviderByIdentifierInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIdentityProviderByIdentifierMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIdentityProviderByIdentifier.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSigningCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSigningCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSigningCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSigningCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUICustomizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUICustomizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUICustomizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUICustomization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUserAttributeVerificationCodeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUserAttributeVerificationCodeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUserAttributeVerificationCodeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUserAttributeVerificationCode.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUserPoolMfaConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUserPoolMfaConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUserPoolMfaConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUserPoolMfaConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GlobalSignOutMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGlobalSignOutInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GlobalSignOutMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GlobalSignOut.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InitiateAuthMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInitiateAuthInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InitiateAuthMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InitiateAuth.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDevicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDevicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDevicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDevices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListIdentityProvidersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListIdentityProvidersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListIdentityProvidersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListIdentityProviders.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourceServersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourceServersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourceServersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResourceServers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUserImportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUserImportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUserImportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUserImportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUserPoolClientsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUserPoolClientsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUserPoolClientsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUserPoolClients.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUserPoolsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUserPoolsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUserPoolsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUserPools.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUsersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUsersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUsersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUsers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListUsersInGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListUsersInGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListUsersInGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListUsersInGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResendConfirmationCodeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResendConfirmationCodeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResendConfirmationCodeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResendConfirmationCode.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RespondToAuthChallengeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRespondToAuthChallengeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RespondToAuthChallengeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RespondToAuthChallenge.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetRiskConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetRiskConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetRiskConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetRiskConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetUICustomizationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetUICustomizationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetUICustomizationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetUICustomization.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetUserMFAPreferenceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetUserMFAPreferenceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetUserMFAPreferenceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetUserMFAPreference.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetUserPoolMfaConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetUserPoolMfaConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetUserPoolMfaConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetUserPoolMfaConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetUserSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetUserSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetUserSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetUserSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SignUpMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSignUpInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SignUpMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SignUp.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartUserImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartUserImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartUserImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartUserImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopUserImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopUserImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopUserImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopUserImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateAuthEventFeedbackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateAuthEventFeedbackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateAuthEventFeedbackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateAuthEventFeedback.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDeviceStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDeviceStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDeviceStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDeviceStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateIdentityProviderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateIdentityProviderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateIdentityProviderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateIdentityProvider.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateResourceServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateResourceServerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateResourceServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateResourceServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUserAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserPoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserPoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserPoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUserPool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserPoolClientMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserPoolClientInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserPoolClientMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUserPoolClient.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateUserPoolDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateUserPoolDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateUserPoolDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateUserPoolDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m VerifySoftwareTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalVerifySoftwareTokenInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m VerifySoftwareTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "VerifySoftwareToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m VerifyUserAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalVerifyUserAttributeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m VerifyUserAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "VerifyUserAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
