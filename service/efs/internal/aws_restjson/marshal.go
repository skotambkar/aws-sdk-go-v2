// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/efs/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateFileSystemMarshaler defines marshaler for CreateFileSystem operation
type CreateFileSystemMarshaler struct {
	Input *types.CreateFileSystemInput
}

// CreateMountTargetMarshaler defines marshaler for CreateMountTarget operation
type CreateMountTargetMarshaler struct {
	Input *types.CreateMountTargetInput
}

// CreateTagsMarshaler defines marshaler for CreateTags operation
type CreateTagsMarshaler struct {
	Input *types.CreateTagsInput
}

// DeleteFileSystemMarshaler defines marshaler for DeleteFileSystem operation
type DeleteFileSystemMarshaler struct {
	Input *types.DeleteFileSystemInput
}

// DeleteMountTargetMarshaler defines marshaler for DeleteMountTarget operation
type DeleteMountTargetMarshaler struct {
	Input *types.DeleteMountTargetInput
}

// DeleteTagsMarshaler defines marshaler for DeleteTags operation
type DeleteTagsMarshaler struct {
	Input *types.DeleteTagsInput
}

// DescribeFileSystemsMarshaler defines marshaler for DescribeFileSystems operation
type DescribeFileSystemsMarshaler struct {
	Input *types.DescribeFileSystemsInput
}

// DescribeLifecycleConfigurationMarshaler defines marshaler for DescribeLifecycleConfiguration operation
type DescribeLifecycleConfigurationMarshaler struct {
	Input *types.DescribeLifecycleConfigurationInput
}

// DescribeMountTargetSecurityGroupsMarshaler defines marshaler for DescribeMountTargetSecurityGroups operation
type DescribeMountTargetSecurityGroupsMarshaler struct {
	Input *types.DescribeMountTargetSecurityGroupsInput
}

// DescribeMountTargetsMarshaler defines marshaler for DescribeMountTargets operation
type DescribeMountTargetsMarshaler struct {
	Input *types.DescribeMountTargetsInput
}

// DescribeTagsMarshaler defines marshaler for DescribeTags operation
type DescribeTagsMarshaler struct {
	Input *types.DescribeTagsInput
}

// ModifyMountTargetSecurityGroupsMarshaler defines marshaler for ModifyMountTargetSecurityGroups operation
type ModifyMountTargetSecurityGroupsMarshaler struct {
	Input *types.ModifyMountTargetSecurityGroupsInput
}

// PutLifecycleConfigurationMarshaler defines marshaler for PutLifecycleConfiguration operation
type PutLifecycleConfigurationMarshaler struct {
	Input *types.PutLifecycleConfigurationInput
}

// UpdateFileSystemMarshaler defines marshaler for UpdateFileSystem operation
type UpdateFileSystemMarshaler struct {
	Input *types.UpdateFileSystemInput
}

func MarshalCreateFileSystemInputShapeAWSREST(v *types.CreateFileSystemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateFileSystemInputShapeAWSJSON(v *types.CreateFileSystemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateMountTargetInputShapeAWSREST(v *types.CreateMountTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateMountTargetInputShapeAWSJSON(v *types.CreateMountTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateTagsInputShapeAWSREST(v *types.CreateTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateTagsInputShapeAWSJSON(v *types.CreateTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteFileSystemInputShapeAWSREST(v *types.DeleteFileSystemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteFileSystemInputShapeAWSJSON(v *types.DeleteFileSystemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteMountTargetInputShapeAWSREST(v *types.DeleteMountTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteMountTargetInputShapeAWSJSON(v *types.DeleteMountTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteTagsInputShapeAWSREST(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteTagsInputShapeAWSJSON(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeFileSystemsInputShapeAWSREST(v *types.DescribeFileSystemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeFileSystemsInputShapeAWSJSON(v *types.DescribeFileSystemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeLifecycleConfigurationInputShapeAWSREST(v *types.DescribeLifecycleConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeLifecycleConfigurationInputShapeAWSJSON(v *types.DescribeLifecycleConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeMountTargetSecurityGroupsInputShapeAWSREST(v *types.DescribeMountTargetSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeMountTargetSecurityGroupsInputShapeAWSJSON(v *types.DescribeMountTargetSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeMountTargetsInputShapeAWSREST(v *types.DescribeMountTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeMountTargetsInputShapeAWSJSON(v *types.DescribeMountTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeTagsInputShapeAWSREST(v *types.DescribeTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeTagsInputShapeAWSJSON(v *types.DescribeTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalModifyMountTargetSecurityGroupsInputShapeAWSREST(v *types.ModifyMountTargetSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalModifyMountTargetSecurityGroupsInputShapeAWSJSON(v *types.ModifyMountTargetSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutLifecycleConfigurationInputShapeAWSREST(v *types.PutLifecycleConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutLifecycleConfigurationInputShapeAWSJSON(v *types.PutLifecycleConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateFileSystemInputShapeAWSREST(v *types.UpdateFileSystemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateFileSystemInputShapeAWSJSON(v *types.UpdateFileSystemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateFileSystemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFileSystemInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateFileSystemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFileSystemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFileSystem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMountTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMountTargetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateMountTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMountTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMountTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFileSystemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFileSystemInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteFileSystemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFileSystemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFileSystem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMountTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMountTargetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteMountTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMountTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMountTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFileSystemsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFileSystemsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeFileSystemsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFileSystemsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFileSystems.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLifecycleConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLifecycleConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeLifecycleConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLifecycleConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLifecycleConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMountTargetSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMountTargetSecurityGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeMountTargetSecurityGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMountTargetSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMountTargetSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMountTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMountTargetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeMountTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMountTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMountTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyMountTargetSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyMountTargetSecurityGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalModifyMountTargetSecurityGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyMountTargetSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyMountTargetSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutLifecycleConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutLifecycleConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutLifecycleConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutLifecycleConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutLifecycleConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFileSystemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFileSystemInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateFileSystemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFileSystemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFileSystem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
