// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/robomaker/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchDescribeSimulationJobMarshaler defines marshaler for BatchDescribeSimulationJob operation
type BatchDescribeSimulationJobMarshaler struct {
	Input *types.BatchDescribeSimulationJobInput
}

// CancelDeploymentJobMarshaler defines marshaler for CancelDeploymentJob operation
type CancelDeploymentJobMarshaler struct {
	Input *types.CancelDeploymentJobInput
}

// CancelSimulationJobMarshaler defines marshaler for CancelSimulationJob operation
type CancelSimulationJobMarshaler struct {
	Input *types.CancelSimulationJobInput
}

// CreateDeploymentJobMarshaler defines marshaler for CreateDeploymentJob operation
type CreateDeploymentJobMarshaler struct {
	Input *types.CreateDeploymentJobInput
}

// CreateFleetMarshaler defines marshaler for CreateFleet operation
type CreateFleetMarshaler struct {
	Input *types.CreateFleetInput
}

// CreateRobotMarshaler defines marshaler for CreateRobot operation
type CreateRobotMarshaler struct {
	Input *types.CreateRobotInput
}

// CreateRobotApplicationMarshaler defines marshaler for CreateRobotApplication operation
type CreateRobotApplicationMarshaler struct {
	Input *types.CreateRobotApplicationInput
}

// CreateRobotApplicationVersionMarshaler defines marshaler for CreateRobotApplicationVersion operation
type CreateRobotApplicationVersionMarshaler struct {
	Input *types.CreateRobotApplicationVersionInput
}

// CreateSimulationApplicationMarshaler defines marshaler for CreateSimulationApplication operation
type CreateSimulationApplicationMarshaler struct {
	Input *types.CreateSimulationApplicationInput
}

// CreateSimulationApplicationVersionMarshaler defines marshaler for CreateSimulationApplicationVersion operation
type CreateSimulationApplicationVersionMarshaler struct {
	Input *types.CreateSimulationApplicationVersionInput
}

// CreateSimulationJobMarshaler defines marshaler for CreateSimulationJob operation
type CreateSimulationJobMarshaler struct {
	Input *types.CreateSimulationJobInput
}

// DeleteFleetMarshaler defines marshaler for DeleteFleet operation
type DeleteFleetMarshaler struct {
	Input *types.DeleteFleetInput
}

// DeleteRobotMarshaler defines marshaler for DeleteRobot operation
type DeleteRobotMarshaler struct {
	Input *types.DeleteRobotInput
}

// DeleteRobotApplicationMarshaler defines marshaler for DeleteRobotApplication operation
type DeleteRobotApplicationMarshaler struct {
	Input *types.DeleteRobotApplicationInput
}

// DeleteSimulationApplicationMarshaler defines marshaler for DeleteSimulationApplication operation
type DeleteSimulationApplicationMarshaler struct {
	Input *types.DeleteSimulationApplicationInput
}

// DeregisterRobotMarshaler defines marshaler for DeregisterRobot operation
type DeregisterRobotMarshaler struct {
	Input *types.DeregisterRobotInput
}

// DescribeDeploymentJobMarshaler defines marshaler for DescribeDeploymentJob operation
type DescribeDeploymentJobMarshaler struct {
	Input *types.DescribeDeploymentJobInput
}

// DescribeFleetMarshaler defines marshaler for DescribeFleet operation
type DescribeFleetMarshaler struct {
	Input *types.DescribeFleetInput
}

// DescribeRobotMarshaler defines marshaler for DescribeRobot operation
type DescribeRobotMarshaler struct {
	Input *types.DescribeRobotInput
}

// DescribeRobotApplicationMarshaler defines marshaler for DescribeRobotApplication operation
type DescribeRobotApplicationMarshaler struct {
	Input *types.DescribeRobotApplicationInput
}

// DescribeSimulationApplicationMarshaler defines marshaler for DescribeSimulationApplication operation
type DescribeSimulationApplicationMarshaler struct {
	Input *types.DescribeSimulationApplicationInput
}

// DescribeSimulationJobMarshaler defines marshaler for DescribeSimulationJob operation
type DescribeSimulationJobMarshaler struct {
	Input *types.DescribeSimulationJobInput
}

// ListDeploymentJobsMarshaler defines marshaler for ListDeploymentJobs operation
type ListDeploymentJobsMarshaler struct {
	Input *types.ListDeploymentJobsInput
}

// ListFleetsMarshaler defines marshaler for ListFleets operation
type ListFleetsMarshaler struct {
	Input *types.ListFleetsInput
}

// ListRobotApplicationsMarshaler defines marshaler for ListRobotApplications operation
type ListRobotApplicationsMarshaler struct {
	Input *types.ListRobotApplicationsInput
}

// ListRobotsMarshaler defines marshaler for ListRobots operation
type ListRobotsMarshaler struct {
	Input *types.ListRobotsInput
}

// ListSimulationApplicationsMarshaler defines marshaler for ListSimulationApplications operation
type ListSimulationApplicationsMarshaler struct {
	Input *types.ListSimulationApplicationsInput
}

// ListSimulationJobsMarshaler defines marshaler for ListSimulationJobs operation
type ListSimulationJobsMarshaler struct {
	Input *types.ListSimulationJobsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// RegisterRobotMarshaler defines marshaler for RegisterRobot operation
type RegisterRobotMarshaler struct {
	Input *types.RegisterRobotInput
}

// RestartSimulationJobMarshaler defines marshaler for RestartSimulationJob operation
type RestartSimulationJobMarshaler struct {
	Input *types.RestartSimulationJobInput
}

// SyncDeploymentJobMarshaler defines marshaler for SyncDeploymentJob operation
type SyncDeploymentJobMarshaler struct {
	Input *types.SyncDeploymentJobInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateRobotApplicationMarshaler defines marshaler for UpdateRobotApplication operation
type UpdateRobotApplicationMarshaler struct {
	Input *types.UpdateRobotApplicationInput
}

// UpdateSimulationApplicationMarshaler defines marshaler for UpdateSimulationApplication operation
type UpdateSimulationApplicationMarshaler struct {
	Input *types.UpdateSimulationApplicationInput
}

func MarshalBatchDescribeSimulationJobInputShapeAWSREST(v *types.BatchDescribeSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchDescribeSimulationJobInputShapeAWSJSON(v *types.BatchDescribeSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCancelDeploymentJobInputShapeAWSREST(v *types.CancelDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelDeploymentJobInputShapeAWSJSON(v *types.CancelDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCancelSimulationJobInputShapeAWSREST(v *types.CancelSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelSimulationJobInputShapeAWSJSON(v *types.CancelSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateDeploymentJobInputShapeAWSREST(v *types.CreateDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateDeploymentJobInputShapeAWSJSON(v *types.CreateDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateFleetInputShapeAWSREST(v *types.CreateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateFleetInputShapeAWSJSON(v *types.CreateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateRobotInputShapeAWSREST(v *types.CreateRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateRobotInputShapeAWSJSON(v *types.CreateRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateRobotApplicationInputShapeAWSREST(v *types.CreateRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateRobotApplicationInputShapeAWSJSON(v *types.CreateRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateRobotApplicationVersionInputShapeAWSREST(v *types.CreateRobotApplicationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateRobotApplicationVersionInputShapeAWSJSON(v *types.CreateRobotApplicationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSimulationApplicationInputShapeAWSREST(v *types.CreateSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSimulationApplicationInputShapeAWSJSON(v *types.CreateSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSimulationApplicationVersionInputShapeAWSREST(v *types.CreateSimulationApplicationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSimulationApplicationVersionInputShapeAWSJSON(v *types.CreateSimulationApplicationVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSimulationJobInputShapeAWSREST(v *types.CreateSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSimulationJobInputShapeAWSJSON(v *types.CreateSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteFleetInputShapeAWSREST(v *types.DeleteFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteFleetInputShapeAWSJSON(v *types.DeleteFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteRobotInputShapeAWSREST(v *types.DeleteRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteRobotInputShapeAWSJSON(v *types.DeleteRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteRobotApplicationInputShapeAWSREST(v *types.DeleteRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteRobotApplicationInputShapeAWSJSON(v *types.DeleteRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSimulationApplicationInputShapeAWSREST(v *types.DeleteSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSimulationApplicationInputShapeAWSJSON(v *types.DeleteSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeregisterRobotInputShapeAWSREST(v *types.DeregisterRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeregisterRobotInputShapeAWSJSON(v *types.DeregisterRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeDeploymentJobInputShapeAWSREST(v *types.DescribeDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeDeploymentJobInputShapeAWSJSON(v *types.DescribeDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeFleetInputShapeAWSREST(v *types.DescribeFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeFleetInputShapeAWSJSON(v *types.DescribeFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeRobotInputShapeAWSREST(v *types.DescribeRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeRobotInputShapeAWSJSON(v *types.DescribeRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeRobotApplicationInputShapeAWSREST(v *types.DescribeRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeRobotApplicationInputShapeAWSJSON(v *types.DescribeRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeSimulationApplicationInputShapeAWSREST(v *types.DescribeSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeSimulationApplicationInputShapeAWSJSON(v *types.DescribeSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeSimulationJobInputShapeAWSREST(v *types.DescribeSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeSimulationJobInputShapeAWSJSON(v *types.DescribeSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListDeploymentJobsInputShapeAWSREST(v *types.ListDeploymentJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListDeploymentJobsInputShapeAWSJSON(v *types.ListDeploymentJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListFleetsInputShapeAWSREST(v *types.ListFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListFleetsInputShapeAWSJSON(v *types.ListFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListRobotApplicationsInputShapeAWSREST(v *types.ListRobotApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListRobotApplicationsInputShapeAWSJSON(v *types.ListRobotApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListRobotsInputShapeAWSREST(v *types.ListRobotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListRobotsInputShapeAWSJSON(v *types.ListRobotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSimulationApplicationsInputShapeAWSREST(v *types.ListSimulationApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSimulationApplicationsInputShapeAWSJSON(v *types.ListSimulationApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSimulationJobsInputShapeAWSREST(v *types.ListSimulationJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSimulationJobsInputShapeAWSJSON(v *types.ListSimulationJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalRegisterRobotInputShapeAWSREST(v *types.RegisterRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalRegisterRobotInputShapeAWSJSON(v *types.RegisterRobotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalRestartSimulationJobInputShapeAWSREST(v *types.RestartSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalRestartSimulationJobInputShapeAWSJSON(v *types.RestartSimulationJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSyncDeploymentJobInputShapeAWSREST(v *types.SyncDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSyncDeploymentJobInputShapeAWSJSON(v *types.SyncDeploymentJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateRobotApplicationInputShapeAWSREST(v *types.UpdateRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateRobotApplicationInputShapeAWSJSON(v *types.UpdateRobotApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateSimulationApplicationInputShapeAWSREST(v *types.UpdateSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateSimulationApplicationInputShapeAWSJSON(v *types.UpdateSimulationApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m BatchDescribeSimulationJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDescribeSimulationJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchDescribeSimulationJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDescribeSimulationJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDescribeSimulationJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelDeploymentJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelDeploymentJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelDeploymentJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelDeploymentJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelDeploymentJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelSimulationJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelSimulationJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelSimulationJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelSimulationJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelSimulationJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateDeploymentJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeploymentJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFleetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRobotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRobotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateRobotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRobotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRobot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRobotApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRobotApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateRobotApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRobotApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRobotApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRobotApplicationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRobotApplicationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateRobotApplicationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRobotApplicationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRobotApplicationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSimulationApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSimulationApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSimulationApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSimulationApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSimulationApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSimulationApplicationVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSimulationApplicationVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSimulationApplicationVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSimulationApplicationVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSimulationApplicationVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSimulationJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSimulationJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSimulationJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSimulationJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSimulationJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFleetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRobotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRobotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteRobotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRobotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRobot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRobotApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRobotApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteRobotApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRobotApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRobotApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSimulationApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSimulationApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSimulationApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSimulationApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSimulationApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterRobotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterRobotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeregisterRobotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterRobotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterRobot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDeploymentJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDeploymentJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeDeploymentJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDeploymentJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDeploymentJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRobotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRobotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeRobotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRobotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRobot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRobotApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRobotApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeRobotApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRobotApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRobotApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSimulationApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSimulationApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeSimulationApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSimulationApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSimulationApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSimulationJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSimulationJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeSimulationJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSimulationJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSimulationJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListDeploymentJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeploymentJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFleetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFleetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListFleetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFleetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFleets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRobotApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRobotApplicationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListRobotApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRobotApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRobotApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRobotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRobotsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListRobotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRobotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRobots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSimulationApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSimulationApplicationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSimulationApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSimulationApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSimulationApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSimulationJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSimulationJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSimulationJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSimulationJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSimulationJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterRobotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterRobotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalRegisterRobotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterRobotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterRobot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestartSimulationJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestartSimulationJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalRestartSimulationJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestartSimulationJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestartSimulationJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SyncDeploymentJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSyncDeploymentJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSyncDeploymentJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SyncDeploymentJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SyncDeploymentJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRobotApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRobotApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateRobotApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRobotApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRobotApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSimulationApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSimulationApplicationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateSimulationApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSimulationApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSimulationApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
