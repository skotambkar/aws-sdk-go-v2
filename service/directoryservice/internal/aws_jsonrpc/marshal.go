// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/directoryservice/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptSharedDirectoryMarshaler defines marshaler for AcceptSharedDirectory operation
type AcceptSharedDirectoryMarshaler struct {
	Input *types.AcceptSharedDirectoryInput
}

// AddIpRoutesMarshaler defines marshaler for AddIpRoutes operation
type AddIpRoutesMarshaler struct {
	Input *types.AddIpRoutesInput
}

// AddTagsToResourceMarshaler defines marshaler for AddTagsToResource operation
type AddTagsToResourceMarshaler struct {
	Input *types.AddTagsToResourceInput
}

// CancelSchemaExtensionMarshaler defines marshaler for CancelSchemaExtension operation
type CancelSchemaExtensionMarshaler struct {
	Input *types.CancelSchemaExtensionInput
}

// ConnectDirectoryMarshaler defines marshaler for ConnectDirectory operation
type ConnectDirectoryMarshaler struct {
	Input *types.ConnectDirectoryInput
}

// CreateAliasMarshaler defines marshaler for CreateAlias operation
type CreateAliasMarshaler struct {
	Input *types.CreateAliasInput
}

// CreateComputerMarshaler defines marshaler for CreateComputer operation
type CreateComputerMarshaler struct {
	Input *types.CreateComputerInput
}

// CreateConditionalForwarderMarshaler defines marshaler for CreateConditionalForwarder operation
type CreateConditionalForwarderMarshaler struct {
	Input *types.CreateConditionalForwarderInput
}

// CreateDirectoryMarshaler defines marshaler for CreateDirectory operation
type CreateDirectoryMarshaler struct {
	Input *types.CreateDirectoryInput
}

// CreateLogSubscriptionMarshaler defines marshaler for CreateLogSubscription operation
type CreateLogSubscriptionMarshaler struct {
	Input *types.CreateLogSubscriptionInput
}

// CreateMicrosoftADMarshaler defines marshaler for CreateMicrosoftAD operation
type CreateMicrosoftADMarshaler struct {
	Input *types.CreateMicrosoftADInput
}

// CreateSnapshotMarshaler defines marshaler for CreateSnapshot operation
type CreateSnapshotMarshaler struct {
	Input *types.CreateSnapshotInput
}

// CreateTrustMarshaler defines marshaler for CreateTrust operation
type CreateTrustMarshaler struct {
	Input *types.CreateTrustInput
}

// DeleteConditionalForwarderMarshaler defines marshaler for DeleteConditionalForwarder operation
type DeleteConditionalForwarderMarshaler struct {
	Input *types.DeleteConditionalForwarderInput
}

// DeleteDirectoryMarshaler defines marshaler for DeleteDirectory operation
type DeleteDirectoryMarshaler struct {
	Input *types.DeleteDirectoryInput
}

// DeleteLogSubscriptionMarshaler defines marshaler for DeleteLogSubscription operation
type DeleteLogSubscriptionMarshaler struct {
	Input *types.DeleteLogSubscriptionInput
}

// DeleteSnapshotMarshaler defines marshaler for DeleteSnapshot operation
type DeleteSnapshotMarshaler struct {
	Input *types.DeleteSnapshotInput
}

// DeleteTrustMarshaler defines marshaler for DeleteTrust operation
type DeleteTrustMarshaler struct {
	Input *types.DeleteTrustInput
}

// DeregisterEventTopicMarshaler defines marshaler for DeregisterEventTopic operation
type DeregisterEventTopicMarshaler struct {
	Input *types.DeregisterEventTopicInput
}

// DescribeConditionalForwardersMarshaler defines marshaler for DescribeConditionalForwarders operation
type DescribeConditionalForwardersMarshaler struct {
	Input *types.DescribeConditionalForwardersInput
}

// DescribeDirectoriesMarshaler defines marshaler for DescribeDirectories operation
type DescribeDirectoriesMarshaler struct {
	Input *types.DescribeDirectoriesInput
}

// DescribeDomainControllersMarshaler defines marshaler for DescribeDomainControllers operation
type DescribeDomainControllersMarshaler struct {
	Input *types.DescribeDomainControllersInput
}

// DescribeEventTopicsMarshaler defines marshaler for DescribeEventTopics operation
type DescribeEventTopicsMarshaler struct {
	Input *types.DescribeEventTopicsInput
}

// DescribeSharedDirectoriesMarshaler defines marshaler for DescribeSharedDirectories operation
type DescribeSharedDirectoriesMarshaler struct {
	Input *types.DescribeSharedDirectoriesInput
}

// DescribeSnapshotsMarshaler defines marshaler for DescribeSnapshots operation
type DescribeSnapshotsMarshaler struct {
	Input *types.DescribeSnapshotsInput
}

// DescribeTrustsMarshaler defines marshaler for DescribeTrusts operation
type DescribeTrustsMarshaler struct {
	Input *types.DescribeTrustsInput
}

// DisableRadiusMarshaler defines marshaler for DisableRadius operation
type DisableRadiusMarshaler struct {
	Input *types.DisableRadiusInput
}

// DisableSsoMarshaler defines marshaler for DisableSso operation
type DisableSsoMarshaler struct {
	Input *types.DisableSsoInput
}

// EnableRadiusMarshaler defines marshaler for EnableRadius operation
type EnableRadiusMarshaler struct {
	Input *types.EnableRadiusInput
}

// EnableSsoMarshaler defines marshaler for EnableSso operation
type EnableSsoMarshaler struct {
	Input *types.EnableSsoInput
}

// GetDirectoryLimitsMarshaler defines marshaler for GetDirectoryLimits operation
type GetDirectoryLimitsMarshaler struct {
	Input *types.GetDirectoryLimitsInput
}

// GetSnapshotLimitsMarshaler defines marshaler for GetSnapshotLimits operation
type GetSnapshotLimitsMarshaler struct {
	Input *types.GetSnapshotLimitsInput
}

// ListIpRoutesMarshaler defines marshaler for ListIpRoutes operation
type ListIpRoutesMarshaler struct {
	Input *types.ListIpRoutesInput
}

// ListLogSubscriptionsMarshaler defines marshaler for ListLogSubscriptions operation
type ListLogSubscriptionsMarshaler struct {
	Input *types.ListLogSubscriptionsInput
}

// ListSchemaExtensionsMarshaler defines marshaler for ListSchemaExtensions operation
type ListSchemaExtensionsMarshaler struct {
	Input *types.ListSchemaExtensionsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// RegisterEventTopicMarshaler defines marshaler for RegisterEventTopic operation
type RegisterEventTopicMarshaler struct {
	Input *types.RegisterEventTopicInput
}

// RejectSharedDirectoryMarshaler defines marshaler for RejectSharedDirectory operation
type RejectSharedDirectoryMarshaler struct {
	Input *types.RejectSharedDirectoryInput
}

// RemoveIpRoutesMarshaler defines marshaler for RemoveIpRoutes operation
type RemoveIpRoutesMarshaler struct {
	Input *types.RemoveIpRoutesInput
}

// RemoveTagsFromResourceMarshaler defines marshaler for RemoveTagsFromResource operation
type RemoveTagsFromResourceMarshaler struct {
	Input *types.RemoveTagsFromResourceInput
}

// ResetUserPasswordMarshaler defines marshaler for ResetUserPassword operation
type ResetUserPasswordMarshaler struct {
	Input *types.ResetUserPasswordInput
}

// RestoreFromSnapshotMarshaler defines marshaler for RestoreFromSnapshot operation
type RestoreFromSnapshotMarshaler struct {
	Input *types.RestoreFromSnapshotInput
}

// ShareDirectoryMarshaler defines marshaler for ShareDirectory operation
type ShareDirectoryMarshaler struct {
	Input *types.ShareDirectoryInput
}

// StartSchemaExtensionMarshaler defines marshaler for StartSchemaExtension operation
type StartSchemaExtensionMarshaler struct {
	Input *types.StartSchemaExtensionInput
}

// UnshareDirectoryMarshaler defines marshaler for UnshareDirectory operation
type UnshareDirectoryMarshaler struct {
	Input *types.UnshareDirectoryInput
}

// UpdateConditionalForwarderMarshaler defines marshaler for UpdateConditionalForwarder operation
type UpdateConditionalForwarderMarshaler struct {
	Input *types.UpdateConditionalForwarderInput
}

// UpdateNumberOfDomainControllersMarshaler defines marshaler for UpdateNumberOfDomainControllers operation
type UpdateNumberOfDomainControllersMarshaler struct {
	Input *types.UpdateNumberOfDomainControllersInput
}

// UpdateRadiusMarshaler defines marshaler for UpdateRadius operation
type UpdateRadiusMarshaler struct {
	Input *types.UpdateRadiusInput
}

// UpdateTrustMarshaler defines marshaler for UpdateTrust operation
type UpdateTrustMarshaler struct {
	Input *types.UpdateTrustInput
}

// VerifyTrustMarshaler defines marshaler for VerifyTrust operation
type VerifyTrustMarshaler struct {
	Input *types.VerifyTrustInput
}

func MarshalAcceptSharedDirectoryInputShapeAWSJSON(v *types.AcceptSharedDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddIpRoutesInputShapeAWSJSON(v *types.AddIpRoutesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddTagsToResourceInputShapeAWSJSON(v *types.AddTagsToResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCancelSchemaExtensionInputShapeAWSJSON(v *types.CancelSchemaExtensionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalConnectDirectoryInputShapeAWSJSON(v *types.ConnectDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateAliasInputShapeAWSJSON(v *types.CreateAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateComputerInputShapeAWSJSON(v *types.CreateComputerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateConditionalForwarderInputShapeAWSJSON(v *types.CreateConditionalForwarderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDirectoryInputShapeAWSJSON(v *types.CreateDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateLogSubscriptionInputShapeAWSJSON(v *types.CreateLogSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateMicrosoftADInputShapeAWSJSON(v *types.CreateMicrosoftADInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSnapshotInputShapeAWSJSON(v *types.CreateSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTrustInputShapeAWSJSON(v *types.CreateTrustInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteConditionalForwarderInputShapeAWSJSON(v *types.DeleteConditionalForwarderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDirectoryInputShapeAWSJSON(v *types.DeleteDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteLogSubscriptionInputShapeAWSJSON(v *types.DeleteLogSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSnapshotInputShapeAWSJSON(v *types.DeleteSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTrustInputShapeAWSJSON(v *types.DeleteTrustInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterEventTopicInputShapeAWSJSON(v *types.DeregisterEventTopicInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeConditionalForwardersInputShapeAWSJSON(v *types.DescribeConditionalForwardersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDirectoriesInputShapeAWSJSON(v *types.DescribeDirectoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDomainControllersInputShapeAWSJSON(v *types.DescribeDomainControllersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventTopicsInputShapeAWSJSON(v *types.DescribeEventTopicsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSharedDirectoriesInputShapeAWSJSON(v *types.DescribeSharedDirectoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSnapshotsInputShapeAWSJSON(v *types.DescribeSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTrustsInputShapeAWSJSON(v *types.DescribeTrustsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableRadiusInputShapeAWSJSON(v *types.DisableRadiusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableSsoInputShapeAWSJSON(v *types.DisableSsoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableRadiusInputShapeAWSJSON(v *types.EnableRadiusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableSsoInputShapeAWSJSON(v *types.EnableSsoInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDirectoryLimitsInputShapeAWSJSON(v *types.GetDirectoryLimitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetSnapshotLimitsInputShapeAWSJSON(v *types.GetSnapshotLimitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListIpRoutesInputShapeAWSJSON(v *types.ListIpRoutesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListLogSubscriptionsInputShapeAWSJSON(v *types.ListLogSubscriptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSchemaExtensionsInputShapeAWSJSON(v *types.ListSchemaExtensionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterEventTopicInputShapeAWSJSON(v *types.RegisterEventTopicInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRejectSharedDirectoryInputShapeAWSJSON(v *types.RejectSharedDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveIpRoutesInputShapeAWSJSON(v *types.RemoveIpRoutesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveTagsFromResourceInputShapeAWSJSON(v *types.RemoveTagsFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalResetUserPasswordInputShapeAWSJSON(v *types.ResetUserPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRestoreFromSnapshotInputShapeAWSJSON(v *types.RestoreFromSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalShareDirectoryInputShapeAWSJSON(v *types.ShareDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartSchemaExtensionInputShapeAWSJSON(v *types.StartSchemaExtensionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUnshareDirectoryInputShapeAWSJSON(v *types.UnshareDirectoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateConditionalForwarderInputShapeAWSJSON(v *types.UpdateConditionalForwarderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateNumberOfDomainControllersInputShapeAWSJSON(v *types.UpdateNumberOfDomainControllersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateRadiusInputShapeAWSJSON(v *types.UpdateRadiusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTrustInputShapeAWSJSON(v *types.UpdateTrustInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalVerifyTrustInputShapeAWSJSON(v *types.VerifyTrustInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AcceptSharedDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptSharedDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptSharedDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptSharedDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddIpRoutesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddIpRoutesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddIpRoutesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddIpRoutes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddTagsToResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelSchemaExtensionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelSchemaExtensionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelSchemaExtensionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelSchemaExtension.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConnectDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConnectDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConnectDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConnectDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateComputerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateComputerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateComputerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateComputer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateConditionalForwarderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateConditionalForwarderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateConditionalForwarderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateConditionalForwarder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLogSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLogSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLogSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLogSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMicrosoftADMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMicrosoftADInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMicrosoftADMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMicrosoftAD.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTrustMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTrustInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTrustMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTrust.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteConditionalForwarderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteConditionalForwarderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteConditionalForwarderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteConditionalForwarder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLogSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLogSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLogSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLogSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTrustMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTrustInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTrustMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTrust.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterEventTopicMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterEventTopicInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterEventTopicMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterEventTopic.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeConditionalForwardersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeConditionalForwardersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeConditionalForwardersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeConditionalForwarders.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDirectoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDirectoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDirectoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDirectories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDomainControllersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDomainControllersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDomainControllersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDomainControllers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventTopicsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventTopicsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventTopicsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventTopics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSharedDirectoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSharedDirectoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSharedDirectoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSharedDirectories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTrustsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTrustsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTrustsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTrusts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableRadiusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableRadiusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableRadiusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableRadius.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableSsoMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableSsoInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableSsoMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableSso.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableRadiusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableRadiusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableRadiusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableRadius.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableSsoMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableSsoInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableSsoMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableSso.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDirectoryLimitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDirectoryLimitsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDirectoryLimitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDirectoryLimits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSnapshotLimitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSnapshotLimitsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSnapshotLimitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSnapshotLimits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListIpRoutesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListIpRoutesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListIpRoutesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListIpRoutes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLogSubscriptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLogSubscriptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLogSubscriptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLogSubscriptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSchemaExtensionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSchemaExtensionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSchemaExtensionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSchemaExtensions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterEventTopicMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterEventTopicInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterEventTopicMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterEventTopic.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectSharedDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectSharedDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectSharedDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectSharedDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveIpRoutesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveIpRoutesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveIpRoutesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveIpRoutes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetUserPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetUserPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetUserPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetUserPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreFromSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreFromSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreFromSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreFromSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ShareDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalShareDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ShareDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ShareDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartSchemaExtensionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartSchemaExtensionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartSchemaExtensionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartSchemaExtension.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnshareDirectoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnshareDirectoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnshareDirectoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnshareDirectory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateConditionalForwarderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateConditionalForwarderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateConditionalForwarderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateConditionalForwarder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateNumberOfDomainControllersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateNumberOfDomainControllersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateNumberOfDomainControllersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateNumberOfDomainControllers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRadiusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRadiusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRadiusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRadius.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTrustMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTrustInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTrustMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTrust.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m VerifyTrustMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalVerifyTrustInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m VerifyTrustMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "VerifyTrust.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
