// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/elasticloadbalancing/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddTagsMarshaler defines marshaler for AddTags operation
type AddTagsMarshaler struct {
	Input *types.AddTagsInput
}

// ApplySecurityGroupsToLoadBalancerMarshaler defines marshaler for ApplySecurityGroupsToLoadBalancer operation
type ApplySecurityGroupsToLoadBalancerMarshaler struct {
	Input *types.ApplySecurityGroupsToLoadBalancerInput
}

// AttachLoadBalancerToSubnetsMarshaler defines marshaler for AttachLoadBalancerToSubnets operation
type AttachLoadBalancerToSubnetsMarshaler struct {
	Input *types.AttachLoadBalancerToSubnetsInput
}

// ConfigureHealthCheckMarshaler defines marshaler for ConfigureHealthCheck operation
type ConfigureHealthCheckMarshaler struct {
	Input *types.ConfigureHealthCheckInput
}

// CreateAppCookieStickinessPolicyMarshaler defines marshaler for CreateAppCookieStickinessPolicy operation
type CreateAppCookieStickinessPolicyMarshaler struct {
	Input *types.CreateAppCookieStickinessPolicyInput
}

// CreateLBCookieStickinessPolicyMarshaler defines marshaler for CreateLBCookieStickinessPolicy operation
type CreateLBCookieStickinessPolicyMarshaler struct {
	Input *types.CreateLBCookieStickinessPolicyInput
}

// CreateLoadBalancerMarshaler defines marshaler for CreateLoadBalancer operation
type CreateLoadBalancerMarshaler struct {
	Input *types.CreateLoadBalancerInput
}

// CreateLoadBalancerListenersMarshaler defines marshaler for CreateLoadBalancerListeners operation
type CreateLoadBalancerListenersMarshaler struct {
	Input *types.CreateLoadBalancerListenersInput
}

// CreateLoadBalancerPolicyMarshaler defines marshaler for CreateLoadBalancerPolicy operation
type CreateLoadBalancerPolicyMarshaler struct {
	Input *types.CreateLoadBalancerPolicyInput
}

// DeleteLoadBalancerMarshaler defines marshaler for DeleteLoadBalancer operation
type DeleteLoadBalancerMarshaler struct {
	Input *types.DeleteLoadBalancerInput
}

// DeleteLoadBalancerListenersMarshaler defines marshaler for DeleteLoadBalancerListeners operation
type DeleteLoadBalancerListenersMarshaler struct {
	Input *types.DeleteLoadBalancerListenersInput
}

// DeleteLoadBalancerPolicyMarshaler defines marshaler for DeleteLoadBalancerPolicy operation
type DeleteLoadBalancerPolicyMarshaler struct {
	Input *types.DeleteLoadBalancerPolicyInput
}

// DeregisterInstancesFromLoadBalancerMarshaler defines marshaler for DeregisterInstancesFromLoadBalancer operation
type DeregisterInstancesFromLoadBalancerMarshaler struct {
	Input *types.DeregisterInstancesFromLoadBalancerInput
}

// DescribeAccountLimitsMarshaler defines marshaler for DescribeAccountLimits operation
type DescribeAccountLimitsMarshaler struct {
	Input *types.DescribeAccountLimitsInput
}

// DescribeInstanceHealthMarshaler defines marshaler for DescribeInstanceHealth operation
type DescribeInstanceHealthMarshaler struct {
	Input *types.DescribeInstanceHealthInput
}

// DescribeLoadBalancerAttributesMarshaler defines marshaler for DescribeLoadBalancerAttributes operation
type DescribeLoadBalancerAttributesMarshaler struct {
	Input *types.DescribeLoadBalancerAttributesInput
}

// DescribeLoadBalancerPoliciesMarshaler defines marshaler for DescribeLoadBalancerPolicies operation
type DescribeLoadBalancerPoliciesMarshaler struct {
	Input *types.DescribeLoadBalancerPoliciesInput
}

// DescribeLoadBalancerPolicyTypesMarshaler defines marshaler for DescribeLoadBalancerPolicyTypes operation
type DescribeLoadBalancerPolicyTypesMarshaler struct {
	Input *types.DescribeLoadBalancerPolicyTypesInput
}

// DescribeLoadBalancersMarshaler defines marshaler for DescribeLoadBalancers operation
type DescribeLoadBalancersMarshaler struct {
	Input *types.DescribeLoadBalancersInput
}

// DescribeTagsMarshaler defines marshaler for DescribeTags operation
type DescribeTagsMarshaler struct {
	Input *types.DescribeTagsInput
}

// DetachLoadBalancerFromSubnetsMarshaler defines marshaler for DetachLoadBalancerFromSubnets operation
type DetachLoadBalancerFromSubnetsMarshaler struct {
	Input *types.DetachLoadBalancerFromSubnetsInput
}

// DisableAvailabilityZonesForLoadBalancerMarshaler defines marshaler for DisableAvailabilityZonesForLoadBalancer operation
type DisableAvailabilityZonesForLoadBalancerMarshaler struct {
	Input *types.DisableAvailabilityZonesForLoadBalancerInput
}

// EnableAvailabilityZonesForLoadBalancerMarshaler defines marshaler for EnableAvailabilityZonesForLoadBalancer operation
type EnableAvailabilityZonesForLoadBalancerMarshaler struct {
	Input *types.EnableAvailabilityZonesForLoadBalancerInput
}

// ModifyLoadBalancerAttributesMarshaler defines marshaler for ModifyLoadBalancerAttributes operation
type ModifyLoadBalancerAttributesMarshaler struct {
	Input *types.ModifyLoadBalancerAttributesInput
}

// RegisterInstancesWithLoadBalancerMarshaler defines marshaler for RegisterInstancesWithLoadBalancer operation
type RegisterInstancesWithLoadBalancerMarshaler struct {
	Input *types.RegisterInstancesWithLoadBalancerInput
}

// RemoveTagsMarshaler defines marshaler for RemoveTags operation
type RemoveTagsMarshaler struct {
	Input *types.RemoveTagsInput
}

// SetLoadBalancerListenerSSLCertificateMarshaler defines marshaler for SetLoadBalancerListenerSSLCertificate operation
type SetLoadBalancerListenerSSLCertificateMarshaler struct {
	Input *types.SetLoadBalancerListenerSSLCertificateInput
}

// SetLoadBalancerPoliciesForBackendServerMarshaler defines marshaler for SetLoadBalancerPoliciesForBackendServer operation
type SetLoadBalancerPoliciesForBackendServerMarshaler struct {
	Input *types.SetLoadBalancerPoliciesForBackendServerInput
}

// SetLoadBalancerPoliciesOfListenerMarshaler defines marshaler for SetLoadBalancerPoliciesOfListener operation
type SetLoadBalancerPoliciesOfListenerMarshaler struct {
	Input *types.SetLoadBalancerPoliciesOfListenerInput
}

func MarshalAddTagsInputShapeAWSQuery(v *types.AddTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalApplySecurityGroupsToLoadBalancerInputShapeAWSQuery(v *types.ApplySecurityGroupsToLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAttachLoadBalancerToSubnetsInputShapeAWSQuery(v *types.AttachLoadBalancerToSubnetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalConfigureHealthCheckInputShapeAWSQuery(v *types.ConfigureHealthCheckInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateAppCookieStickinessPolicyInputShapeAWSQuery(v *types.CreateAppCookieStickinessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateLBCookieStickinessPolicyInputShapeAWSQuery(v *types.CreateLBCookieStickinessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateLoadBalancerInputShapeAWSQuery(v *types.CreateLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateLoadBalancerListenersInputShapeAWSQuery(v *types.CreateLoadBalancerListenersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateLoadBalancerPolicyInputShapeAWSQuery(v *types.CreateLoadBalancerPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteLoadBalancerInputShapeAWSQuery(v *types.DeleteLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteLoadBalancerListenersInputShapeAWSQuery(v *types.DeleteLoadBalancerListenersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteLoadBalancerPolicyInputShapeAWSQuery(v *types.DeleteLoadBalancerPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeregisterInstancesFromLoadBalancerInputShapeAWSQuery(v *types.DeregisterInstancesFromLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAccountLimitsInputShapeAWSQuery(v *types.DescribeAccountLimitsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeInstanceHealthInputShapeAWSQuery(v *types.DescribeInstanceHealthInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeLoadBalancerAttributesInputShapeAWSQuery(v *types.DescribeLoadBalancerAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeLoadBalancerPoliciesInputShapeAWSQuery(v *types.DescribeLoadBalancerPoliciesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeLoadBalancerPolicyTypesInputShapeAWSQuery(v *types.DescribeLoadBalancerPolicyTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeLoadBalancersInputShapeAWSQuery(v *types.DescribeLoadBalancersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeTagsInputShapeAWSQuery(v *types.DescribeTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDetachLoadBalancerFromSubnetsInputShapeAWSQuery(v *types.DetachLoadBalancerFromSubnetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDisableAvailabilityZonesForLoadBalancerInputShapeAWSQuery(v *types.DisableAvailabilityZonesForLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalEnableAvailabilityZonesForLoadBalancerInputShapeAWSQuery(v *types.EnableAvailabilityZonesForLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyLoadBalancerAttributesInputShapeAWSQuery(v *types.ModifyLoadBalancerAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRegisterInstancesWithLoadBalancerInputShapeAWSQuery(v *types.RegisterInstancesWithLoadBalancerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemoveTagsInputShapeAWSQuery(v *types.RemoveTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetLoadBalancerListenerSSLCertificateInputShapeAWSQuery(v *types.SetLoadBalancerListenerSSLCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetLoadBalancerPoliciesForBackendServerInputShapeAWSQuery(v *types.SetLoadBalancerPoliciesForBackendServerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetLoadBalancerPoliciesOfListenerInputShapeAWSQuery(v *types.SetLoadBalancerPoliciesOfListenerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AddTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ApplySecurityGroupsToLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalApplySecurityGroupsToLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ApplySecurityGroupsToLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ApplySecurityGroupsToLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachLoadBalancerToSubnetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachLoadBalancerToSubnetsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachLoadBalancerToSubnetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachLoadBalancerToSubnets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConfigureHealthCheckMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConfigureHealthCheckInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConfigureHealthCheckMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConfigureHealthCheck.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateAppCookieStickinessPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAppCookieStickinessPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAppCookieStickinessPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAppCookieStickinessPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLBCookieStickinessPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLBCookieStickinessPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLBCookieStickinessPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLBCookieStickinessPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoadBalancerListenersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoadBalancerListenersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoadBalancerListenersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoadBalancerListeners.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLoadBalancerPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLoadBalancerPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLoadBalancerPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLoadBalancerPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoadBalancerListenersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoadBalancerListenersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoadBalancerListenersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoadBalancerListeners.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLoadBalancerPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLoadBalancerPolicyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLoadBalancerPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLoadBalancerPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterInstancesFromLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterInstancesFromLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterInstancesFromLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterInstancesFromLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountLimitsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountLimitsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountLimitsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccountLimits.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstanceHealthMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstanceHealthInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstanceHealthMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstanceHealth.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLoadBalancerAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLoadBalancerAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLoadBalancerAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLoadBalancerAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLoadBalancerPoliciesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLoadBalancerPoliciesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLoadBalancerPoliciesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLoadBalancerPolicies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLoadBalancerPolicyTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLoadBalancerPolicyTypesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLoadBalancerPolicyTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLoadBalancerPolicyTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLoadBalancersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLoadBalancersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLoadBalancersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLoadBalancers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachLoadBalancerFromSubnetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachLoadBalancerFromSubnetsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachLoadBalancerFromSubnetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachLoadBalancerFromSubnets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableAvailabilityZonesForLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableAvailabilityZonesForLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableAvailabilityZonesForLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableAvailabilityZonesForLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableAvailabilityZonesForLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableAvailabilityZonesForLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableAvailabilityZonesForLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableAvailabilityZonesForLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyLoadBalancerAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyLoadBalancerAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyLoadBalancerAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyLoadBalancerAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterInstancesWithLoadBalancerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterInstancesWithLoadBalancerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterInstancesWithLoadBalancerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterInstancesWithLoadBalancer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetLoadBalancerListenerSSLCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetLoadBalancerListenerSSLCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetLoadBalancerListenerSSLCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetLoadBalancerListenerSSLCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetLoadBalancerPoliciesForBackendServerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetLoadBalancerPoliciesForBackendServerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetLoadBalancerPoliciesForBackendServerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetLoadBalancerPoliciesForBackendServer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetLoadBalancerPoliciesOfListenerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetLoadBalancerPoliciesOfListenerInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetLoadBalancerPoliciesOfListenerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetLoadBalancerPoliciesOfListener.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
