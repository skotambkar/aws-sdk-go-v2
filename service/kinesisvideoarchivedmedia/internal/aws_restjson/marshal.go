// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/kinesisvideoarchivedmedia/types"
)

var _ bytes.Buffer
var _ awserr.Error

// GetDASHStreamingSessionURLMarshaler defines marshaler for GetDASHStreamingSessionURL operation
type GetDASHStreamingSessionURLMarshaler struct {
	Input *types.GetDASHStreamingSessionURLInput
}

// GetHLSStreamingSessionURLMarshaler defines marshaler for GetHLSStreamingSessionURL operation
type GetHLSStreamingSessionURLMarshaler struct {
	Input *types.GetHLSStreamingSessionURLInput
}

// GetMediaForFragmentListMarshaler defines marshaler for GetMediaForFragmentList operation
type GetMediaForFragmentListMarshaler struct {
	Input *types.GetMediaForFragmentListInput
}

// ListFragmentsMarshaler defines marshaler for ListFragments operation
type ListFragmentsMarshaler struct {
	Input *types.ListFragmentsInput
}

func MarshalGetDASHStreamingSessionURLInputShapeAWSREST(v *types.GetDASHStreamingSessionURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDASHStreamingSessionURLInputShapeAWSJSON(v *types.GetDASHStreamingSessionURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetHLSStreamingSessionURLInputShapeAWSREST(v *types.GetHLSStreamingSessionURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetHLSStreamingSessionURLInputShapeAWSJSON(v *types.GetHLSStreamingSessionURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetMediaForFragmentListInputShapeAWSREST(v *types.GetMediaForFragmentListInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetMediaForFragmentListInputShapeAWSJSON(v *types.GetMediaForFragmentListInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListFragmentsInputShapeAWSREST(v *types.ListFragmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListFragmentsInputShapeAWSJSON(v *types.ListFragmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m GetDASHStreamingSessionURLMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDASHStreamingSessionURLInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDASHStreamingSessionURLInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDASHStreamingSessionURLMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDASHStreamingSessionURL.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetHLSStreamingSessionURLMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetHLSStreamingSessionURLInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetHLSStreamingSessionURLInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetHLSStreamingSessionURLMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetHLSStreamingSessionURL.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMediaForFragmentListMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMediaForFragmentListInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetMediaForFragmentListInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMediaForFragmentListMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMediaForFragmentList.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFragmentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFragmentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListFragmentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFragmentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFragments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
