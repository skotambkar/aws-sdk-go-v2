// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/personalize/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateBatchInferenceJobMarshaler defines marshaler for CreateBatchInferenceJob operation
type CreateBatchInferenceJobMarshaler struct {
	Input *types.CreateBatchInferenceJobInput
}

// CreateCampaignMarshaler defines marshaler for CreateCampaign operation
type CreateCampaignMarshaler struct {
	Input *types.CreateCampaignInput
}

// CreateDatasetMarshaler defines marshaler for CreateDataset operation
type CreateDatasetMarshaler struct {
	Input *types.CreateDatasetInput
}

// CreateDatasetGroupMarshaler defines marshaler for CreateDatasetGroup operation
type CreateDatasetGroupMarshaler struct {
	Input *types.CreateDatasetGroupInput
}

// CreateDatasetImportJobMarshaler defines marshaler for CreateDatasetImportJob operation
type CreateDatasetImportJobMarshaler struct {
	Input *types.CreateDatasetImportJobInput
}

// CreateEventTrackerMarshaler defines marshaler for CreateEventTracker operation
type CreateEventTrackerMarshaler struct {
	Input *types.CreateEventTrackerInput
}

// CreateSchemaMarshaler defines marshaler for CreateSchema operation
type CreateSchemaMarshaler struct {
	Input *types.CreateSchemaInput
}

// CreateSolutionMarshaler defines marshaler for CreateSolution operation
type CreateSolutionMarshaler struct {
	Input *types.CreateSolutionInput
}

// CreateSolutionVersionMarshaler defines marshaler for CreateSolutionVersion operation
type CreateSolutionVersionMarshaler struct {
	Input *types.CreateSolutionVersionInput
}

// DeleteCampaignMarshaler defines marshaler for DeleteCampaign operation
type DeleteCampaignMarshaler struct {
	Input *types.DeleteCampaignInput
}

// DeleteDatasetMarshaler defines marshaler for DeleteDataset operation
type DeleteDatasetMarshaler struct {
	Input *types.DeleteDatasetInput
}

// DeleteDatasetGroupMarshaler defines marshaler for DeleteDatasetGroup operation
type DeleteDatasetGroupMarshaler struct {
	Input *types.DeleteDatasetGroupInput
}

// DeleteEventTrackerMarshaler defines marshaler for DeleteEventTracker operation
type DeleteEventTrackerMarshaler struct {
	Input *types.DeleteEventTrackerInput
}

// DeleteSchemaMarshaler defines marshaler for DeleteSchema operation
type DeleteSchemaMarshaler struct {
	Input *types.DeleteSchemaInput
}

// DeleteSolutionMarshaler defines marshaler for DeleteSolution operation
type DeleteSolutionMarshaler struct {
	Input *types.DeleteSolutionInput
}

// DescribeAlgorithmMarshaler defines marshaler for DescribeAlgorithm operation
type DescribeAlgorithmMarshaler struct {
	Input *types.DescribeAlgorithmInput
}

// DescribeBatchInferenceJobMarshaler defines marshaler for DescribeBatchInferenceJob operation
type DescribeBatchInferenceJobMarshaler struct {
	Input *types.DescribeBatchInferenceJobInput
}

// DescribeCampaignMarshaler defines marshaler for DescribeCampaign operation
type DescribeCampaignMarshaler struct {
	Input *types.DescribeCampaignInput
}

// DescribeDatasetMarshaler defines marshaler for DescribeDataset operation
type DescribeDatasetMarshaler struct {
	Input *types.DescribeDatasetInput
}

// DescribeDatasetGroupMarshaler defines marshaler for DescribeDatasetGroup operation
type DescribeDatasetGroupMarshaler struct {
	Input *types.DescribeDatasetGroupInput
}

// DescribeDatasetImportJobMarshaler defines marshaler for DescribeDatasetImportJob operation
type DescribeDatasetImportJobMarshaler struct {
	Input *types.DescribeDatasetImportJobInput
}

// DescribeEventTrackerMarshaler defines marshaler for DescribeEventTracker operation
type DescribeEventTrackerMarshaler struct {
	Input *types.DescribeEventTrackerInput
}

// DescribeFeatureTransformationMarshaler defines marshaler for DescribeFeatureTransformation operation
type DescribeFeatureTransformationMarshaler struct {
	Input *types.DescribeFeatureTransformationInput
}

// DescribeRecipeMarshaler defines marshaler for DescribeRecipe operation
type DescribeRecipeMarshaler struct {
	Input *types.DescribeRecipeInput
}

// DescribeSchemaMarshaler defines marshaler for DescribeSchema operation
type DescribeSchemaMarshaler struct {
	Input *types.DescribeSchemaInput
}

// DescribeSolutionMarshaler defines marshaler for DescribeSolution operation
type DescribeSolutionMarshaler struct {
	Input *types.DescribeSolutionInput
}

// DescribeSolutionVersionMarshaler defines marshaler for DescribeSolutionVersion operation
type DescribeSolutionVersionMarshaler struct {
	Input *types.DescribeSolutionVersionInput
}

// GetSolutionMetricsMarshaler defines marshaler for GetSolutionMetrics operation
type GetSolutionMetricsMarshaler struct {
	Input *types.GetSolutionMetricsInput
}

// ListBatchInferenceJobsMarshaler defines marshaler for ListBatchInferenceJobs operation
type ListBatchInferenceJobsMarshaler struct {
	Input *types.ListBatchInferenceJobsInput
}

// ListCampaignsMarshaler defines marshaler for ListCampaigns operation
type ListCampaignsMarshaler struct {
	Input *types.ListCampaignsInput
}

// ListDatasetGroupsMarshaler defines marshaler for ListDatasetGroups operation
type ListDatasetGroupsMarshaler struct {
	Input *types.ListDatasetGroupsInput
}

// ListDatasetImportJobsMarshaler defines marshaler for ListDatasetImportJobs operation
type ListDatasetImportJobsMarshaler struct {
	Input *types.ListDatasetImportJobsInput
}

// ListDatasetsMarshaler defines marshaler for ListDatasets operation
type ListDatasetsMarshaler struct {
	Input *types.ListDatasetsInput
}

// ListEventTrackersMarshaler defines marshaler for ListEventTrackers operation
type ListEventTrackersMarshaler struct {
	Input *types.ListEventTrackersInput
}

// ListRecipesMarshaler defines marshaler for ListRecipes operation
type ListRecipesMarshaler struct {
	Input *types.ListRecipesInput
}

// ListSchemasMarshaler defines marshaler for ListSchemas operation
type ListSchemasMarshaler struct {
	Input *types.ListSchemasInput
}

// ListSolutionVersionsMarshaler defines marshaler for ListSolutionVersions operation
type ListSolutionVersionsMarshaler struct {
	Input *types.ListSolutionVersionsInput
}

// ListSolutionsMarshaler defines marshaler for ListSolutions operation
type ListSolutionsMarshaler struct {
	Input *types.ListSolutionsInput
}

// UpdateCampaignMarshaler defines marshaler for UpdateCampaign operation
type UpdateCampaignMarshaler struct {
	Input *types.UpdateCampaignInput
}

func MarshalCreateBatchInferenceJobInputShapeAWSJSON(v *types.CreateBatchInferenceJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCampaignInputShapeAWSJSON(v *types.CreateCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDatasetInputShapeAWSJSON(v *types.CreateDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDatasetGroupInputShapeAWSJSON(v *types.CreateDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDatasetImportJobInputShapeAWSJSON(v *types.CreateDatasetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateEventTrackerInputShapeAWSJSON(v *types.CreateEventTrackerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSchemaInputShapeAWSJSON(v *types.CreateSchemaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSolutionInputShapeAWSJSON(v *types.CreateSolutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSolutionVersionInputShapeAWSJSON(v *types.CreateSolutionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteCampaignInputShapeAWSJSON(v *types.DeleteCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDatasetInputShapeAWSJSON(v *types.DeleteDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDatasetGroupInputShapeAWSJSON(v *types.DeleteDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteEventTrackerInputShapeAWSJSON(v *types.DeleteEventTrackerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSchemaInputShapeAWSJSON(v *types.DeleteSchemaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSolutionInputShapeAWSJSON(v *types.DeleteSolutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAlgorithmInputShapeAWSJSON(v *types.DescribeAlgorithmInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeBatchInferenceJobInputShapeAWSJSON(v *types.DescribeBatchInferenceJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCampaignInputShapeAWSJSON(v *types.DescribeCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDatasetInputShapeAWSJSON(v *types.DescribeDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDatasetGroupInputShapeAWSJSON(v *types.DescribeDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDatasetImportJobInputShapeAWSJSON(v *types.DescribeDatasetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventTrackerInputShapeAWSJSON(v *types.DescribeEventTrackerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFeatureTransformationInputShapeAWSJSON(v *types.DescribeFeatureTransformationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRecipeInputShapeAWSJSON(v *types.DescribeRecipeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSchemaInputShapeAWSJSON(v *types.DescribeSchemaInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSolutionInputShapeAWSJSON(v *types.DescribeSolutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSolutionVersionInputShapeAWSJSON(v *types.DescribeSolutionVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetSolutionMetricsInputShapeAWSJSON(v *types.GetSolutionMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListBatchInferenceJobsInputShapeAWSJSON(v *types.ListBatchInferenceJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListCampaignsInputShapeAWSJSON(v *types.ListCampaignsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDatasetGroupsInputShapeAWSJSON(v *types.ListDatasetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDatasetImportJobsInputShapeAWSJSON(v *types.ListDatasetImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDatasetsInputShapeAWSJSON(v *types.ListDatasetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListEventTrackersInputShapeAWSJSON(v *types.ListEventTrackersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListRecipesInputShapeAWSJSON(v *types.ListRecipesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSchemasInputShapeAWSJSON(v *types.ListSchemasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSolutionVersionsInputShapeAWSJSON(v *types.ListSolutionVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListSolutionsInputShapeAWSJSON(v *types.ListSolutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateCampaignInputShapeAWSJSON(v *types.UpdateCampaignInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateBatchInferenceJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBatchInferenceJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBatchInferenceJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBatchInferenceJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDatasetImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDatasetImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDatasetImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDatasetImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEventTrackerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEventTrackerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEventTrackerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEventTracker.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSchemaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSchemaInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSchemaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSchema.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSolutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSolutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSolutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSolution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSolutionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSolutionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSolutionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSolutionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventTrackerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventTrackerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventTrackerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventTracker.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSchemaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSchemaInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSchemaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSchema.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSolutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSolutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSolutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSolution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAlgorithmMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAlgorithmInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAlgorithmMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAlgorithm.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBatchInferenceJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBatchInferenceJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBatchInferenceJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBatchInferenceJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDatasetImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventTrackerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventTrackerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventTrackerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventTracker.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFeatureTransformationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFeatureTransformationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFeatureTransformationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFeatureTransformation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRecipeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRecipeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRecipeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRecipe.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSchemaMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSchemaInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSchemaMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSchema.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSolutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSolutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSolutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSolution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSolutionVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSolutionVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSolutionVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSolutionVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSolutionMetricsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSolutionMetricsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSolutionMetricsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSolutionMetrics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBatchInferenceJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBatchInferenceJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBatchInferenceJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBatchInferenceJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListCampaignsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListCampaignsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListCampaignsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListCampaigns.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetImportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetImportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetImportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasetImportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEventTrackersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEventTrackersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEventTrackersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEventTrackers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRecipesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRecipesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRecipesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRecipes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSchemasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSchemasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSchemasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSchemas.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSolutionVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSolutionVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSolutionVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSolutionVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSolutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSolutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSolutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSolutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateCampaignMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateCampaignInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateCampaignMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateCampaign.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
