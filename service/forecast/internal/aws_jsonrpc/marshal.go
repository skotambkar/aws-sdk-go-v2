// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/forecast/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateDatasetMarshaler defines marshaler for CreateDataset operation
type CreateDatasetMarshaler struct {
	Input *types.CreateDatasetInput
}

// CreateDatasetGroupMarshaler defines marshaler for CreateDatasetGroup operation
type CreateDatasetGroupMarshaler struct {
	Input *types.CreateDatasetGroupInput
}

// CreateDatasetImportJobMarshaler defines marshaler for CreateDatasetImportJob operation
type CreateDatasetImportJobMarshaler struct {
	Input *types.CreateDatasetImportJobInput
}

// CreateForecastMarshaler defines marshaler for CreateForecast operation
type CreateForecastMarshaler struct {
	Input *types.CreateForecastInput
}

// CreateForecastExportJobMarshaler defines marshaler for CreateForecastExportJob operation
type CreateForecastExportJobMarshaler struct {
	Input *types.CreateForecastExportJobInput
}

// CreatePredictorMarshaler defines marshaler for CreatePredictor operation
type CreatePredictorMarshaler struct {
	Input *types.CreatePredictorInput
}

// DeleteDatasetMarshaler defines marshaler for DeleteDataset operation
type DeleteDatasetMarshaler struct {
	Input *types.DeleteDatasetInput
}

// DeleteDatasetGroupMarshaler defines marshaler for DeleteDatasetGroup operation
type DeleteDatasetGroupMarshaler struct {
	Input *types.DeleteDatasetGroupInput
}

// DeleteDatasetImportJobMarshaler defines marshaler for DeleteDatasetImportJob operation
type DeleteDatasetImportJobMarshaler struct {
	Input *types.DeleteDatasetImportJobInput
}

// DeleteForecastMarshaler defines marshaler for DeleteForecast operation
type DeleteForecastMarshaler struct {
	Input *types.DeleteForecastInput
}

// DeleteForecastExportJobMarshaler defines marshaler for DeleteForecastExportJob operation
type DeleteForecastExportJobMarshaler struct {
	Input *types.DeleteForecastExportJobInput
}

// DeletePredictorMarshaler defines marshaler for DeletePredictor operation
type DeletePredictorMarshaler struct {
	Input *types.DeletePredictorInput
}

// DescribeDatasetMarshaler defines marshaler for DescribeDataset operation
type DescribeDatasetMarshaler struct {
	Input *types.DescribeDatasetInput
}

// DescribeDatasetGroupMarshaler defines marshaler for DescribeDatasetGroup operation
type DescribeDatasetGroupMarshaler struct {
	Input *types.DescribeDatasetGroupInput
}

// DescribeDatasetImportJobMarshaler defines marshaler for DescribeDatasetImportJob operation
type DescribeDatasetImportJobMarshaler struct {
	Input *types.DescribeDatasetImportJobInput
}

// DescribeForecastMarshaler defines marshaler for DescribeForecast operation
type DescribeForecastMarshaler struct {
	Input *types.DescribeForecastInput
}

// DescribeForecastExportJobMarshaler defines marshaler for DescribeForecastExportJob operation
type DescribeForecastExportJobMarshaler struct {
	Input *types.DescribeForecastExportJobInput
}

// DescribePredictorMarshaler defines marshaler for DescribePredictor operation
type DescribePredictorMarshaler struct {
	Input *types.DescribePredictorInput
}

// GetAccuracyMetricsMarshaler defines marshaler for GetAccuracyMetrics operation
type GetAccuracyMetricsMarshaler struct {
	Input *types.GetAccuracyMetricsInput
}

// ListDatasetGroupsMarshaler defines marshaler for ListDatasetGroups operation
type ListDatasetGroupsMarshaler struct {
	Input *types.ListDatasetGroupsInput
}

// ListDatasetImportJobsMarshaler defines marshaler for ListDatasetImportJobs operation
type ListDatasetImportJobsMarshaler struct {
	Input *types.ListDatasetImportJobsInput
}

// ListDatasetsMarshaler defines marshaler for ListDatasets operation
type ListDatasetsMarshaler struct {
	Input *types.ListDatasetsInput
}

// ListForecastExportJobsMarshaler defines marshaler for ListForecastExportJobs operation
type ListForecastExportJobsMarshaler struct {
	Input *types.ListForecastExportJobsInput
}

// ListForecastsMarshaler defines marshaler for ListForecasts operation
type ListForecastsMarshaler struct {
	Input *types.ListForecastsInput
}

// ListPredictorsMarshaler defines marshaler for ListPredictors operation
type ListPredictorsMarshaler struct {
	Input *types.ListPredictorsInput
}

// UpdateDatasetGroupMarshaler defines marshaler for UpdateDatasetGroup operation
type UpdateDatasetGroupMarshaler struct {
	Input *types.UpdateDatasetGroupInput
}

func MarshalCreateDatasetInputShapeAWSJSON(v *types.CreateDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDatasetGroupInputShapeAWSJSON(v *types.CreateDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDatasetImportJobInputShapeAWSJSON(v *types.CreateDatasetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateForecastInputShapeAWSJSON(v *types.CreateForecastInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateForecastExportJobInputShapeAWSJSON(v *types.CreateForecastExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreatePredictorInputShapeAWSJSON(v *types.CreatePredictorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDatasetInputShapeAWSJSON(v *types.DeleteDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDatasetGroupInputShapeAWSJSON(v *types.DeleteDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDatasetImportJobInputShapeAWSJSON(v *types.DeleteDatasetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteForecastInputShapeAWSJSON(v *types.DeleteForecastInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteForecastExportJobInputShapeAWSJSON(v *types.DeleteForecastExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeletePredictorInputShapeAWSJSON(v *types.DeletePredictorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDatasetInputShapeAWSJSON(v *types.DescribeDatasetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDatasetGroupInputShapeAWSJSON(v *types.DescribeDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDatasetImportJobInputShapeAWSJSON(v *types.DescribeDatasetImportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeForecastInputShapeAWSJSON(v *types.DescribeForecastInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeForecastExportJobInputShapeAWSJSON(v *types.DescribeForecastExportJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribePredictorInputShapeAWSJSON(v *types.DescribePredictorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAccuracyMetricsInputShapeAWSJSON(v *types.GetAccuracyMetricsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDatasetGroupsInputShapeAWSJSON(v *types.ListDatasetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDatasetImportJobsInputShapeAWSJSON(v *types.ListDatasetImportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDatasetsInputShapeAWSJSON(v *types.ListDatasetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListForecastExportJobsInputShapeAWSJSON(v *types.ListForecastExportJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListForecastsInputShapeAWSJSON(v *types.ListForecastsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPredictorsInputShapeAWSJSON(v *types.ListPredictorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDatasetGroupInputShapeAWSJSON(v *types.UpdateDatasetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDatasetImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDatasetImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDatasetImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDatasetImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateForecastMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateForecastInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateForecastMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateForecast.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateForecastExportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateForecastExportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateForecastExportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateForecastExportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePredictorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePredictorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePredictorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePredictor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDatasetImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDatasetImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDatasetImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDatasetImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteForecastMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteForecastInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteForecastMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteForecast.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteForecastExportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteForecastExportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteForecastExportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteForecastExportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePredictorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePredictorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePredictorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePredictor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDataset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDatasetImportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDatasetImportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDatasetImportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDatasetImportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeForecastMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeForecastInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeForecastMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeForecast.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeForecastExportJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeForecastExportJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeForecastExportJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeForecastExportJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePredictorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePredictorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePredictorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePredictor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAccuracyMetricsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAccuracyMetricsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAccuracyMetricsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAccuracyMetrics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetImportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetImportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetImportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasetImportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDatasetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDatasetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDatasetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDatasets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListForecastExportJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListForecastExportJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListForecastExportJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListForecastExportJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListForecastsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListForecastsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListForecastsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListForecasts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPredictorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPredictorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPredictorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPredictors.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDatasetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDatasetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDatasetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDatasetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
