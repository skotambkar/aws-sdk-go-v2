// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/lakeformation/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchGrantPermissionsMarshaler defines marshaler for BatchGrantPermissions operation
type BatchGrantPermissionsMarshaler struct {
	Input *types.BatchGrantPermissionsInput
}

// BatchRevokePermissionsMarshaler defines marshaler for BatchRevokePermissions operation
type BatchRevokePermissionsMarshaler struct {
	Input *types.BatchRevokePermissionsInput
}

// DeregisterResourceMarshaler defines marshaler for DeregisterResource operation
type DeregisterResourceMarshaler struct {
	Input *types.DeregisterResourceInput
}

// DescribeResourceMarshaler defines marshaler for DescribeResource operation
type DescribeResourceMarshaler struct {
	Input *types.DescribeResourceInput
}

// GetDataLakeSettingsMarshaler defines marshaler for GetDataLakeSettings operation
type GetDataLakeSettingsMarshaler struct {
	Input *types.GetDataLakeSettingsInput
}

// GetEffectivePermissionsForPathMarshaler defines marshaler for GetEffectivePermissionsForPath operation
type GetEffectivePermissionsForPathMarshaler struct {
	Input *types.GetEffectivePermissionsForPathInput
}

// GrantPermissionsMarshaler defines marshaler for GrantPermissions operation
type GrantPermissionsMarshaler struct {
	Input *types.GrantPermissionsInput
}

// ListPermissionsMarshaler defines marshaler for ListPermissions operation
type ListPermissionsMarshaler struct {
	Input *types.ListPermissionsInput
}

// ListResourcesMarshaler defines marshaler for ListResources operation
type ListResourcesMarshaler struct {
	Input *types.ListResourcesInput
}

// PutDataLakeSettingsMarshaler defines marshaler for PutDataLakeSettings operation
type PutDataLakeSettingsMarshaler struct {
	Input *types.PutDataLakeSettingsInput
}

// RegisterResourceMarshaler defines marshaler for RegisterResource operation
type RegisterResourceMarshaler struct {
	Input *types.RegisterResourceInput
}

// RevokePermissionsMarshaler defines marshaler for RevokePermissions operation
type RevokePermissionsMarshaler struct {
	Input *types.RevokePermissionsInput
}

// UpdateResourceMarshaler defines marshaler for UpdateResource operation
type UpdateResourceMarshaler struct {
	Input *types.UpdateResourceInput
}

func MarshalBatchGrantPermissionsInputShapeAWSJSON(v *types.BatchGrantPermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchRevokePermissionsInputShapeAWSJSON(v *types.BatchRevokePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterResourceInputShapeAWSJSON(v *types.DeregisterResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeResourceInputShapeAWSJSON(v *types.DescribeResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDataLakeSettingsInputShapeAWSJSON(v *types.GetDataLakeSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetEffectivePermissionsForPathInputShapeAWSJSON(v *types.GetEffectivePermissionsForPathInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGrantPermissionsInputShapeAWSJSON(v *types.GrantPermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListPermissionsInputShapeAWSJSON(v *types.ListPermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListResourcesInputShapeAWSJSON(v *types.ListResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutDataLakeSettingsInputShapeAWSJSON(v *types.PutDataLakeSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterResourceInputShapeAWSJSON(v *types.RegisterResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRevokePermissionsInputShapeAWSJSON(v *types.RevokePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateResourceInputShapeAWSJSON(v *types.UpdateResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m BatchGrantPermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGrantPermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGrantPermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGrantPermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchRevokePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchRevokePermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchRevokePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchRevokePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDataLakeSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDataLakeSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDataLakeSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDataLakeSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEffectivePermissionsForPathMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEffectivePermissionsForPathInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEffectivePermissionsForPathMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEffectivePermissionsForPath.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GrantPermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGrantPermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GrantPermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GrantPermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListResourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListResourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListResourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListResources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutDataLakeSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutDataLakeSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutDataLakeSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutDataLakeSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokePermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
