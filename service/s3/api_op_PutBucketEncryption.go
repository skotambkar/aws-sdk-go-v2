// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restxml"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opPutBucketEncryption = "PutBucketEncryption"

// PutBucketEncryptionRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// Creates a new server-side encryption configuration (or replaces an existing
// one, if present).
//
//    // Example sending a request using PutBucketEncryptionRequest.
//    req := client.PutBucketEncryptionRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketEncryption
func (c *Client) PutBucketEncryptionRequest(input *types.PutBucketEncryptionInput) PutBucketEncryptionRequest {
	op := &aws.Operation{
		Name:       opPutBucketEncryption,
		HTTPMethod: "PUT",
		HTTPPath:   "/{Bucket}?encryption",
	}

	if input == nil {
		input = &types.PutBucketEncryptionInput{}
	}

	req := c.newRequest(op, input, &types.PutBucketEncryptionOutput{})
	req.Handlers.Unmarshal.Remove(restxml.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return PutBucketEncryptionRequest{Request: req, Input: input, Copy: c.PutBucketEncryptionRequest}
}

// PutBucketEncryptionRequest is the request type for the
// PutBucketEncryption API operation.
type PutBucketEncryptionRequest struct {
	*aws.Request
	Input *types.PutBucketEncryptionInput
	Copy  func(*types.PutBucketEncryptionInput) PutBucketEncryptionRequest
}

// Send marshals and sends the PutBucketEncryption API request.
func (r PutBucketEncryptionRequest) Send(ctx context.Context) (*PutBucketEncryptionResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutBucketEncryptionResponse{
		PutBucketEncryptionOutput: r.Request.Data.(*types.PutBucketEncryptionOutput),
		response:                  &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutBucketEncryptionResponse is the response type for the
// PutBucketEncryption API operation.
type PutBucketEncryptionResponse struct {
	*types.PutBucketEncryptionOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutBucketEncryption request.
func (r *PutBucketEncryptionResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
