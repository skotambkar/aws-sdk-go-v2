// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restxml"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opPutBucketLifecycle = "PutBucketLifecycle"

// PutBucketLifecycleRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// No longer used, see the PutBucketLifecycleConfiguration operation.
//
//    // Example sending a request using PutBucketLifecycleRequest.
//    req := client.PutBucketLifecycleRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLifecycle
func (c *Client) PutBucketLifecycleRequest(input *types.PutBucketLifecycleInput) PutBucketLifecycleRequest {
	if c.Client.Config.Logger != nil {
		c.Client.Config.Logger.Log("This operation, PutBucketLifecycle, has been deprecated")
	}
	op := &aws.Operation{
		Name:       opPutBucketLifecycle,
		HTTPMethod: "PUT",
		HTTPPath:   "/{Bucket}?lifecycle",
	}

	if input == nil {
		input = &types.PutBucketLifecycleInput{}
	}

	req := c.newRequest(op, input, &types.PutBucketLifecycleOutput{})
	req.Handlers.Unmarshal.Remove(restxml.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return PutBucketLifecycleRequest{Request: req, Input: input, Copy: c.PutBucketLifecycleRequest}
}

// PutBucketLifecycleRequest is the request type for the
// PutBucketLifecycle API operation.
type PutBucketLifecycleRequest struct {
	*aws.Request
	Input *types.PutBucketLifecycleInput
	Copy  func(*types.PutBucketLifecycleInput) PutBucketLifecycleRequest
}

// Send marshals and sends the PutBucketLifecycle API request.
func (r PutBucketLifecycleRequest) Send(ctx context.Context) (*PutBucketLifecycleResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &PutBucketLifecycleResponse{
		PutBucketLifecycleOutput: r.Request.Data.(*types.PutBucketLifecycleOutput),
		response:                 &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// PutBucketLifecycleResponse is the response type for the
// PutBucketLifecycle API operation.
type PutBucketLifecycleResponse struct {
	*types.PutBucketLifecycleOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// PutBucketLifecycle request.
func (r *PutBucketLifecycleResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
