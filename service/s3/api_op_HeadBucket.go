// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/aws/aws-sdk-go-v2/private/protocol/restxml"
	"github.com/aws/aws-sdk-go-v2/service/s3/types"
)

const opHeadBucket = "HeadBucket"

// HeadBucketRequest returns a request value for making API operation for
// Amazon Simple Storage Service.
//
// This operation is useful to determine if a bucket exists and you have permission
// to access it.
//
//    // Example sending a request using HeadBucketRequest.
//    req := client.HeadBucketRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadBucket
func (c *Client) HeadBucketRequest(input *types.HeadBucketInput) HeadBucketRequest {
	op := &aws.Operation{
		Name:       opHeadBucket,
		HTTPMethod: "HEAD",
		HTTPPath:   "/{Bucket}",
	}

	if input == nil {
		input = &types.HeadBucketInput{}
	}

	req := c.newRequest(op, input, &types.HeadBucketOutput{})
	req.Handlers.Unmarshal.Remove(restxml.UnmarshalHandler)
	req.Handlers.Unmarshal.PushBackNamed(protocol.UnmarshalDiscardBodyHandler)
	return HeadBucketRequest{Request: req, Input: input, Copy: c.HeadBucketRequest}
}

// HeadBucketRequest is the request type for the
// HeadBucket API operation.
type HeadBucketRequest struct {
	*aws.Request
	Input *types.HeadBucketInput
	Copy  func(*types.HeadBucketInput) HeadBucketRequest
}

// Send marshals and sends the HeadBucket API request.
func (r HeadBucketRequest) Send(ctx context.Context) (*HeadBucketResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &HeadBucketResponse{
		HeadBucketOutput: r.Request.Data.(*types.HeadBucketOutput),
		response:         &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// HeadBucketResponse is the response type for the
// HeadBucket API operation.
type HeadBucketResponse struct {
	*types.HeadBucketOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// HeadBucket request.
func (r *HeadBucketResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
