// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/lexruntimeservice/types"
)

var _ bytes.Buffer
var _ awserr.Error

// DeleteSessionMarshaler defines marshaler for DeleteSession operation
type DeleteSessionMarshaler struct {
	Input *types.DeleteSessionInput
}

// GetSessionMarshaler defines marshaler for GetSession operation
type GetSessionMarshaler struct {
	Input *types.GetSessionInput
}

// PostContentMarshaler defines marshaler for PostContent operation
type PostContentMarshaler struct {
	Input *types.PostContentInput
}

// PostTextMarshaler defines marshaler for PostText operation
type PostTextMarshaler struct {
	Input *types.PostTextInput
}

// PutSessionMarshaler defines marshaler for PutSession operation
type PutSessionMarshaler struct {
	Input *types.PutSessionInput
}

func MarshalDeleteSessionInputShapeAWSREST(v *types.DeleteSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSessionInputShapeAWSJSON(v *types.DeleteSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSessionInputShapeAWSREST(v *types.GetSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSessionInputShapeAWSJSON(v *types.GetSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPostContentInputShapeAWSREST(v *types.PostContentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPostContentInputShapeAWSJSON(v *types.PostContentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPostTextInputShapeAWSREST(v *types.PostTextInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPostTextInputShapeAWSJSON(v *types.PostTextInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutSessionInputShapeAWSREST(v *types.PutSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutSessionInputShapeAWSJSON(v *types.PutSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m DeleteSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSessionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSessionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PostContentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPostContentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPostContentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PostContentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PostContent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PostTextMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPostTextInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPostTextInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PostTextMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PostText.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutSessionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
