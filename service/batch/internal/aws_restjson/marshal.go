// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/batch/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelJobMarshaler defines marshaler for CancelJob operation
type CancelJobMarshaler struct {
	Input *types.CancelJobInput
}

// CreateComputeEnvironmentMarshaler defines marshaler for CreateComputeEnvironment operation
type CreateComputeEnvironmentMarshaler struct {
	Input *types.CreateComputeEnvironmentInput
}

// CreateJobQueueMarshaler defines marshaler for CreateJobQueue operation
type CreateJobQueueMarshaler struct {
	Input *types.CreateJobQueueInput
}

// DeleteComputeEnvironmentMarshaler defines marshaler for DeleteComputeEnvironment operation
type DeleteComputeEnvironmentMarshaler struct {
	Input *types.DeleteComputeEnvironmentInput
}

// DeleteJobQueueMarshaler defines marshaler for DeleteJobQueue operation
type DeleteJobQueueMarshaler struct {
	Input *types.DeleteJobQueueInput
}

// DeregisterJobDefinitionMarshaler defines marshaler for DeregisterJobDefinition operation
type DeregisterJobDefinitionMarshaler struct {
	Input *types.DeregisterJobDefinitionInput
}

// DescribeComputeEnvironmentsMarshaler defines marshaler for DescribeComputeEnvironments operation
type DescribeComputeEnvironmentsMarshaler struct {
	Input *types.DescribeComputeEnvironmentsInput
}

// DescribeJobDefinitionsMarshaler defines marshaler for DescribeJobDefinitions operation
type DescribeJobDefinitionsMarshaler struct {
	Input *types.DescribeJobDefinitionsInput
}

// DescribeJobQueuesMarshaler defines marshaler for DescribeJobQueues operation
type DescribeJobQueuesMarshaler struct {
	Input *types.DescribeJobQueuesInput
}

// DescribeJobsMarshaler defines marshaler for DescribeJobs operation
type DescribeJobsMarshaler struct {
	Input *types.DescribeJobsInput
}

// ListJobsMarshaler defines marshaler for ListJobs operation
type ListJobsMarshaler struct {
	Input *types.ListJobsInput
}

// RegisterJobDefinitionMarshaler defines marshaler for RegisterJobDefinition operation
type RegisterJobDefinitionMarshaler struct {
	Input *types.RegisterJobDefinitionInput
}

// SubmitJobMarshaler defines marshaler for SubmitJob operation
type SubmitJobMarshaler struct {
	Input *types.SubmitJobInput
}

// TerminateJobMarshaler defines marshaler for TerminateJob operation
type TerminateJobMarshaler struct {
	Input *types.TerminateJobInput
}

// UpdateComputeEnvironmentMarshaler defines marshaler for UpdateComputeEnvironment operation
type UpdateComputeEnvironmentMarshaler struct {
	Input *types.UpdateComputeEnvironmentInput
}

// UpdateJobQueueMarshaler defines marshaler for UpdateJobQueue operation
type UpdateJobQueueMarshaler struct {
	Input *types.UpdateJobQueueInput
}

func MarshalCancelJobInputShapeAWSREST(v *types.CancelJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelJobInputShapeAWSJSON(v *types.CancelJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateComputeEnvironmentInputShapeAWSREST(v *types.CreateComputeEnvironmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateComputeEnvironmentInputShapeAWSJSON(v *types.CreateComputeEnvironmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateJobQueueInputShapeAWSREST(v *types.CreateJobQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateJobQueueInputShapeAWSJSON(v *types.CreateJobQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteComputeEnvironmentInputShapeAWSREST(v *types.DeleteComputeEnvironmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteComputeEnvironmentInputShapeAWSJSON(v *types.DeleteComputeEnvironmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteJobQueueInputShapeAWSREST(v *types.DeleteJobQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteJobQueueInputShapeAWSJSON(v *types.DeleteJobQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeregisterJobDefinitionInputShapeAWSREST(v *types.DeregisterJobDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeregisterJobDefinitionInputShapeAWSJSON(v *types.DeregisterJobDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeComputeEnvironmentsInputShapeAWSREST(v *types.DescribeComputeEnvironmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeComputeEnvironmentsInputShapeAWSJSON(v *types.DescribeComputeEnvironmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeJobDefinitionsInputShapeAWSREST(v *types.DescribeJobDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeJobDefinitionsInputShapeAWSJSON(v *types.DescribeJobDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeJobQueuesInputShapeAWSREST(v *types.DescribeJobQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeJobQueuesInputShapeAWSJSON(v *types.DescribeJobQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeJobsInputShapeAWSREST(v *types.DescribeJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeJobsInputShapeAWSJSON(v *types.DescribeJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJobsInputShapeAWSREST(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJobsInputShapeAWSJSON(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalRegisterJobDefinitionInputShapeAWSREST(v *types.RegisterJobDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalRegisterJobDefinitionInputShapeAWSJSON(v *types.RegisterJobDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalSubmitJobInputShapeAWSREST(v *types.SubmitJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalSubmitJobInputShapeAWSJSON(v *types.SubmitJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTerminateJobInputShapeAWSREST(v *types.TerminateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTerminateJobInputShapeAWSJSON(v *types.TerminateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateComputeEnvironmentInputShapeAWSREST(v *types.UpdateComputeEnvironmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateComputeEnvironmentInputShapeAWSJSON(v *types.UpdateComputeEnvironmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateJobQueueInputShapeAWSREST(v *types.UpdateJobQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateJobQueueInputShapeAWSJSON(v *types.UpdateJobQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CancelJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateComputeEnvironmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateComputeEnvironmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateComputeEnvironmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateComputeEnvironmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateComputeEnvironment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateJobQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateJobQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateJobQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateJobQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateJobQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteComputeEnvironmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteComputeEnvironmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteComputeEnvironmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteComputeEnvironmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteComputeEnvironment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteJobQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteJobQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteJobQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteJobQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteJobQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterJobDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterJobDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeregisterJobDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterJobDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterJobDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeComputeEnvironmentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeComputeEnvironmentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeComputeEnvironmentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeComputeEnvironmentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeComputeEnvironments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeJobDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeJobDefinitionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeJobDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeJobDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeJobDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeJobQueuesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeJobQueuesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeJobQueuesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeJobQueuesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeJobQueues.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterJobDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterJobDefinitionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalRegisterJobDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterJobDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterJobDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SubmitJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSubmitJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalSubmitJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SubmitJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SubmitJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TerminateJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTerminateJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTerminateJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TerminateJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TerminateJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateComputeEnvironmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateComputeEnvironmentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateComputeEnvironmentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateComputeEnvironmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateComputeEnvironment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateJobQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateJobQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateJobQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateJobQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateJobQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
