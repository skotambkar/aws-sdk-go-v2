// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/ecs/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateClusterMarshaler defines marshaler for CreateCluster operation
type CreateClusterMarshaler struct {
	Input *types.CreateClusterInput
}

// CreateServiceMarshaler defines marshaler for CreateService operation
type CreateServiceMarshaler struct {
	Input *types.CreateServiceInput
}

// CreateTaskSetMarshaler defines marshaler for CreateTaskSet operation
type CreateTaskSetMarshaler struct {
	Input *types.CreateTaskSetInput
}

// DeleteAccountSettingMarshaler defines marshaler for DeleteAccountSetting operation
type DeleteAccountSettingMarshaler struct {
	Input *types.DeleteAccountSettingInput
}

// DeleteAttributesMarshaler defines marshaler for DeleteAttributes operation
type DeleteAttributesMarshaler struct {
	Input *types.DeleteAttributesInput
}

// DeleteClusterMarshaler defines marshaler for DeleteCluster operation
type DeleteClusterMarshaler struct {
	Input *types.DeleteClusterInput
}

// DeleteServiceMarshaler defines marshaler for DeleteService operation
type DeleteServiceMarshaler struct {
	Input *types.DeleteServiceInput
}

// DeleteTaskSetMarshaler defines marshaler for DeleteTaskSet operation
type DeleteTaskSetMarshaler struct {
	Input *types.DeleteTaskSetInput
}

// DeregisterContainerInstanceMarshaler defines marshaler for DeregisterContainerInstance operation
type DeregisterContainerInstanceMarshaler struct {
	Input *types.DeregisterContainerInstanceInput
}

// DeregisterTaskDefinitionMarshaler defines marshaler for DeregisterTaskDefinition operation
type DeregisterTaskDefinitionMarshaler struct {
	Input *types.DeregisterTaskDefinitionInput
}

// DescribeClustersMarshaler defines marshaler for DescribeClusters operation
type DescribeClustersMarshaler struct {
	Input *types.DescribeClustersInput
}

// DescribeContainerInstancesMarshaler defines marshaler for DescribeContainerInstances operation
type DescribeContainerInstancesMarshaler struct {
	Input *types.DescribeContainerInstancesInput
}

// DescribeServicesMarshaler defines marshaler for DescribeServices operation
type DescribeServicesMarshaler struct {
	Input *types.DescribeServicesInput
}

// DescribeTaskDefinitionMarshaler defines marshaler for DescribeTaskDefinition operation
type DescribeTaskDefinitionMarshaler struct {
	Input *types.DescribeTaskDefinitionInput
}

// DescribeTaskSetsMarshaler defines marshaler for DescribeTaskSets operation
type DescribeTaskSetsMarshaler struct {
	Input *types.DescribeTaskSetsInput
}

// DescribeTasksMarshaler defines marshaler for DescribeTasks operation
type DescribeTasksMarshaler struct {
	Input *types.DescribeTasksInput
}

// DiscoverPollEndpointMarshaler defines marshaler for DiscoverPollEndpoint operation
type DiscoverPollEndpointMarshaler struct {
	Input *types.DiscoverPollEndpointInput
}

// ListAccountSettingsMarshaler defines marshaler for ListAccountSettings operation
type ListAccountSettingsMarshaler struct {
	Input *types.ListAccountSettingsInput
}

// ListAttributesMarshaler defines marshaler for ListAttributes operation
type ListAttributesMarshaler struct {
	Input *types.ListAttributesInput
}

// ListClustersMarshaler defines marshaler for ListClusters operation
type ListClustersMarshaler struct {
	Input *types.ListClustersInput
}

// ListContainerInstancesMarshaler defines marshaler for ListContainerInstances operation
type ListContainerInstancesMarshaler struct {
	Input *types.ListContainerInstancesInput
}

// ListServicesMarshaler defines marshaler for ListServices operation
type ListServicesMarshaler struct {
	Input *types.ListServicesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTaskDefinitionFamiliesMarshaler defines marshaler for ListTaskDefinitionFamilies operation
type ListTaskDefinitionFamiliesMarshaler struct {
	Input *types.ListTaskDefinitionFamiliesInput
}

// ListTaskDefinitionsMarshaler defines marshaler for ListTaskDefinitions operation
type ListTaskDefinitionsMarshaler struct {
	Input *types.ListTaskDefinitionsInput
}

// ListTasksMarshaler defines marshaler for ListTasks operation
type ListTasksMarshaler struct {
	Input *types.ListTasksInput
}

// PutAccountSettingMarshaler defines marshaler for PutAccountSetting operation
type PutAccountSettingMarshaler struct {
	Input *types.PutAccountSettingInput
}

// PutAccountSettingDefaultMarshaler defines marshaler for PutAccountSettingDefault operation
type PutAccountSettingDefaultMarshaler struct {
	Input *types.PutAccountSettingDefaultInput
}

// PutAttributesMarshaler defines marshaler for PutAttributes operation
type PutAttributesMarshaler struct {
	Input *types.PutAttributesInput
}

// RegisterContainerInstanceMarshaler defines marshaler for RegisterContainerInstance operation
type RegisterContainerInstanceMarshaler struct {
	Input *types.RegisterContainerInstanceInput
}

// RegisterTaskDefinitionMarshaler defines marshaler for RegisterTaskDefinition operation
type RegisterTaskDefinitionMarshaler struct {
	Input *types.RegisterTaskDefinitionInput
}

// RunTaskMarshaler defines marshaler for RunTask operation
type RunTaskMarshaler struct {
	Input *types.RunTaskInput
}

// StartTaskMarshaler defines marshaler for StartTask operation
type StartTaskMarshaler struct {
	Input *types.StartTaskInput
}

// StopTaskMarshaler defines marshaler for StopTask operation
type StopTaskMarshaler struct {
	Input *types.StopTaskInput
}

// SubmitAttachmentStateChangesMarshaler defines marshaler for SubmitAttachmentStateChanges operation
type SubmitAttachmentStateChangesMarshaler struct {
	Input *types.SubmitAttachmentStateChangesInput
}

// SubmitContainerStateChangeMarshaler defines marshaler for SubmitContainerStateChange operation
type SubmitContainerStateChangeMarshaler struct {
	Input *types.SubmitContainerStateChangeInput
}

// SubmitTaskStateChangeMarshaler defines marshaler for SubmitTaskStateChange operation
type SubmitTaskStateChangeMarshaler struct {
	Input *types.SubmitTaskStateChangeInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateClusterSettingsMarshaler defines marshaler for UpdateClusterSettings operation
type UpdateClusterSettingsMarshaler struct {
	Input *types.UpdateClusterSettingsInput
}

// UpdateContainerAgentMarshaler defines marshaler for UpdateContainerAgent operation
type UpdateContainerAgentMarshaler struct {
	Input *types.UpdateContainerAgentInput
}

// UpdateContainerInstancesStateMarshaler defines marshaler for UpdateContainerInstancesState operation
type UpdateContainerInstancesStateMarshaler struct {
	Input *types.UpdateContainerInstancesStateInput
}

// UpdateServiceMarshaler defines marshaler for UpdateService operation
type UpdateServiceMarshaler struct {
	Input *types.UpdateServiceInput
}

// UpdateServicePrimaryTaskSetMarshaler defines marshaler for UpdateServicePrimaryTaskSet operation
type UpdateServicePrimaryTaskSetMarshaler struct {
	Input *types.UpdateServicePrimaryTaskSetInput
}

// UpdateTaskSetMarshaler defines marshaler for UpdateTaskSet operation
type UpdateTaskSetMarshaler struct {
	Input *types.UpdateTaskSetInput
}

func MarshalCreateClusterInputShapeAWSJSON(v *types.CreateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateServiceInputShapeAWSJSON(v *types.CreateServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTaskSetInputShapeAWSJSON(v *types.CreateTaskSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteAccountSettingInputShapeAWSJSON(v *types.DeleteAccountSettingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteAttributesInputShapeAWSJSON(v *types.DeleteAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteClusterInputShapeAWSJSON(v *types.DeleteClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteServiceInputShapeAWSJSON(v *types.DeleteServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTaskSetInputShapeAWSJSON(v *types.DeleteTaskSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterContainerInstanceInputShapeAWSJSON(v *types.DeregisterContainerInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterTaskDefinitionInputShapeAWSJSON(v *types.DeregisterTaskDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeClustersInputShapeAWSJSON(v *types.DescribeClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeContainerInstancesInputShapeAWSJSON(v *types.DescribeContainerInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeServicesInputShapeAWSJSON(v *types.DescribeServicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTaskDefinitionInputShapeAWSJSON(v *types.DescribeTaskDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTaskSetsInputShapeAWSJSON(v *types.DescribeTaskSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTasksInputShapeAWSJSON(v *types.DescribeTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDiscoverPollEndpointInputShapeAWSJSON(v *types.DiscoverPollEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAccountSettingsInputShapeAWSJSON(v *types.ListAccountSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAttributesInputShapeAWSJSON(v *types.ListAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListClustersInputShapeAWSJSON(v *types.ListClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListContainerInstancesInputShapeAWSJSON(v *types.ListContainerInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListServicesInputShapeAWSJSON(v *types.ListServicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTaskDefinitionFamiliesInputShapeAWSJSON(v *types.ListTaskDefinitionFamiliesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTaskDefinitionsInputShapeAWSJSON(v *types.ListTaskDefinitionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTasksInputShapeAWSJSON(v *types.ListTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutAccountSettingInputShapeAWSJSON(v *types.PutAccountSettingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutAccountSettingDefaultInputShapeAWSJSON(v *types.PutAccountSettingDefaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutAttributesInputShapeAWSJSON(v *types.PutAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterContainerInstanceInputShapeAWSJSON(v *types.RegisterContainerInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterTaskDefinitionInputShapeAWSJSON(v *types.RegisterTaskDefinitionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRunTaskInputShapeAWSJSON(v *types.RunTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartTaskInputShapeAWSJSON(v *types.StartTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopTaskInputShapeAWSJSON(v *types.StopTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSubmitAttachmentStateChangesInputShapeAWSJSON(v *types.SubmitAttachmentStateChangesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSubmitContainerStateChangeInputShapeAWSJSON(v *types.SubmitContainerStateChangeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSubmitTaskStateChangeInputShapeAWSJSON(v *types.SubmitTaskStateChangeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateClusterSettingsInputShapeAWSJSON(v *types.UpdateClusterSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateContainerAgentInputShapeAWSJSON(v *types.UpdateContainerAgentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateContainerInstancesStateInputShapeAWSJSON(v *types.UpdateContainerInstancesStateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateServiceInputShapeAWSJSON(v *types.UpdateServiceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateServicePrimaryTaskSetInputShapeAWSJSON(v *types.UpdateServicePrimaryTaskSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateTaskSetInputShapeAWSJSON(v *types.UpdateTaskSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTaskSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTaskSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTaskSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTaskSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAccountSettingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAccountSettingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAccountSettingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAccountSetting.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTaskSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTaskSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTaskSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTaskSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterContainerInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterContainerInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterContainerInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterContainerInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterTaskDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterTaskDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterTaskDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterTaskDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClustersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeContainerInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeContainerInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeContainerInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeContainerInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeServicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeServicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeServicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeServices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTaskDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTaskDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTaskDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTaskDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTaskSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTaskSetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTaskSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTaskSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTasksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DiscoverPollEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDiscoverPollEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DiscoverPollEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DiscoverPollEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAccountSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAccountSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAccountSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAccountSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListClustersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListContainerInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListContainerInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListContainerInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListContainerInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListServicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListServicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListServicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListServices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTaskDefinitionFamiliesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTaskDefinitionFamiliesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTaskDefinitionFamiliesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTaskDefinitionFamilies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTaskDefinitionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTaskDefinitionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTaskDefinitionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTaskDefinitions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTasksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAccountSettingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAccountSettingInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAccountSettingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAccountSetting.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAccountSettingDefaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAccountSettingDefaultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAccountSettingDefaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAccountSettingDefault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutAttributesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterContainerInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterContainerInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterContainerInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterContainerInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterTaskDefinitionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterTaskDefinitionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterTaskDefinitionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterTaskDefinition.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RunTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRunTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RunTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RunTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SubmitAttachmentStateChangesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSubmitAttachmentStateChangesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SubmitAttachmentStateChangesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SubmitAttachmentStateChanges.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SubmitContainerStateChangeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSubmitContainerStateChangeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SubmitContainerStateChangeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SubmitContainerStateChange.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SubmitTaskStateChangeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSubmitTaskStateChangeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SubmitTaskStateChangeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SubmitTaskStateChange.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateClusterSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateClusterSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateClusterSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateClusterSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateContainerAgentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateContainerAgentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateContainerAgentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateContainerAgent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateContainerInstancesStateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateContainerInstancesStateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateContainerInstancesStateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateContainerInstancesState.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServiceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServiceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServiceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateService.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateServicePrimaryTaskSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateServicePrimaryTaskSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateServicePrimaryTaskSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateServicePrimaryTaskSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateTaskSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateTaskSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateTaskSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateTaskSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
