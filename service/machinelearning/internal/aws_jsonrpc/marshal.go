// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/machinelearning/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddTagsMarshaler defines marshaler for AddTags operation
type AddTagsMarshaler struct {
	Input *types.AddTagsInput
}

// CreateBatchPredictionMarshaler defines marshaler for CreateBatchPrediction operation
type CreateBatchPredictionMarshaler struct {
	Input *types.CreateBatchPredictionInput
}

// CreateDataSourceFromRDSMarshaler defines marshaler for CreateDataSourceFromRDS operation
type CreateDataSourceFromRDSMarshaler struct {
	Input *types.CreateDataSourceFromRDSInput
}

// CreateDataSourceFromRedshiftMarshaler defines marshaler for CreateDataSourceFromRedshift operation
type CreateDataSourceFromRedshiftMarshaler struct {
	Input *types.CreateDataSourceFromRedshiftInput
}

// CreateDataSourceFromS3Marshaler defines marshaler for CreateDataSourceFromS3 operation
type CreateDataSourceFromS3Marshaler struct {
	Input *types.CreateDataSourceFromS3Input
}

// CreateEvaluationMarshaler defines marshaler for CreateEvaluation operation
type CreateEvaluationMarshaler struct {
	Input *types.CreateEvaluationInput
}

// CreateMLModelMarshaler defines marshaler for CreateMLModel operation
type CreateMLModelMarshaler struct {
	Input *types.CreateMLModelInput
}

// CreateRealtimeEndpointMarshaler defines marshaler for CreateRealtimeEndpoint operation
type CreateRealtimeEndpointMarshaler struct {
	Input *types.CreateRealtimeEndpointInput
}

// DeleteBatchPredictionMarshaler defines marshaler for DeleteBatchPrediction operation
type DeleteBatchPredictionMarshaler struct {
	Input *types.DeleteBatchPredictionInput
}

// DeleteDataSourceMarshaler defines marshaler for DeleteDataSource operation
type DeleteDataSourceMarshaler struct {
	Input *types.DeleteDataSourceInput
}

// DeleteEvaluationMarshaler defines marshaler for DeleteEvaluation operation
type DeleteEvaluationMarshaler struct {
	Input *types.DeleteEvaluationInput
}

// DeleteMLModelMarshaler defines marshaler for DeleteMLModel operation
type DeleteMLModelMarshaler struct {
	Input *types.DeleteMLModelInput
}

// DeleteRealtimeEndpointMarshaler defines marshaler for DeleteRealtimeEndpoint operation
type DeleteRealtimeEndpointMarshaler struct {
	Input *types.DeleteRealtimeEndpointInput
}

// DeleteTagsMarshaler defines marshaler for DeleteTags operation
type DeleteTagsMarshaler struct {
	Input *types.DeleteTagsInput
}

// DescribeBatchPredictionsMarshaler defines marshaler for DescribeBatchPredictions operation
type DescribeBatchPredictionsMarshaler struct {
	Input *types.DescribeBatchPredictionsInput
}

// DescribeDataSourcesMarshaler defines marshaler for DescribeDataSources operation
type DescribeDataSourcesMarshaler struct {
	Input *types.DescribeDataSourcesInput
}

// DescribeEvaluationsMarshaler defines marshaler for DescribeEvaluations operation
type DescribeEvaluationsMarshaler struct {
	Input *types.DescribeEvaluationsInput
}

// DescribeMLModelsMarshaler defines marshaler for DescribeMLModels operation
type DescribeMLModelsMarshaler struct {
	Input *types.DescribeMLModelsInput
}

// DescribeTagsMarshaler defines marshaler for DescribeTags operation
type DescribeTagsMarshaler struct {
	Input *types.DescribeTagsInput
}

// GetBatchPredictionMarshaler defines marshaler for GetBatchPrediction operation
type GetBatchPredictionMarshaler struct {
	Input *types.GetBatchPredictionInput
}

// GetDataSourceMarshaler defines marshaler for GetDataSource operation
type GetDataSourceMarshaler struct {
	Input *types.GetDataSourceInput
}

// GetEvaluationMarshaler defines marshaler for GetEvaluation operation
type GetEvaluationMarshaler struct {
	Input *types.GetEvaluationInput
}

// GetMLModelMarshaler defines marshaler for GetMLModel operation
type GetMLModelMarshaler struct {
	Input *types.GetMLModelInput
}

// PredictMarshaler defines marshaler for Predict operation
type PredictMarshaler struct {
	Input *types.PredictInput
}

// UpdateBatchPredictionMarshaler defines marshaler for UpdateBatchPrediction operation
type UpdateBatchPredictionMarshaler struct {
	Input *types.UpdateBatchPredictionInput
}

// UpdateDataSourceMarshaler defines marshaler for UpdateDataSource operation
type UpdateDataSourceMarshaler struct {
	Input *types.UpdateDataSourceInput
}

// UpdateEvaluationMarshaler defines marshaler for UpdateEvaluation operation
type UpdateEvaluationMarshaler struct {
	Input *types.UpdateEvaluationInput
}

// UpdateMLModelMarshaler defines marshaler for UpdateMLModel operation
type UpdateMLModelMarshaler struct {
	Input *types.UpdateMLModelInput
}

func MarshalAddTagsInputShapeAWSJSON(v *types.AddTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateBatchPredictionInputShapeAWSJSON(v *types.CreateBatchPredictionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDataSourceFromRDSInputShapeAWSJSON(v *types.CreateDataSourceFromRDSInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDataSourceFromRedshiftInputShapeAWSJSON(v *types.CreateDataSourceFromRedshiftInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDataSourceFromS3InputShapeAWSJSON(v *types.CreateDataSourceFromS3Input, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateEvaluationInputShapeAWSJSON(v *types.CreateEvaluationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateMLModelInputShapeAWSJSON(v *types.CreateMLModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRealtimeEndpointInputShapeAWSJSON(v *types.CreateRealtimeEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteBatchPredictionInputShapeAWSJSON(v *types.DeleteBatchPredictionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDataSourceInputShapeAWSJSON(v *types.DeleteDataSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteEvaluationInputShapeAWSJSON(v *types.DeleteEvaluationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteMLModelInputShapeAWSJSON(v *types.DeleteMLModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRealtimeEndpointInputShapeAWSJSON(v *types.DeleteRealtimeEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTagsInputShapeAWSJSON(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeBatchPredictionsInputShapeAWSJSON(v *types.DescribeBatchPredictionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDataSourcesInputShapeAWSJSON(v *types.DescribeDataSourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEvaluationsInputShapeAWSJSON(v *types.DescribeEvaluationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeMLModelsInputShapeAWSJSON(v *types.DescribeMLModelsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTagsInputShapeAWSJSON(v *types.DescribeTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetBatchPredictionInputShapeAWSJSON(v *types.GetBatchPredictionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDataSourceInputShapeAWSJSON(v *types.GetDataSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetEvaluationInputShapeAWSJSON(v *types.GetEvaluationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetMLModelInputShapeAWSJSON(v *types.GetMLModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPredictInputShapeAWSJSON(v *types.PredictInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateBatchPredictionInputShapeAWSJSON(v *types.UpdateBatchPredictionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDataSourceInputShapeAWSJSON(v *types.UpdateDataSourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateEvaluationInputShapeAWSJSON(v *types.UpdateEvaluationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateMLModelInputShapeAWSJSON(v *types.UpdateMLModelInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AddTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBatchPredictionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBatchPredictionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBatchPredictionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBatchPrediction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDataSourceFromRDSMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDataSourceFromRDSInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDataSourceFromRDSMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDataSourceFromRDS.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDataSourceFromRedshiftMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDataSourceFromRedshiftInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDataSourceFromRedshiftMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDataSourceFromRedshift.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDataSourceFromS3Marshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDataSourceFromS3InputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDataSourceFromS3Marshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDataSourceFromS3.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEvaluationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEvaluationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEvaluationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEvaluation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateMLModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateMLModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateMLModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateMLModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRealtimeEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRealtimeEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRealtimeEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRealtimeEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBatchPredictionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBatchPredictionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBatchPredictionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBatchPrediction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDataSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDataSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDataSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDataSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEvaluationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEvaluationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEvaluationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEvaluation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMLModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMLModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMLModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMLModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRealtimeEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRealtimeEndpointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRealtimeEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRealtimeEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBatchPredictionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBatchPredictionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBatchPredictionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBatchPredictions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDataSourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDataSourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDataSourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDataSources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEvaluationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEvaluationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEvaluationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvaluations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMLModelsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMLModelsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMLModelsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMLModels.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBatchPredictionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBatchPredictionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBatchPredictionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBatchPrediction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDataSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDataSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDataSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDataSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEvaluationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEvaluationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEvaluationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEvaluation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetMLModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetMLModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetMLModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetMLModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PredictMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPredictInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PredictMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "Predict.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBatchPredictionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBatchPredictionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBatchPredictionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBatchPrediction.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDataSourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDataSourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDataSourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDataSource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateEvaluationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateEvaluationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateEvaluationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateEvaluation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateMLModelMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateMLModelInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateMLModelMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateMLModel.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
