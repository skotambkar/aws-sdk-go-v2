// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/dax/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateClusterMarshaler defines marshaler for CreateCluster operation
type CreateClusterMarshaler struct {
	Input *types.CreateClusterInput
}

// CreateParameterGroupMarshaler defines marshaler for CreateParameterGroup operation
type CreateParameterGroupMarshaler struct {
	Input *types.CreateParameterGroupInput
}

// CreateSubnetGroupMarshaler defines marshaler for CreateSubnetGroup operation
type CreateSubnetGroupMarshaler struct {
	Input *types.CreateSubnetGroupInput
}

// DecreaseReplicationFactorMarshaler defines marshaler for DecreaseReplicationFactor operation
type DecreaseReplicationFactorMarshaler struct {
	Input *types.DecreaseReplicationFactorInput
}

// DeleteClusterMarshaler defines marshaler for DeleteCluster operation
type DeleteClusterMarshaler struct {
	Input *types.DeleteClusterInput
}

// DeleteParameterGroupMarshaler defines marshaler for DeleteParameterGroup operation
type DeleteParameterGroupMarshaler struct {
	Input *types.DeleteParameterGroupInput
}

// DeleteSubnetGroupMarshaler defines marshaler for DeleteSubnetGroup operation
type DeleteSubnetGroupMarshaler struct {
	Input *types.DeleteSubnetGroupInput
}

// DescribeClustersMarshaler defines marshaler for DescribeClusters operation
type DescribeClustersMarshaler struct {
	Input *types.DescribeClustersInput
}

// DescribeDefaultParametersMarshaler defines marshaler for DescribeDefaultParameters operation
type DescribeDefaultParametersMarshaler struct {
	Input *types.DescribeDefaultParametersInput
}

// DescribeEventsMarshaler defines marshaler for DescribeEvents operation
type DescribeEventsMarshaler struct {
	Input *types.DescribeEventsInput
}

// DescribeParameterGroupsMarshaler defines marshaler for DescribeParameterGroups operation
type DescribeParameterGroupsMarshaler struct {
	Input *types.DescribeParameterGroupsInput
}

// DescribeParametersMarshaler defines marshaler for DescribeParameters operation
type DescribeParametersMarshaler struct {
	Input *types.DescribeParametersInput
}

// DescribeSubnetGroupsMarshaler defines marshaler for DescribeSubnetGroups operation
type DescribeSubnetGroupsMarshaler struct {
	Input *types.DescribeSubnetGroupsInput
}

// IncreaseReplicationFactorMarshaler defines marshaler for IncreaseReplicationFactor operation
type IncreaseReplicationFactorMarshaler struct {
	Input *types.IncreaseReplicationFactorInput
}

// ListTagsMarshaler defines marshaler for ListTags operation
type ListTagsMarshaler struct {
	Input *types.ListTagsInput
}

// RebootNodeMarshaler defines marshaler for RebootNode operation
type RebootNodeMarshaler struct {
	Input *types.RebootNodeInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateClusterMarshaler defines marshaler for UpdateCluster operation
type UpdateClusterMarshaler struct {
	Input *types.UpdateClusterInput
}

// UpdateParameterGroupMarshaler defines marshaler for UpdateParameterGroup operation
type UpdateParameterGroupMarshaler struct {
	Input *types.UpdateParameterGroupInput
}

// UpdateSubnetGroupMarshaler defines marshaler for UpdateSubnetGroup operation
type UpdateSubnetGroupMarshaler struct {
	Input *types.UpdateSubnetGroupInput
}

func MarshalCreateClusterInputShapeAWSJSON(v *types.CreateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateParameterGroupInputShapeAWSJSON(v *types.CreateParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSubnetGroupInputShapeAWSJSON(v *types.CreateSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDecreaseReplicationFactorInputShapeAWSJSON(v *types.DecreaseReplicationFactorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteClusterInputShapeAWSJSON(v *types.DeleteClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteParameterGroupInputShapeAWSJSON(v *types.DeleteParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSubnetGroupInputShapeAWSJSON(v *types.DeleteSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeClustersInputShapeAWSJSON(v *types.DescribeClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDefaultParametersInputShapeAWSJSON(v *types.DescribeDefaultParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeEventsInputShapeAWSJSON(v *types.DescribeEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeParameterGroupsInputShapeAWSJSON(v *types.DescribeParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeParametersInputShapeAWSJSON(v *types.DescribeParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSubnetGroupsInputShapeAWSJSON(v *types.DescribeSubnetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalIncreaseReplicationFactorInputShapeAWSJSON(v *types.IncreaseReplicationFactorInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsInputShapeAWSJSON(v *types.ListTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRebootNodeInputShapeAWSJSON(v *types.RebootNodeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateClusterInputShapeAWSJSON(v *types.UpdateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateParameterGroupInputShapeAWSJSON(v *types.UpdateParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateSubnetGroupInputShapeAWSJSON(v *types.UpdateSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateParameterGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSubnetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DecreaseReplicationFactorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDecreaseReplicationFactorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DecreaseReplicationFactorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DecreaseReplicationFactor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteParameterGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSubnetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClustersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDefaultParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDefaultParametersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDefaultParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDefaultParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeParameterGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeParametersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSubnetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSubnetGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSubnetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSubnetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m IncreaseReplicationFactorMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalIncreaseReplicationFactorInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m IncreaseReplicationFactorMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "IncreaseReplicationFactor.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootNodeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootNodeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootNodeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootNode.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateParameterGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSubnetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
