// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/storagegateway/types"
)

var _ bytes.Buffer
var _ awserr.Error

// ActivateGatewayMarshaler defines marshaler for ActivateGateway operation
type ActivateGatewayMarshaler struct {
	Input *types.ActivateGatewayInput
}

// AddCacheMarshaler defines marshaler for AddCache operation
type AddCacheMarshaler struct {
	Input *types.AddCacheInput
}

// AddTagsToResourceMarshaler defines marshaler for AddTagsToResource operation
type AddTagsToResourceMarshaler struct {
	Input *types.AddTagsToResourceInput
}

// AddUploadBufferMarshaler defines marshaler for AddUploadBuffer operation
type AddUploadBufferMarshaler struct {
	Input *types.AddUploadBufferInput
}

// AddWorkingStorageMarshaler defines marshaler for AddWorkingStorage operation
type AddWorkingStorageMarshaler struct {
	Input *types.AddWorkingStorageInput
}

// AssignTapePoolMarshaler defines marshaler for AssignTapePool operation
type AssignTapePoolMarshaler struct {
	Input *types.AssignTapePoolInput
}

// AttachVolumeMarshaler defines marshaler for AttachVolume operation
type AttachVolumeMarshaler struct {
	Input *types.AttachVolumeInput
}

// CancelArchivalMarshaler defines marshaler for CancelArchival operation
type CancelArchivalMarshaler struct {
	Input *types.CancelArchivalInput
}

// CancelRetrievalMarshaler defines marshaler for CancelRetrieval operation
type CancelRetrievalMarshaler struct {
	Input *types.CancelRetrievalInput
}

// CreateCachediSCSIVolumeMarshaler defines marshaler for CreateCachediSCSIVolume operation
type CreateCachediSCSIVolumeMarshaler struct {
	Input *types.CreateCachediSCSIVolumeInput
}

// CreateNFSFileShareMarshaler defines marshaler for CreateNFSFileShare operation
type CreateNFSFileShareMarshaler struct {
	Input *types.CreateNFSFileShareInput
}

// CreateSMBFileShareMarshaler defines marshaler for CreateSMBFileShare operation
type CreateSMBFileShareMarshaler struct {
	Input *types.CreateSMBFileShareInput
}

// CreateSnapshotMarshaler defines marshaler for CreateSnapshot operation
type CreateSnapshotMarshaler struct {
	Input *types.CreateSnapshotInput
}

// CreateSnapshotFromVolumeRecoveryPointMarshaler defines marshaler for CreateSnapshotFromVolumeRecoveryPoint operation
type CreateSnapshotFromVolumeRecoveryPointMarshaler struct {
	Input *types.CreateSnapshotFromVolumeRecoveryPointInput
}

// CreateStorediSCSIVolumeMarshaler defines marshaler for CreateStorediSCSIVolume operation
type CreateStorediSCSIVolumeMarshaler struct {
	Input *types.CreateStorediSCSIVolumeInput
}

// CreateTapeWithBarcodeMarshaler defines marshaler for CreateTapeWithBarcode operation
type CreateTapeWithBarcodeMarshaler struct {
	Input *types.CreateTapeWithBarcodeInput
}

// CreateTapesMarshaler defines marshaler for CreateTapes operation
type CreateTapesMarshaler struct {
	Input *types.CreateTapesInput
}

// DeleteBandwidthRateLimitMarshaler defines marshaler for DeleteBandwidthRateLimit operation
type DeleteBandwidthRateLimitMarshaler struct {
	Input *types.DeleteBandwidthRateLimitInput
}

// DeleteChapCredentialsMarshaler defines marshaler for DeleteChapCredentials operation
type DeleteChapCredentialsMarshaler struct {
	Input *types.DeleteChapCredentialsInput
}

// DeleteFileShareMarshaler defines marshaler for DeleteFileShare operation
type DeleteFileShareMarshaler struct {
	Input *types.DeleteFileShareInput
}

// DeleteGatewayMarshaler defines marshaler for DeleteGateway operation
type DeleteGatewayMarshaler struct {
	Input *types.DeleteGatewayInput
}

// DeleteSnapshotScheduleMarshaler defines marshaler for DeleteSnapshotSchedule operation
type DeleteSnapshotScheduleMarshaler struct {
	Input *types.DeleteSnapshotScheduleInput
}

// DeleteTapeMarshaler defines marshaler for DeleteTape operation
type DeleteTapeMarshaler struct {
	Input *types.DeleteTapeInput
}

// DeleteTapeArchiveMarshaler defines marshaler for DeleteTapeArchive operation
type DeleteTapeArchiveMarshaler struct {
	Input *types.DeleteTapeArchiveInput
}

// DeleteVolumeMarshaler defines marshaler for DeleteVolume operation
type DeleteVolumeMarshaler struct {
	Input *types.DeleteVolumeInput
}

// DescribeAvailabilityMonitorTestMarshaler defines marshaler for DescribeAvailabilityMonitorTest operation
type DescribeAvailabilityMonitorTestMarshaler struct {
	Input *types.DescribeAvailabilityMonitorTestInput
}

// DescribeBandwidthRateLimitMarshaler defines marshaler for DescribeBandwidthRateLimit operation
type DescribeBandwidthRateLimitMarshaler struct {
	Input *types.DescribeBandwidthRateLimitInput
}

// DescribeCacheMarshaler defines marshaler for DescribeCache operation
type DescribeCacheMarshaler struct {
	Input *types.DescribeCacheInput
}

// DescribeCachediSCSIVolumesMarshaler defines marshaler for DescribeCachediSCSIVolumes operation
type DescribeCachediSCSIVolumesMarshaler struct {
	Input *types.DescribeCachediSCSIVolumesInput
}

// DescribeChapCredentialsMarshaler defines marshaler for DescribeChapCredentials operation
type DescribeChapCredentialsMarshaler struct {
	Input *types.DescribeChapCredentialsInput
}

// DescribeGatewayInformationMarshaler defines marshaler for DescribeGatewayInformation operation
type DescribeGatewayInformationMarshaler struct {
	Input *types.DescribeGatewayInformationInput
}

// DescribeMaintenanceStartTimeMarshaler defines marshaler for DescribeMaintenanceStartTime operation
type DescribeMaintenanceStartTimeMarshaler struct {
	Input *types.DescribeMaintenanceStartTimeInput
}

// DescribeNFSFileSharesMarshaler defines marshaler for DescribeNFSFileShares operation
type DescribeNFSFileSharesMarshaler struct {
	Input *types.DescribeNFSFileSharesInput
}

// DescribeSMBFileSharesMarshaler defines marshaler for DescribeSMBFileShares operation
type DescribeSMBFileSharesMarshaler struct {
	Input *types.DescribeSMBFileSharesInput
}

// DescribeSMBSettingsMarshaler defines marshaler for DescribeSMBSettings operation
type DescribeSMBSettingsMarshaler struct {
	Input *types.DescribeSMBSettingsInput
}

// DescribeSnapshotScheduleMarshaler defines marshaler for DescribeSnapshotSchedule operation
type DescribeSnapshotScheduleMarshaler struct {
	Input *types.DescribeSnapshotScheduleInput
}

// DescribeStorediSCSIVolumesMarshaler defines marshaler for DescribeStorediSCSIVolumes operation
type DescribeStorediSCSIVolumesMarshaler struct {
	Input *types.DescribeStorediSCSIVolumesInput
}

// DescribeTapeArchivesMarshaler defines marshaler for DescribeTapeArchives operation
type DescribeTapeArchivesMarshaler struct {
	Input *types.DescribeTapeArchivesInput
}

// DescribeTapeRecoveryPointsMarshaler defines marshaler for DescribeTapeRecoveryPoints operation
type DescribeTapeRecoveryPointsMarshaler struct {
	Input *types.DescribeTapeRecoveryPointsInput
}

// DescribeTapesMarshaler defines marshaler for DescribeTapes operation
type DescribeTapesMarshaler struct {
	Input *types.DescribeTapesInput
}

// DescribeUploadBufferMarshaler defines marshaler for DescribeUploadBuffer operation
type DescribeUploadBufferMarshaler struct {
	Input *types.DescribeUploadBufferInput
}

// DescribeVTLDevicesMarshaler defines marshaler for DescribeVTLDevices operation
type DescribeVTLDevicesMarshaler struct {
	Input *types.DescribeVTLDevicesInput
}

// DescribeWorkingStorageMarshaler defines marshaler for DescribeWorkingStorage operation
type DescribeWorkingStorageMarshaler struct {
	Input *types.DescribeWorkingStorageInput
}

// DetachVolumeMarshaler defines marshaler for DetachVolume operation
type DetachVolumeMarshaler struct {
	Input *types.DetachVolumeInput
}

// DisableGatewayMarshaler defines marshaler for DisableGateway operation
type DisableGatewayMarshaler struct {
	Input *types.DisableGatewayInput
}

// JoinDomainMarshaler defines marshaler for JoinDomain operation
type JoinDomainMarshaler struct {
	Input *types.JoinDomainInput
}

// ListFileSharesMarshaler defines marshaler for ListFileShares operation
type ListFileSharesMarshaler struct {
	Input *types.ListFileSharesInput
}

// ListGatewaysMarshaler defines marshaler for ListGateways operation
type ListGatewaysMarshaler struct {
	Input *types.ListGatewaysInput
}

// ListLocalDisksMarshaler defines marshaler for ListLocalDisks operation
type ListLocalDisksMarshaler struct {
	Input *types.ListLocalDisksInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListTapesMarshaler defines marshaler for ListTapes operation
type ListTapesMarshaler struct {
	Input *types.ListTapesInput
}

// ListVolumeInitiatorsMarshaler defines marshaler for ListVolumeInitiators operation
type ListVolumeInitiatorsMarshaler struct {
	Input *types.ListVolumeInitiatorsInput
}

// ListVolumeRecoveryPointsMarshaler defines marshaler for ListVolumeRecoveryPoints operation
type ListVolumeRecoveryPointsMarshaler struct {
	Input *types.ListVolumeRecoveryPointsInput
}

// ListVolumesMarshaler defines marshaler for ListVolumes operation
type ListVolumesMarshaler struct {
	Input *types.ListVolumesInput
}

// NotifyWhenUploadedMarshaler defines marshaler for NotifyWhenUploaded operation
type NotifyWhenUploadedMarshaler struct {
	Input *types.NotifyWhenUploadedInput
}

// RefreshCacheMarshaler defines marshaler for RefreshCache operation
type RefreshCacheMarshaler struct {
	Input *types.RefreshCacheInput
}

// RemoveTagsFromResourceMarshaler defines marshaler for RemoveTagsFromResource operation
type RemoveTagsFromResourceMarshaler struct {
	Input *types.RemoveTagsFromResourceInput
}

// ResetCacheMarshaler defines marshaler for ResetCache operation
type ResetCacheMarshaler struct {
	Input *types.ResetCacheInput
}

// RetrieveTapeArchiveMarshaler defines marshaler for RetrieveTapeArchive operation
type RetrieveTapeArchiveMarshaler struct {
	Input *types.RetrieveTapeArchiveInput
}

// RetrieveTapeRecoveryPointMarshaler defines marshaler for RetrieveTapeRecoveryPoint operation
type RetrieveTapeRecoveryPointMarshaler struct {
	Input *types.RetrieveTapeRecoveryPointInput
}

// SetLocalConsolePasswordMarshaler defines marshaler for SetLocalConsolePassword operation
type SetLocalConsolePasswordMarshaler struct {
	Input *types.SetLocalConsolePasswordInput
}

// SetSMBGuestPasswordMarshaler defines marshaler for SetSMBGuestPassword operation
type SetSMBGuestPasswordMarshaler struct {
	Input *types.SetSMBGuestPasswordInput
}

// ShutdownGatewayMarshaler defines marshaler for ShutdownGateway operation
type ShutdownGatewayMarshaler struct {
	Input *types.ShutdownGatewayInput
}

// StartAvailabilityMonitorTestMarshaler defines marshaler for StartAvailabilityMonitorTest operation
type StartAvailabilityMonitorTestMarshaler struct {
	Input *types.StartAvailabilityMonitorTestInput
}

// StartGatewayMarshaler defines marshaler for StartGateway operation
type StartGatewayMarshaler struct {
	Input *types.StartGatewayInput
}

// UpdateBandwidthRateLimitMarshaler defines marshaler for UpdateBandwidthRateLimit operation
type UpdateBandwidthRateLimitMarshaler struct {
	Input *types.UpdateBandwidthRateLimitInput
}

// UpdateChapCredentialsMarshaler defines marshaler for UpdateChapCredentials operation
type UpdateChapCredentialsMarshaler struct {
	Input *types.UpdateChapCredentialsInput
}

// UpdateGatewayInformationMarshaler defines marshaler for UpdateGatewayInformation operation
type UpdateGatewayInformationMarshaler struct {
	Input *types.UpdateGatewayInformationInput
}

// UpdateGatewaySoftwareNowMarshaler defines marshaler for UpdateGatewaySoftwareNow operation
type UpdateGatewaySoftwareNowMarshaler struct {
	Input *types.UpdateGatewaySoftwareNowInput
}

// UpdateMaintenanceStartTimeMarshaler defines marshaler for UpdateMaintenanceStartTime operation
type UpdateMaintenanceStartTimeMarshaler struct {
	Input *types.UpdateMaintenanceStartTimeInput
}

// UpdateNFSFileShareMarshaler defines marshaler for UpdateNFSFileShare operation
type UpdateNFSFileShareMarshaler struct {
	Input *types.UpdateNFSFileShareInput
}

// UpdateSMBFileShareMarshaler defines marshaler for UpdateSMBFileShare operation
type UpdateSMBFileShareMarshaler struct {
	Input *types.UpdateSMBFileShareInput
}

// UpdateSMBSecurityStrategyMarshaler defines marshaler for UpdateSMBSecurityStrategy operation
type UpdateSMBSecurityStrategyMarshaler struct {
	Input *types.UpdateSMBSecurityStrategyInput
}

// UpdateSnapshotScheduleMarshaler defines marshaler for UpdateSnapshotSchedule operation
type UpdateSnapshotScheduleMarshaler struct {
	Input *types.UpdateSnapshotScheduleInput
}

// UpdateVTLDeviceTypeMarshaler defines marshaler for UpdateVTLDeviceType operation
type UpdateVTLDeviceTypeMarshaler struct {
	Input *types.UpdateVTLDeviceTypeInput
}

func MarshalActivateGatewayInputShapeAWSJSON(v *types.ActivateGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddCacheInputShapeAWSJSON(v *types.AddCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddTagsToResourceInputShapeAWSJSON(v *types.AddTagsToResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddUploadBufferInputShapeAWSJSON(v *types.AddUploadBufferInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAddWorkingStorageInputShapeAWSJSON(v *types.AddWorkingStorageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAssignTapePoolInputShapeAWSJSON(v *types.AssignTapePoolInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalAttachVolumeInputShapeAWSJSON(v *types.AttachVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCancelArchivalInputShapeAWSJSON(v *types.CancelArchivalInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCancelRetrievalInputShapeAWSJSON(v *types.CancelRetrievalInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateCachediSCSIVolumeInputShapeAWSJSON(v *types.CreateCachediSCSIVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateNFSFileShareInputShapeAWSJSON(v *types.CreateNFSFileShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSMBFileShareInputShapeAWSJSON(v *types.CreateSMBFileShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSnapshotInputShapeAWSJSON(v *types.CreateSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateSnapshotFromVolumeRecoveryPointInputShapeAWSJSON(v *types.CreateSnapshotFromVolumeRecoveryPointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateStorediSCSIVolumeInputShapeAWSJSON(v *types.CreateStorediSCSIVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTapeWithBarcodeInputShapeAWSJSON(v *types.CreateTapeWithBarcodeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateTapesInputShapeAWSJSON(v *types.CreateTapesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteBandwidthRateLimitInputShapeAWSJSON(v *types.DeleteBandwidthRateLimitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteChapCredentialsInputShapeAWSJSON(v *types.DeleteChapCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteFileShareInputShapeAWSJSON(v *types.DeleteFileShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteGatewayInputShapeAWSJSON(v *types.DeleteGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteSnapshotScheduleInputShapeAWSJSON(v *types.DeleteSnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTapeInputShapeAWSJSON(v *types.DeleteTapeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTapeArchiveInputShapeAWSJSON(v *types.DeleteTapeArchiveInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteVolumeInputShapeAWSJSON(v *types.DeleteVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeAvailabilityMonitorTestInputShapeAWSJSON(v *types.DescribeAvailabilityMonitorTestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeBandwidthRateLimitInputShapeAWSJSON(v *types.DescribeBandwidthRateLimitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCacheInputShapeAWSJSON(v *types.DescribeCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeCachediSCSIVolumesInputShapeAWSJSON(v *types.DescribeCachediSCSIVolumesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeChapCredentialsInputShapeAWSJSON(v *types.DescribeChapCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeGatewayInformationInputShapeAWSJSON(v *types.DescribeGatewayInformationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeMaintenanceStartTimeInputShapeAWSJSON(v *types.DescribeMaintenanceStartTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeNFSFileSharesInputShapeAWSJSON(v *types.DescribeNFSFileSharesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSMBFileSharesInputShapeAWSJSON(v *types.DescribeSMBFileSharesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSMBSettingsInputShapeAWSJSON(v *types.DescribeSMBSettingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSnapshotScheduleInputShapeAWSJSON(v *types.DescribeSnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeStorediSCSIVolumesInputShapeAWSJSON(v *types.DescribeStorediSCSIVolumesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTapeArchivesInputShapeAWSJSON(v *types.DescribeTapeArchivesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTapeRecoveryPointsInputShapeAWSJSON(v *types.DescribeTapeRecoveryPointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeTapesInputShapeAWSJSON(v *types.DescribeTapesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUploadBufferInputShapeAWSJSON(v *types.DescribeUploadBufferInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeVTLDevicesInputShapeAWSJSON(v *types.DescribeVTLDevicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeWorkingStorageInputShapeAWSJSON(v *types.DescribeWorkingStorageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDetachVolumeInputShapeAWSJSON(v *types.DetachVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableGatewayInputShapeAWSJSON(v *types.DisableGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalJoinDomainInputShapeAWSJSON(v *types.JoinDomainInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListFileSharesInputShapeAWSJSON(v *types.ListFileSharesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListGatewaysInputShapeAWSJSON(v *types.ListGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListLocalDisksInputShapeAWSJSON(v *types.ListLocalDisksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTapesInputShapeAWSJSON(v *types.ListTapesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListVolumeInitiatorsInputShapeAWSJSON(v *types.ListVolumeInitiatorsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListVolumeRecoveryPointsInputShapeAWSJSON(v *types.ListVolumeRecoveryPointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListVolumesInputShapeAWSJSON(v *types.ListVolumesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalNotifyWhenUploadedInputShapeAWSJSON(v *types.NotifyWhenUploadedInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRefreshCacheInputShapeAWSJSON(v *types.RefreshCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveTagsFromResourceInputShapeAWSJSON(v *types.RemoveTagsFromResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalResetCacheInputShapeAWSJSON(v *types.ResetCacheInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRetrieveTapeArchiveInputShapeAWSJSON(v *types.RetrieveTapeArchiveInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRetrieveTapeRecoveryPointInputShapeAWSJSON(v *types.RetrieveTapeRecoveryPointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetLocalConsolePasswordInputShapeAWSJSON(v *types.SetLocalConsolePasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetSMBGuestPasswordInputShapeAWSJSON(v *types.SetSMBGuestPasswordInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalShutdownGatewayInputShapeAWSJSON(v *types.ShutdownGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartAvailabilityMonitorTestInputShapeAWSJSON(v *types.StartAvailabilityMonitorTestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartGatewayInputShapeAWSJSON(v *types.StartGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateBandwidthRateLimitInputShapeAWSJSON(v *types.UpdateBandwidthRateLimitInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateChapCredentialsInputShapeAWSJSON(v *types.UpdateChapCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGatewayInformationInputShapeAWSJSON(v *types.UpdateGatewayInformationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateGatewaySoftwareNowInputShapeAWSJSON(v *types.UpdateGatewaySoftwareNowInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateMaintenanceStartTimeInputShapeAWSJSON(v *types.UpdateMaintenanceStartTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateNFSFileShareInputShapeAWSJSON(v *types.UpdateNFSFileShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateSMBFileShareInputShapeAWSJSON(v *types.UpdateSMBFileShareInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateSMBSecurityStrategyInputShapeAWSJSON(v *types.UpdateSMBSecurityStrategyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateSnapshotScheduleInputShapeAWSJSON(v *types.UpdateSnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateVTLDeviceTypeInputShapeAWSJSON(v *types.UpdateVTLDeviceTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m ActivateGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalActivateGatewayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ActivateGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ActivateGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddTagsToResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddUploadBufferMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddUploadBufferInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddUploadBufferMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddUploadBuffer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AddWorkingStorageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddWorkingStorageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddWorkingStorageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddWorkingStorage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssignTapePoolMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssignTapePoolInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssignTapePoolMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssignTapePool.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachVolumeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelArchivalMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelArchivalInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelArchivalMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelArchival.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelRetrievalMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelRetrievalInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelRetrievalMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelRetrieval.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCachediSCSIVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCachediSCSIVolumeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCachediSCSIVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCachediSCSIVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNFSFileShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNFSFileShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNFSFileShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNFSFileShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSMBFileShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSMBFileShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSMBFileShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSMBFileShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotFromVolumeRecoveryPointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotFromVolumeRecoveryPointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotFromVolumeRecoveryPointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshotFromVolumeRecoveryPoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStorediSCSIVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStorediSCSIVolumeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStorediSCSIVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStorediSCSIVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTapeWithBarcodeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTapeWithBarcodeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTapeWithBarcodeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTapeWithBarcode.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTapesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTapesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTapesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTapes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBandwidthRateLimitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBandwidthRateLimitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBandwidthRateLimitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBandwidthRateLimit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteChapCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteChapCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteChapCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteChapCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFileShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFileShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFileShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFileShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGatewayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSnapshotScheduleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTapeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTapeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTapeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTape.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTapeArchiveMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTapeArchiveInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTapeArchiveMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTapeArchive.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVolumeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAvailabilityMonitorTestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAvailabilityMonitorTestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAvailabilityMonitorTestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAvailabilityMonitorTest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBandwidthRateLimitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBandwidthRateLimitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBandwidthRateLimitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBandwidthRateLimit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCachediSCSIVolumesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCachediSCSIVolumesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCachediSCSIVolumesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCachediSCSIVolumes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeChapCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeChapCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeChapCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeChapCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeGatewayInformationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeGatewayInformationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeGatewayInformationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeGatewayInformation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMaintenanceStartTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMaintenanceStartTimeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMaintenanceStartTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMaintenanceStartTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNFSFileSharesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNFSFileSharesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNFSFileSharesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNFSFileShares.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSMBFileSharesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSMBFileSharesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSMBFileSharesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSMBFileShares.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSMBSettingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSMBSettingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSMBSettingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSMBSettings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotScheduleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStorediSCSIVolumesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStorediSCSIVolumesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStorediSCSIVolumesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStorediSCSIVolumes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTapeArchivesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTapeArchivesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTapeArchivesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTapeArchives.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTapeRecoveryPointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTapeRecoveryPointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTapeRecoveryPointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTapeRecoveryPoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTapesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTapesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTapesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTapes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUploadBufferMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUploadBufferInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUploadBufferMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUploadBuffer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVTLDevicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVTLDevicesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVTLDevicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVTLDevices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeWorkingStorageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeWorkingStorageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeWorkingStorageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeWorkingStorage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachVolumeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableGatewayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m JoinDomainMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalJoinDomainInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m JoinDomainMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "JoinDomain.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListFileSharesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListFileSharesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListFileSharesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListFileShares.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGatewaysInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLocalDisksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLocalDisksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLocalDisksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLocalDisks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTapesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTapesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTapesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTapes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListVolumeInitiatorsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListVolumeInitiatorsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListVolumeInitiatorsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListVolumeInitiators.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListVolumeRecoveryPointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListVolumeRecoveryPointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListVolumeRecoveryPointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListVolumeRecoveryPoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListVolumesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListVolumesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListVolumesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListVolumes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m NotifyWhenUploadedMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalNotifyWhenUploadedInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m NotifyWhenUploadedMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "NotifyWhenUploaded.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RefreshCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRefreshCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RefreshCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RefreshCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetCacheMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetCacheInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetCacheMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetCache.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RetrieveTapeArchiveMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRetrieveTapeArchiveInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RetrieveTapeArchiveMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RetrieveTapeArchive.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RetrieveTapeRecoveryPointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRetrieveTapeRecoveryPointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RetrieveTapeRecoveryPointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RetrieveTapeRecoveryPoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetLocalConsolePasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetLocalConsolePasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetLocalConsolePasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetLocalConsolePassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetSMBGuestPasswordMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetSMBGuestPasswordInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetSMBGuestPasswordMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetSMBGuestPassword.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ShutdownGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalShutdownGatewayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ShutdownGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ShutdownGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartAvailabilityMonitorTestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartAvailabilityMonitorTestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartAvailabilityMonitorTestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartAvailabilityMonitorTest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartGatewayInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBandwidthRateLimitMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBandwidthRateLimitInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBandwidthRateLimitMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBandwidthRateLimit.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateChapCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateChapCredentialsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateChapCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateChapCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGatewayInformationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGatewayInformationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGatewayInformationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGatewayInformation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGatewaySoftwareNowMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGatewaySoftwareNowInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGatewaySoftwareNowMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGatewaySoftwareNow.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateMaintenanceStartTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateMaintenanceStartTimeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateMaintenanceStartTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateMaintenanceStartTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateNFSFileShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateNFSFileShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateNFSFileShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateNFSFileShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSMBFileShareMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSMBFileShareInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSMBFileShareMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSMBFileShare.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSMBSecurityStrategyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSMBSecurityStrategyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSMBSecurityStrategyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSMBSecurityStrategy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSnapshotScheduleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateVTLDeviceTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateVTLDeviceTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateVTLDeviceTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateVTLDeviceType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
