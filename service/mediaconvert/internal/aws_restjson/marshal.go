// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/mediaconvert/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssociateCertificateMarshaler defines marshaler for AssociateCertificate operation
type AssociateCertificateMarshaler struct {
	Input *types.AssociateCertificateInput
}

// CancelJobMarshaler defines marshaler for CancelJob operation
type CancelJobMarshaler struct {
	Input *types.CancelJobInput
}

// CreateJobMarshaler defines marshaler for CreateJob operation
type CreateJobMarshaler struct {
	Input *types.CreateJobInput
}

// CreateJobTemplateMarshaler defines marshaler for CreateJobTemplate operation
type CreateJobTemplateMarshaler struct {
	Input *types.CreateJobTemplateInput
}

// CreatePresetMarshaler defines marshaler for CreatePreset operation
type CreatePresetMarshaler struct {
	Input *types.CreatePresetInput
}

// CreateQueueMarshaler defines marshaler for CreateQueue operation
type CreateQueueMarshaler struct {
	Input *types.CreateQueueInput
}

// DeleteJobTemplateMarshaler defines marshaler for DeleteJobTemplate operation
type DeleteJobTemplateMarshaler struct {
	Input *types.DeleteJobTemplateInput
}

// DeletePresetMarshaler defines marshaler for DeletePreset operation
type DeletePresetMarshaler struct {
	Input *types.DeletePresetInput
}

// DeleteQueueMarshaler defines marshaler for DeleteQueue operation
type DeleteQueueMarshaler struct {
	Input *types.DeleteQueueInput
}

// DescribeEndpointsMarshaler defines marshaler for DescribeEndpoints operation
type DescribeEndpointsMarshaler struct {
	Input *types.DescribeEndpointsInput
}

// DisassociateCertificateMarshaler defines marshaler for DisassociateCertificate operation
type DisassociateCertificateMarshaler struct {
	Input *types.DisassociateCertificateInput
}

// GetJobMarshaler defines marshaler for GetJob operation
type GetJobMarshaler struct {
	Input *types.GetJobInput
}

// GetJobTemplateMarshaler defines marshaler for GetJobTemplate operation
type GetJobTemplateMarshaler struct {
	Input *types.GetJobTemplateInput
}

// GetPresetMarshaler defines marshaler for GetPreset operation
type GetPresetMarshaler struct {
	Input *types.GetPresetInput
}

// GetQueueMarshaler defines marshaler for GetQueue operation
type GetQueueMarshaler struct {
	Input *types.GetQueueInput
}

// ListJobTemplatesMarshaler defines marshaler for ListJobTemplates operation
type ListJobTemplatesMarshaler struct {
	Input *types.ListJobTemplatesInput
}

// ListJobsMarshaler defines marshaler for ListJobs operation
type ListJobsMarshaler struct {
	Input *types.ListJobsInput
}

// ListPresetsMarshaler defines marshaler for ListPresets operation
type ListPresetsMarshaler struct {
	Input *types.ListPresetsInput
}

// ListQueuesMarshaler defines marshaler for ListQueues operation
type ListQueuesMarshaler struct {
	Input *types.ListQueuesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateJobTemplateMarshaler defines marshaler for UpdateJobTemplate operation
type UpdateJobTemplateMarshaler struct {
	Input *types.UpdateJobTemplateInput
}

// UpdatePresetMarshaler defines marshaler for UpdatePreset operation
type UpdatePresetMarshaler struct {
	Input *types.UpdatePresetInput
}

// UpdateQueueMarshaler defines marshaler for UpdateQueue operation
type UpdateQueueMarshaler struct {
	Input *types.UpdateQueueInput
}

func MarshalAssociateCertificateInputShapeAWSREST(v *types.AssociateCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalAssociateCertificateInputShapeAWSJSON(v *types.AssociateCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCancelJobInputShapeAWSREST(v *types.CancelJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelJobInputShapeAWSJSON(v *types.CancelJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateJobInputShapeAWSREST(v *types.CreateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateJobInputShapeAWSJSON(v *types.CreateJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateJobTemplateInputShapeAWSREST(v *types.CreateJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateJobTemplateInputShapeAWSJSON(v *types.CreateJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreatePresetInputShapeAWSREST(v *types.CreatePresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreatePresetInputShapeAWSJSON(v *types.CreatePresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateQueueInputShapeAWSREST(v *types.CreateQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateQueueInputShapeAWSJSON(v *types.CreateQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteJobTemplateInputShapeAWSREST(v *types.DeleteJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteJobTemplateInputShapeAWSJSON(v *types.DeleteJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeletePresetInputShapeAWSREST(v *types.DeletePresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeletePresetInputShapeAWSJSON(v *types.DeletePresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteQueueInputShapeAWSREST(v *types.DeleteQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteQueueInputShapeAWSJSON(v *types.DeleteQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeEndpointsInputShapeAWSREST(v *types.DescribeEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeEndpointsInputShapeAWSJSON(v *types.DescribeEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDisassociateCertificateInputShapeAWSREST(v *types.DisassociateCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDisassociateCertificateInputShapeAWSJSON(v *types.DisassociateCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJobInputShapeAWSREST(v *types.GetJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJobInputShapeAWSJSON(v *types.GetJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetJobTemplateInputShapeAWSREST(v *types.GetJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetJobTemplateInputShapeAWSJSON(v *types.GetJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetPresetInputShapeAWSREST(v *types.GetPresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetPresetInputShapeAWSJSON(v *types.GetPresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetQueueInputShapeAWSREST(v *types.GetQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetQueueInputShapeAWSJSON(v *types.GetQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJobTemplatesInputShapeAWSREST(v *types.ListJobTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJobTemplatesInputShapeAWSJSON(v *types.ListJobTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJobsInputShapeAWSREST(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJobsInputShapeAWSJSON(v *types.ListJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListPresetsInputShapeAWSREST(v *types.ListPresetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListPresetsInputShapeAWSJSON(v *types.ListPresetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListQueuesInputShapeAWSREST(v *types.ListQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListQueuesInputShapeAWSJSON(v *types.ListQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateJobTemplateInputShapeAWSREST(v *types.UpdateJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateJobTemplateInputShapeAWSJSON(v *types.UpdateJobTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdatePresetInputShapeAWSREST(v *types.UpdatePresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdatePresetInputShapeAWSJSON(v *types.UpdatePresetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateQueueInputShapeAWSREST(v *types.UpdateQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateQueueInputShapeAWSJSON(v *types.UpdateQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m AssociateCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateCertificateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalAssociateCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateJobTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateJobTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateJobTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateJobTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateJobTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePresetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePresetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreatePresetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePresetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePreset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteJobTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteJobTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteJobTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteJobTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteJobTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePresetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePresetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeletePresetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePresetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePreset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEndpointsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeEndpointsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateCertificateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDisassociateCertificateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetJobTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetJobTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetJobTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetJobTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetJobTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPresetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPresetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetPresetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPresetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPreset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJobTemplatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJobTemplatesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJobTemplatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJobTemplatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJobTemplates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPresetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPresetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListPresetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPresetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPresets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListQueuesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListQueuesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListQueuesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListQueuesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListQueues.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateJobTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateJobTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateJobTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateJobTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateJobTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdatePresetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdatePresetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdatePresetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdatePresetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdatePreset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateQueueInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateQueueInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
