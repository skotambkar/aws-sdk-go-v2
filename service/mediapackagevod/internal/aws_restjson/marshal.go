// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/mediapackagevod/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateAssetMarshaler defines marshaler for CreateAsset operation
type CreateAssetMarshaler struct {
	Input *types.CreateAssetInput
}

// CreatePackagingConfigurationMarshaler defines marshaler for CreatePackagingConfiguration operation
type CreatePackagingConfigurationMarshaler struct {
	Input *types.CreatePackagingConfigurationInput
}

// CreatePackagingGroupMarshaler defines marshaler for CreatePackagingGroup operation
type CreatePackagingGroupMarshaler struct {
	Input *types.CreatePackagingGroupInput
}

// DeleteAssetMarshaler defines marshaler for DeleteAsset operation
type DeleteAssetMarshaler struct {
	Input *types.DeleteAssetInput
}

// DeletePackagingConfigurationMarshaler defines marshaler for DeletePackagingConfiguration operation
type DeletePackagingConfigurationMarshaler struct {
	Input *types.DeletePackagingConfigurationInput
}

// DeletePackagingGroupMarshaler defines marshaler for DeletePackagingGroup operation
type DeletePackagingGroupMarshaler struct {
	Input *types.DeletePackagingGroupInput
}

// DescribeAssetMarshaler defines marshaler for DescribeAsset operation
type DescribeAssetMarshaler struct {
	Input *types.DescribeAssetInput
}

// DescribePackagingConfigurationMarshaler defines marshaler for DescribePackagingConfiguration operation
type DescribePackagingConfigurationMarshaler struct {
	Input *types.DescribePackagingConfigurationInput
}

// DescribePackagingGroupMarshaler defines marshaler for DescribePackagingGroup operation
type DescribePackagingGroupMarshaler struct {
	Input *types.DescribePackagingGroupInput
}

// ListAssetsMarshaler defines marshaler for ListAssets operation
type ListAssetsMarshaler struct {
	Input *types.ListAssetsInput
}

// ListPackagingConfigurationsMarshaler defines marshaler for ListPackagingConfigurations operation
type ListPackagingConfigurationsMarshaler struct {
	Input *types.ListPackagingConfigurationsInput
}

// ListPackagingGroupsMarshaler defines marshaler for ListPackagingGroups operation
type ListPackagingGroupsMarshaler struct {
	Input *types.ListPackagingGroupsInput
}

func MarshalCreateAssetInputShapeAWSREST(v *types.CreateAssetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateAssetInputShapeAWSJSON(v *types.CreateAssetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreatePackagingConfigurationInputShapeAWSREST(v *types.CreatePackagingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreatePackagingConfigurationInputShapeAWSJSON(v *types.CreatePackagingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreatePackagingGroupInputShapeAWSREST(v *types.CreatePackagingGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreatePackagingGroupInputShapeAWSJSON(v *types.CreatePackagingGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteAssetInputShapeAWSREST(v *types.DeleteAssetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteAssetInputShapeAWSJSON(v *types.DeleteAssetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeletePackagingConfigurationInputShapeAWSREST(v *types.DeletePackagingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeletePackagingConfigurationInputShapeAWSJSON(v *types.DeletePackagingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeletePackagingGroupInputShapeAWSREST(v *types.DeletePackagingGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeletePackagingGroupInputShapeAWSJSON(v *types.DeletePackagingGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeAssetInputShapeAWSREST(v *types.DescribeAssetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeAssetInputShapeAWSJSON(v *types.DescribeAssetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribePackagingConfigurationInputShapeAWSREST(v *types.DescribePackagingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribePackagingConfigurationInputShapeAWSJSON(v *types.DescribePackagingConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribePackagingGroupInputShapeAWSREST(v *types.DescribePackagingGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribePackagingGroupInputShapeAWSJSON(v *types.DescribePackagingGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListAssetsInputShapeAWSREST(v *types.ListAssetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListAssetsInputShapeAWSJSON(v *types.ListAssetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListPackagingConfigurationsInputShapeAWSREST(v *types.ListPackagingConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListPackagingConfigurationsInputShapeAWSJSON(v *types.ListPackagingConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListPackagingGroupsInputShapeAWSREST(v *types.ListPackagingGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListPackagingGroupsInputShapeAWSJSON(v *types.ListPackagingGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateAssetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateAssetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateAssetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateAssetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateAsset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePackagingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePackagingConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreatePackagingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePackagingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePackagingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePackagingGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePackagingGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreatePackagingGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePackagingGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePackagingGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteAssetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteAssetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteAssetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteAssetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteAsset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePackagingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePackagingConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeletePackagingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePackagingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePackagingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePackagingGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePackagingGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeletePackagingGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePackagingGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePackagingGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAssetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAssetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeAssetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAssetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAsset.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePackagingConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePackagingConfigurationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribePackagingConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePackagingConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePackagingConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePackagingGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePackagingGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribePackagingGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePackagingGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePackagingGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAssetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAssetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListAssetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAssetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAssets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPackagingConfigurationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPackagingConfigurationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListPackagingConfigurationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPackagingConfigurationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPackagingConfigurations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListPackagingGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListPackagingGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListPackagingGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListPackagingGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListPackagingGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
