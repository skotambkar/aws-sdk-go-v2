// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/sqs/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddPermissionMarshaler defines marshaler for AddPermission operation
type AddPermissionMarshaler struct {
	Input *types.AddPermissionInput
}

// ChangeMessageVisibilityMarshaler defines marshaler for ChangeMessageVisibility operation
type ChangeMessageVisibilityMarshaler struct {
	Input *types.ChangeMessageVisibilityInput
}

// ChangeMessageVisibilityBatchMarshaler defines marshaler for ChangeMessageVisibilityBatch operation
type ChangeMessageVisibilityBatchMarshaler struct {
	Input *types.ChangeMessageVisibilityBatchInput
}

// CreateQueueMarshaler defines marshaler for CreateQueue operation
type CreateQueueMarshaler struct {
	Input *types.CreateQueueInput
}

// DeleteMessageMarshaler defines marshaler for DeleteMessage operation
type DeleteMessageMarshaler struct {
	Input *types.DeleteMessageInput
}

// DeleteMessageBatchMarshaler defines marshaler for DeleteMessageBatch operation
type DeleteMessageBatchMarshaler struct {
	Input *types.DeleteMessageBatchInput
}

// DeleteQueueMarshaler defines marshaler for DeleteQueue operation
type DeleteQueueMarshaler struct {
	Input *types.DeleteQueueInput
}

// GetQueueAttributesMarshaler defines marshaler for GetQueueAttributes operation
type GetQueueAttributesMarshaler struct {
	Input *types.GetQueueAttributesInput
}

// GetQueueUrlMarshaler defines marshaler for GetQueueUrl operation
type GetQueueUrlMarshaler struct {
	Input *types.GetQueueUrlInput
}

// ListDeadLetterSourceQueuesMarshaler defines marshaler for ListDeadLetterSourceQueues operation
type ListDeadLetterSourceQueuesMarshaler struct {
	Input *types.ListDeadLetterSourceQueuesInput
}

// ListQueueTagsMarshaler defines marshaler for ListQueueTags operation
type ListQueueTagsMarshaler struct {
	Input *types.ListQueueTagsInput
}

// ListQueuesMarshaler defines marshaler for ListQueues operation
type ListQueuesMarshaler struct {
	Input *types.ListQueuesInput
}

// PurgeQueueMarshaler defines marshaler for PurgeQueue operation
type PurgeQueueMarshaler struct {
	Input *types.PurgeQueueInput
}

// ReceiveMessageMarshaler defines marshaler for ReceiveMessage operation
type ReceiveMessageMarshaler struct {
	Input *types.ReceiveMessageInput
}

// RemovePermissionMarshaler defines marshaler for RemovePermission operation
type RemovePermissionMarshaler struct {
	Input *types.RemovePermissionInput
}

// SendMessageMarshaler defines marshaler for SendMessage operation
type SendMessageMarshaler struct {
	Input *types.SendMessageInput
}

// SendMessageBatchMarshaler defines marshaler for SendMessageBatch operation
type SendMessageBatchMarshaler struct {
	Input *types.SendMessageBatchInput
}

// SetQueueAttributesMarshaler defines marshaler for SetQueueAttributes operation
type SetQueueAttributesMarshaler struct {
	Input *types.SetQueueAttributesInput
}

// TagQueueMarshaler defines marshaler for TagQueue operation
type TagQueueMarshaler struct {
	Input *types.TagQueueInput
}

// UntagQueueMarshaler defines marshaler for UntagQueue operation
type UntagQueueMarshaler struct {
	Input *types.UntagQueueInput
}

func MarshalAddPermissionInputShapeAWSQuery(v *types.AddPermissionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalChangeMessageVisibilityInputShapeAWSQuery(v *types.ChangeMessageVisibilityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalChangeMessageVisibilityBatchInputShapeAWSQuery(v *types.ChangeMessageVisibilityBatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateQueueInputShapeAWSQuery(v *types.CreateQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteMessageInputShapeAWSQuery(v *types.DeleteMessageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteMessageBatchInputShapeAWSQuery(v *types.DeleteMessageBatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteQueueInputShapeAWSQuery(v *types.DeleteQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetQueueAttributesInputShapeAWSQuery(v *types.GetQueueAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetQueueUrlInputShapeAWSQuery(v *types.GetQueueUrlInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListDeadLetterSourceQueuesInputShapeAWSQuery(v *types.ListDeadLetterSourceQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListQueueTagsInputShapeAWSQuery(v *types.ListQueueTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalListQueuesInputShapeAWSQuery(v *types.ListQueuesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPurgeQueueInputShapeAWSQuery(v *types.PurgeQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalReceiveMessageInputShapeAWSQuery(v *types.ReceiveMessageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRemovePermissionInputShapeAWSQuery(v *types.RemovePermissionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSendMessageInputShapeAWSQuery(v *types.SendMessageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSendMessageBatchInputShapeAWSQuery(v *types.SendMessageBatchInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalSetQueueAttributesInputShapeAWSQuery(v *types.SetQueueAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalTagQueueInputShapeAWSQuery(v *types.TagQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalUntagQueueInputShapeAWSQuery(v *types.UntagQueueInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AddPermissionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddPermissionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddPermissionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddPermission.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ChangeMessageVisibilityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalChangeMessageVisibilityInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ChangeMessageVisibilityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ChangeMessageVisibility.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ChangeMessageVisibilityBatchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalChangeMessageVisibilityBatchInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ChangeMessageVisibilityBatchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ChangeMessageVisibilityBatch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateQueueInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMessageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMessageInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMessageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMessage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteMessageBatchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteMessageBatchInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteMessageBatchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteMessageBatch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteQueueInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQueueAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQueueAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQueueAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQueueAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQueueUrlMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQueueUrlInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQueueUrlMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQueueUrl.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeadLetterSourceQueuesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeadLetterSourceQueuesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeadLetterSourceQueuesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeadLetterSourceQueues.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListQueueTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListQueueTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListQueueTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListQueueTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListQueuesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListQueuesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListQueuesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListQueues.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurgeQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurgeQueueInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurgeQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurgeQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReceiveMessageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReceiveMessageInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReceiveMessageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReceiveMessage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemovePermissionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemovePermissionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemovePermissionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemovePermission.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendMessageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendMessageInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendMessageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendMessage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendMessageBatchMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendMessageBatchInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendMessageBatchMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendMessageBatch.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetQueueAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetQueueAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetQueueAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetQueueAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagQueueInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagQueueMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagQueueInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagQueueMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagQueue.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
