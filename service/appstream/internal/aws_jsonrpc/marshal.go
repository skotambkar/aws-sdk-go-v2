// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/appstream/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AssociateFleetMarshaler defines marshaler for AssociateFleet operation
type AssociateFleetMarshaler struct {
	Input *types.AssociateFleetInput
}

// BatchAssociateUserStackMarshaler defines marshaler for BatchAssociateUserStack operation
type BatchAssociateUserStackMarshaler struct {
	Input *types.BatchAssociateUserStackInput
}

// BatchDisassociateUserStackMarshaler defines marshaler for BatchDisassociateUserStack operation
type BatchDisassociateUserStackMarshaler struct {
	Input *types.BatchDisassociateUserStackInput
}

// CopyImageMarshaler defines marshaler for CopyImage operation
type CopyImageMarshaler struct {
	Input *types.CopyImageInput
}

// CreateDirectoryConfigMarshaler defines marshaler for CreateDirectoryConfig operation
type CreateDirectoryConfigMarshaler struct {
	Input *types.CreateDirectoryConfigInput
}

// CreateFleetMarshaler defines marshaler for CreateFleet operation
type CreateFleetMarshaler struct {
	Input *types.CreateFleetInput
}

// CreateImageBuilderMarshaler defines marshaler for CreateImageBuilder operation
type CreateImageBuilderMarshaler struct {
	Input *types.CreateImageBuilderInput
}

// CreateImageBuilderStreamingURLMarshaler defines marshaler for CreateImageBuilderStreamingURL operation
type CreateImageBuilderStreamingURLMarshaler struct {
	Input *types.CreateImageBuilderStreamingURLInput
}

// CreateStackMarshaler defines marshaler for CreateStack operation
type CreateStackMarshaler struct {
	Input *types.CreateStackInput
}

// CreateStreamingURLMarshaler defines marshaler for CreateStreamingURL operation
type CreateStreamingURLMarshaler struct {
	Input *types.CreateStreamingURLInput
}

// CreateUsageReportSubscriptionMarshaler defines marshaler for CreateUsageReportSubscription operation
type CreateUsageReportSubscriptionMarshaler struct {
	Input *types.CreateUsageReportSubscriptionInput
}

// CreateUserMarshaler defines marshaler for CreateUser operation
type CreateUserMarshaler struct {
	Input *types.CreateUserInput
}

// DeleteDirectoryConfigMarshaler defines marshaler for DeleteDirectoryConfig operation
type DeleteDirectoryConfigMarshaler struct {
	Input *types.DeleteDirectoryConfigInput
}

// DeleteFleetMarshaler defines marshaler for DeleteFleet operation
type DeleteFleetMarshaler struct {
	Input *types.DeleteFleetInput
}

// DeleteImageMarshaler defines marshaler for DeleteImage operation
type DeleteImageMarshaler struct {
	Input *types.DeleteImageInput
}

// DeleteImageBuilderMarshaler defines marshaler for DeleteImageBuilder operation
type DeleteImageBuilderMarshaler struct {
	Input *types.DeleteImageBuilderInput
}

// DeleteImagePermissionsMarshaler defines marshaler for DeleteImagePermissions operation
type DeleteImagePermissionsMarshaler struct {
	Input *types.DeleteImagePermissionsInput
}

// DeleteStackMarshaler defines marshaler for DeleteStack operation
type DeleteStackMarshaler struct {
	Input *types.DeleteStackInput
}

// DeleteUsageReportSubscriptionMarshaler defines marshaler for DeleteUsageReportSubscription operation
type DeleteUsageReportSubscriptionMarshaler struct {
	Input *types.DeleteUsageReportSubscriptionInput
}

// DeleteUserMarshaler defines marshaler for DeleteUser operation
type DeleteUserMarshaler struct {
	Input *types.DeleteUserInput
}

// DescribeDirectoryConfigsMarshaler defines marshaler for DescribeDirectoryConfigs operation
type DescribeDirectoryConfigsMarshaler struct {
	Input *types.DescribeDirectoryConfigsInput
}

// DescribeFleetsMarshaler defines marshaler for DescribeFleets operation
type DescribeFleetsMarshaler struct {
	Input *types.DescribeFleetsInput
}

// DescribeImageBuildersMarshaler defines marshaler for DescribeImageBuilders operation
type DescribeImageBuildersMarshaler struct {
	Input *types.DescribeImageBuildersInput
}

// DescribeImagePermissionsMarshaler defines marshaler for DescribeImagePermissions operation
type DescribeImagePermissionsMarshaler struct {
	Input *types.DescribeImagePermissionsInput
}

// DescribeImagesMarshaler defines marshaler for DescribeImages operation
type DescribeImagesMarshaler struct {
	Input *types.DescribeImagesInput
}

// DescribeSessionsMarshaler defines marshaler for DescribeSessions operation
type DescribeSessionsMarshaler struct {
	Input *types.DescribeSessionsInput
}

// DescribeStacksMarshaler defines marshaler for DescribeStacks operation
type DescribeStacksMarshaler struct {
	Input *types.DescribeStacksInput
}

// DescribeUsageReportSubscriptionsMarshaler defines marshaler for DescribeUsageReportSubscriptions operation
type DescribeUsageReportSubscriptionsMarshaler struct {
	Input *types.DescribeUsageReportSubscriptionsInput
}

// DescribeUserStackAssociationsMarshaler defines marshaler for DescribeUserStackAssociations operation
type DescribeUserStackAssociationsMarshaler struct {
	Input *types.DescribeUserStackAssociationsInput
}

// DescribeUsersMarshaler defines marshaler for DescribeUsers operation
type DescribeUsersMarshaler struct {
	Input *types.DescribeUsersInput
}

// DisableUserMarshaler defines marshaler for DisableUser operation
type DisableUserMarshaler struct {
	Input *types.DisableUserInput
}

// DisassociateFleetMarshaler defines marshaler for DisassociateFleet operation
type DisassociateFleetMarshaler struct {
	Input *types.DisassociateFleetInput
}

// EnableUserMarshaler defines marshaler for EnableUser operation
type EnableUserMarshaler struct {
	Input *types.EnableUserInput
}

// ExpireSessionMarshaler defines marshaler for ExpireSession operation
type ExpireSessionMarshaler struct {
	Input *types.ExpireSessionInput
}

// ListAssociatedFleetsMarshaler defines marshaler for ListAssociatedFleets operation
type ListAssociatedFleetsMarshaler struct {
	Input *types.ListAssociatedFleetsInput
}

// ListAssociatedStacksMarshaler defines marshaler for ListAssociatedStacks operation
type ListAssociatedStacksMarshaler struct {
	Input *types.ListAssociatedStacksInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// StartFleetMarshaler defines marshaler for StartFleet operation
type StartFleetMarshaler struct {
	Input *types.StartFleetInput
}

// StartImageBuilderMarshaler defines marshaler for StartImageBuilder operation
type StartImageBuilderMarshaler struct {
	Input *types.StartImageBuilderInput
}

// StopFleetMarshaler defines marshaler for StopFleet operation
type StopFleetMarshaler struct {
	Input *types.StopFleetInput
}

// StopImageBuilderMarshaler defines marshaler for StopImageBuilder operation
type StopImageBuilderMarshaler struct {
	Input *types.StopImageBuilderInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateDirectoryConfigMarshaler defines marshaler for UpdateDirectoryConfig operation
type UpdateDirectoryConfigMarshaler struct {
	Input *types.UpdateDirectoryConfigInput
}

// UpdateFleetMarshaler defines marshaler for UpdateFleet operation
type UpdateFleetMarshaler struct {
	Input *types.UpdateFleetInput
}

// UpdateImagePermissionsMarshaler defines marshaler for UpdateImagePermissions operation
type UpdateImagePermissionsMarshaler struct {
	Input *types.UpdateImagePermissionsInput
}

// UpdateStackMarshaler defines marshaler for UpdateStack operation
type UpdateStackMarshaler struct {
	Input *types.UpdateStackInput
}

func MarshalAssociateFleetInputShapeAWSJSON(v *types.AssociateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchAssociateUserStackInputShapeAWSJSON(v *types.BatchAssociateUserStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchDisassociateUserStackInputShapeAWSJSON(v *types.BatchDisassociateUserStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCopyImageInputShapeAWSJSON(v *types.CopyImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDirectoryConfigInputShapeAWSJSON(v *types.CreateDirectoryConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateFleetInputShapeAWSJSON(v *types.CreateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateImageBuilderInputShapeAWSJSON(v *types.CreateImageBuilderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateImageBuilderStreamingURLInputShapeAWSJSON(v *types.CreateImageBuilderStreamingURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateStackInputShapeAWSJSON(v *types.CreateStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateStreamingURLInputShapeAWSJSON(v *types.CreateStreamingURLInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUsageReportSubscriptionInputShapeAWSJSON(v *types.CreateUsageReportSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateUserInputShapeAWSJSON(v *types.CreateUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDirectoryConfigInputShapeAWSJSON(v *types.DeleteDirectoryConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteFleetInputShapeAWSJSON(v *types.DeleteFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteImageInputShapeAWSJSON(v *types.DeleteImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteImageBuilderInputShapeAWSJSON(v *types.DeleteImageBuilderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteImagePermissionsInputShapeAWSJSON(v *types.DeleteImagePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteStackInputShapeAWSJSON(v *types.DeleteStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUsageReportSubscriptionInputShapeAWSJSON(v *types.DeleteUsageReportSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteUserInputShapeAWSJSON(v *types.DeleteUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeDirectoryConfigsInputShapeAWSJSON(v *types.DescribeDirectoryConfigsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeFleetsInputShapeAWSJSON(v *types.DescribeFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeImageBuildersInputShapeAWSJSON(v *types.DescribeImageBuildersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeImagePermissionsInputShapeAWSJSON(v *types.DescribeImagePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeImagesInputShapeAWSJSON(v *types.DescribeImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeSessionsInputShapeAWSJSON(v *types.DescribeSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeStacksInputShapeAWSJSON(v *types.DescribeStacksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUsageReportSubscriptionsInputShapeAWSJSON(v *types.DescribeUsageReportSubscriptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUserStackAssociationsInputShapeAWSJSON(v *types.DescribeUserStackAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeUsersInputShapeAWSJSON(v *types.DescribeUsersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisableUserInputShapeAWSJSON(v *types.DisableUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDisassociateFleetInputShapeAWSJSON(v *types.DisassociateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalEnableUserInputShapeAWSJSON(v *types.EnableUserInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalExpireSessionInputShapeAWSJSON(v *types.ExpireSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAssociatedFleetsInputShapeAWSJSON(v *types.ListAssociatedFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListAssociatedStacksInputShapeAWSJSON(v *types.ListAssociatedStacksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartFleetInputShapeAWSJSON(v *types.StartFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartImageBuilderInputShapeAWSJSON(v *types.StartImageBuilderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopFleetInputShapeAWSJSON(v *types.StopFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopImageBuilderInputShapeAWSJSON(v *types.StopImageBuilderInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDirectoryConfigInputShapeAWSJSON(v *types.UpdateDirectoryConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateFleetInputShapeAWSJSON(v *types.UpdateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateImagePermissionsInputShapeAWSJSON(v *types.UpdateImagePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateStackInputShapeAWSJSON(v *types.UpdateStackInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AssociateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchAssociateUserStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchAssociateUserStackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchAssociateUserStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchAssociateUserStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDisassociateUserStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDisassociateUserStackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDisassociateUserStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDisassociateUserStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyImageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDirectoryConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDirectoryConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDirectoryConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDirectoryConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateImageBuilderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateImageBuilderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateImageBuilderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateImageBuilder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateImageBuilderStreamingURLMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateImageBuilderStreamingURLInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateImageBuilderStreamingURLMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateImageBuilderStreamingURL.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStreamingURLMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStreamingURLInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStreamingURLMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStreamingURL.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUsageReportSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUsageReportSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUsageReportSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUsageReportSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDirectoryConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDirectoryConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDirectoryConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDirectoryConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteImageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteImageBuilderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteImageBuilderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteImageBuilderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteImageBuilder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteImagePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteImagePermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteImagePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteImagePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUsageReportSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUsageReportSubscriptionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUsageReportSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUsageReportSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDirectoryConfigsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDirectoryConfigsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDirectoryConfigsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDirectoryConfigs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImageBuildersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImageBuildersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImageBuildersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImageBuilders.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImagePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImagePermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImagePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImagePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSessionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStacksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStacksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStacksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStacks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUsageReportSubscriptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUsageReportSubscriptionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUsageReportSubscriptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUsageReportSubscriptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUserStackAssociationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUserStackAssociationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUserStackAssociationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUserStackAssociations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeUsersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeUsersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeUsersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeUsers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableUserMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableUserInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableUserMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableUser.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExpireSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExpireSessionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExpireSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExpireSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAssociatedFleetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAssociatedFleetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAssociatedFleetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAssociatedFleets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListAssociatedStacksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListAssociatedStacksInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListAssociatedStacksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListAssociatedStacks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartImageBuilderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartImageBuilderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartImageBuilderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartImageBuilder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopImageBuilderMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopImageBuilderInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopImageBuilderMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopImageBuilder.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDirectoryConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDirectoryConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDirectoryConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDirectoryConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateFleetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateImagePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateImagePermissionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateImagePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateImagePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateStackMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateStackInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateStackMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateStack.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
