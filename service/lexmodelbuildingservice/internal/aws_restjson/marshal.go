// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/lexmodelbuildingservice/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateBotVersionMarshaler defines marshaler for CreateBotVersion operation
type CreateBotVersionMarshaler struct {
	Input *types.CreateBotVersionInput
}

// CreateIntentVersionMarshaler defines marshaler for CreateIntentVersion operation
type CreateIntentVersionMarshaler struct {
	Input *types.CreateIntentVersionInput
}

// CreateSlotTypeVersionMarshaler defines marshaler for CreateSlotTypeVersion operation
type CreateSlotTypeVersionMarshaler struct {
	Input *types.CreateSlotTypeVersionInput
}

// DeleteBotMarshaler defines marshaler for DeleteBot operation
type DeleteBotMarshaler struct {
	Input *types.DeleteBotInput
}

// DeleteBotAliasMarshaler defines marshaler for DeleteBotAlias operation
type DeleteBotAliasMarshaler struct {
	Input *types.DeleteBotAliasInput
}

// DeleteBotChannelAssociationMarshaler defines marshaler for DeleteBotChannelAssociation operation
type DeleteBotChannelAssociationMarshaler struct {
	Input *types.DeleteBotChannelAssociationInput
}

// DeleteBotVersionMarshaler defines marshaler for DeleteBotVersion operation
type DeleteBotVersionMarshaler struct {
	Input *types.DeleteBotVersionInput
}

// DeleteIntentMarshaler defines marshaler for DeleteIntent operation
type DeleteIntentMarshaler struct {
	Input *types.DeleteIntentInput
}

// DeleteIntentVersionMarshaler defines marshaler for DeleteIntentVersion operation
type DeleteIntentVersionMarshaler struct {
	Input *types.DeleteIntentVersionInput
}

// DeleteSlotTypeMarshaler defines marshaler for DeleteSlotType operation
type DeleteSlotTypeMarshaler struct {
	Input *types.DeleteSlotTypeInput
}

// DeleteSlotTypeVersionMarshaler defines marshaler for DeleteSlotTypeVersion operation
type DeleteSlotTypeVersionMarshaler struct {
	Input *types.DeleteSlotTypeVersionInput
}

// DeleteUtterancesMarshaler defines marshaler for DeleteUtterances operation
type DeleteUtterancesMarshaler struct {
	Input *types.DeleteUtterancesInput
}

// GetBotMarshaler defines marshaler for GetBot operation
type GetBotMarshaler struct {
	Input *types.GetBotInput
}

// GetBotAliasMarshaler defines marshaler for GetBotAlias operation
type GetBotAliasMarshaler struct {
	Input *types.GetBotAliasInput
}

// GetBotAliasesMarshaler defines marshaler for GetBotAliases operation
type GetBotAliasesMarshaler struct {
	Input *types.GetBotAliasesInput
}

// GetBotChannelAssociationMarshaler defines marshaler for GetBotChannelAssociation operation
type GetBotChannelAssociationMarshaler struct {
	Input *types.GetBotChannelAssociationInput
}

// GetBotChannelAssociationsMarshaler defines marshaler for GetBotChannelAssociations operation
type GetBotChannelAssociationsMarshaler struct {
	Input *types.GetBotChannelAssociationsInput
}

// GetBotVersionsMarshaler defines marshaler for GetBotVersions operation
type GetBotVersionsMarshaler struct {
	Input *types.GetBotVersionsInput
}

// GetBotsMarshaler defines marshaler for GetBots operation
type GetBotsMarshaler struct {
	Input *types.GetBotsInput
}

// GetBuiltinIntentMarshaler defines marshaler for GetBuiltinIntent operation
type GetBuiltinIntentMarshaler struct {
	Input *types.GetBuiltinIntentInput
}

// GetBuiltinIntentsMarshaler defines marshaler for GetBuiltinIntents operation
type GetBuiltinIntentsMarshaler struct {
	Input *types.GetBuiltinIntentsInput
}

// GetBuiltinSlotTypesMarshaler defines marshaler for GetBuiltinSlotTypes operation
type GetBuiltinSlotTypesMarshaler struct {
	Input *types.GetBuiltinSlotTypesInput
}

// GetExportMarshaler defines marshaler for GetExport operation
type GetExportMarshaler struct {
	Input *types.GetExportInput
}

// GetImportMarshaler defines marshaler for GetImport operation
type GetImportMarshaler struct {
	Input *types.GetImportInput
}

// GetIntentMarshaler defines marshaler for GetIntent operation
type GetIntentMarshaler struct {
	Input *types.GetIntentInput
}

// GetIntentVersionsMarshaler defines marshaler for GetIntentVersions operation
type GetIntentVersionsMarshaler struct {
	Input *types.GetIntentVersionsInput
}

// GetIntentsMarshaler defines marshaler for GetIntents operation
type GetIntentsMarshaler struct {
	Input *types.GetIntentsInput
}

// GetSlotTypeMarshaler defines marshaler for GetSlotType operation
type GetSlotTypeMarshaler struct {
	Input *types.GetSlotTypeInput
}

// GetSlotTypeVersionsMarshaler defines marshaler for GetSlotTypeVersions operation
type GetSlotTypeVersionsMarshaler struct {
	Input *types.GetSlotTypeVersionsInput
}

// GetSlotTypesMarshaler defines marshaler for GetSlotTypes operation
type GetSlotTypesMarshaler struct {
	Input *types.GetSlotTypesInput
}

// GetUtterancesViewMarshaler defines marshaler for GetUtterancesView operation
type GetUtterancesViewMarshaler struct {
	Input *types.GetUtterancesViewInput
}

// PutBotMarshaler defines marshaler for PutBot operation
type PutBotMarshaler struct {
	Input *types.PutBotInput
}

// PutBotAliasMarshaler defines marshaler for PutBotAlias operation
type PutBotAliasMarshaler struct {
	Input *types.PutBotAliasInput
}

// PutIntentMarshaler defines marshaler for PutIntent operation
type PutIntentMarshaler struct {
	Input *types.PutIntentInput
}

// PutSlotTypeMarshaler defines marshaler for PutSlotType operation
type PutSlotTypeMarshaler struct {
	Input *types.PutSlotTypeInput
}

// StartImportMarshaler defines marshaler for StartImport operation
type StartImportMarshaler struct {
	Input *types.StartImportInput
}

func MarshalCreateBotVersionInputShapeAWSREST(v *types.CreateBotVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateBotVersionInputShapeAWSJSON(v *types.CreateBotVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateIntentVersionInputShapeAWSREST(v *types.CreateIntentVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateIntentVersionInputShapeAWSJSON(v *types.CreateIntentVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSlotTypeVersionInputShapeAWSREST(v *types.CreateSlotTypeVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSlotTypeVersionInputShapeAWSJSON(v *types.CreateSlotTypeVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBotInputShapeAWSREST(v *types.DeleteBotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBotInputShapeAWSJSON(v *types.DeleteBotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBotAliasInputShapeAWSREST(v *types.DeleteBotAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBotAliasInputShapeAWSJSON(v *types.DeleteBotAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBotChannelAssociationInputShapeAWSREST(v *types.DeleteBotChannelAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBotChannelAssociationInputShapeAWSJSON(v *types.DeleteBotChannelAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBotVersionInputShapeAWSREST(v *types.DeleteBotVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBotVersionInputShapeAWSJSON(v *types.DeleteBotVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteIntentInputShapeAWSREST(v *types.DeleteIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteIntentInputShapeAWSJSON(v *types.DeleteIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteIntentVersionInputShapeAWSREST(v *types.DeleteIntentVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteIntentVersionInputShapeAWSJSON(v *types.DeleteIntentVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSlotTypeInputShapeAWSREST(v *types.DeleteSlotTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSlotTypeInputShapeAWSJSON(v *types.DeleteSlotTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSlotTypeVersionInputShapeAWSREST(v *types.DeleteSlotTypeVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSlotTypeVersionInputShapeAWSJSON(v *types.DeleteSlotTypeVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteUtterancesInputShapeAWSREST(v *types.DeleteUtterancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteUtterancesInputShapeAWSJSON(v *types.DeleteUtterancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotInputShapeAWSREST(v *types.GetBotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotInputShapeAWSJSON(v *types.GetBotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotAliasInputShapeAWSREST(v *types.GetBotAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotAliasInputShapeAWSJSON(v *types.GetBotAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotAliasesInputShapeAWSREST(v *types.GetBotAliasesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotAliasesInputShapeAWSJSON(v *types.GetBotAliasesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotChannelAssociationInputShapeAWSREST(v *types.GetBotChannelAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotChannelAssociationInputShapeAWSJSON(v *types.GetBotChannelAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotChannelAssociationsInputShapeAWSREST(v *types.GetBotChannelAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotChannelAssociationsInputShapeAWSJSON(v *types.GetBotChannelAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotVersionsInputShapeAWSREST(v *types.GetBotVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotVersionsInputShapeAWSJSON(v *types.GetBotVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBotsInputShapeAWSREST(v *types.GetBotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBotsInputShapeAWSJSON(v *types.GetBotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBuiltinIntentInputShapeAWSREST(v *types.GetBuiltinIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBuiltinIntentInputShapeAWSJSON(v *types.GetBuiltinIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBuiltinIntentsInputShapeAWSREST(v *types.GetBuiltinIntentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBuiltinIntentsInputShapeAWSJSON(v *types.GetBuiltinIntentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBuiltinSlotTypesInputShapeAWSREST(v *types.GetBuiltinSlotTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBuiltinSlotTypesInputShapeAWSJSON(v *types.GetBuiltinSlotTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetExportInputShapeAWSREST(v *types.GetExportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetExportInputShapeAWSJSON(v *types.GetExportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetImportInputShapeAWSREST(v *types.GetImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetImportInputShapeAWSJSON(v *types.GetImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIntentInputShapeAWSREST(v *types.GetIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIntentInputShapeAWSJSON(v *types.GetIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIntentVersionsInputShapeAWSREST(v *types.GetIntentVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIntentVersionsInputShapeAWSJSON(v *types.GetIntentVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetIntentsInputShapeAWSREST(v *types.GetIntentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetIntentsInputShapeAWSJSON(v *types.GetIntentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSlotTypeInputShapeAWSREST(v *types.GetSlotTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSlotTypeInputShapeAWSJSON(v *types.GetSlotTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSlotTypeVersionsInputShapeAWSREST(v *types.GetSlotTypeVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSlotTypeVersionsInputShapeAWSJSON(v *types.GetSlotTypeVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSlotTypesInputShapeAWSREST(v *types.GetSlotTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSlotTypesInputShapeAWSJSON(v *types.GetSlotTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetUtterancesViewInputShapeAWSREST(v *types.GetUtterancesViewInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetUtterancesViewInputShapeAWSJSON(v *types.GetUtterancesViewInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutBotInputShapeAWSREST(v *types.PutBotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutBotInputShapeAWSJSON(v *types.PutBotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutBotAliasInputShapeAWSREST(v *types.PutBotAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutBotAliasInputShapeAWSJSON(v *types.PutBotAliasInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutIntentInputShapeAWSREST(v *types.PutIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutIntentInputShapeAWSJSON(v *types.PutIntentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutSlotTypeInputShapeAWSREST(v *types.PutSlotTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutSlotTypeInputShapeAWSJSON(v *types.PutSlotTypeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartImportInputShapeAWSREST(v *types.StartImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartImportInputShapeAWSJSON(v *types.StartImportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateBotVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBotVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateBotVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBotVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBotVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateIntentVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateIntentVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateIntentVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateIntentVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateIntentVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSlotTypeVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSlotTypeVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSlotTypeVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSlotTypeVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSlotTypeVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBotAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBotAliasInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBotAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBotAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBotAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBotChannelAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBotChannelAssociationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBotChannelAssociationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBotChannelAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBotChannelAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBotVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBotVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBotVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBotVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBotVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteIntentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteIntentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteIntentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteIntentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteIntent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteIntentVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteIntentVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteIntentVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteIntentVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteIntentVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSlotTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSlotTypeInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSlotTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSlotTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSlotType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSlotTypeVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSlotTypeVersionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSlotTypeVersionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSlotTypeVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSlotTypeVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteUtterancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteUtterancesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteUtterancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteUtterancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteUtterances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotAliasInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBotAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotAliasesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotAliasesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotAliasesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotAliasesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBotAliases.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotChannelAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotChannelAssociationInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotChannelAssociationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotChannelAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBotChannelAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotChannelAssociationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotChannelAssociationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotChannelAssociationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotChannelAssociationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBotChannelAssociations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBotVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBotsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBotsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBuiltinIntentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBuiltinIntentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBuiltinIntentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBuiltinIntentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBuiltinIntent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBuiltinIntentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBuiltinIntentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBuiltinIntentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBuiltinIntentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBuiltinIntents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBuiltinSlotTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBuiltinSlotTypesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBuiltinSlotTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBuiltinSlotTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBuiltinSlotTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetExportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetExportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetExportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetExportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetExport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetImportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetImportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetImportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetImportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetImport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIntentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIntentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIntentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIntentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIntent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIntentVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIntentVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIntentVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIntentVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIntentVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetIntentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetIntentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetIntentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetIntentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetIntents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSlotTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSlotTypeInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSlotTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSlotTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSlotType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSlotTypeVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSlotTypeVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSlotTypeVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSlotTypeVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSlotTypeVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSlotTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSlotTypesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSlotTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSlotTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSlotTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetUtterancesViewMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetUtterancesViewInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetUtterancesViewInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetUtterancesViewMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetUtterancesView.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutBotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutBotInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutBotInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutBotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutBot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutBotAliasMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutBotAliasInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutBotAliasInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutBotAliasMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutBotAlias.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutIntentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutIntentInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutIntentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutIntentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutIntent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutSlotTypeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutSlotTypeInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutSlotTypeInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutSlotTypeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutSlotType.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartImportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartImportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartImportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartImportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartImport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
