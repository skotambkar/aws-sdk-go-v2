// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/codedeploy/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AddTagsToOnPremisesInstancesMarshaler defines marshaler for AddTagsToOnPremisesInstances operation
type AddTagsToOnPremisesInstancesMarshaler struct {
	Input *types.AddTagsToOnPremisesInstancesInput
}

// BatchGetApplicationRevisionsMarshaler defines marshaler for BatchGetApplicationRevisions operation
type BatchGetApplicationRevisionsMarshaler struct {
	Input *types.BatchGetApplicationRevisionsInput
}

// BatchGetApplicationsMarshaler defines marshaler for BatchGetApplications operation
type BatchGetApplicationsMarshaler struct {
	Input *types.BatchGetApplicationsInput
}

// BatchGetDeploymentGroupsMarshaler defines marshaler for BatchGetDeploymentGroups operation
type BatchGetDeploymentGroupsMarshaler struct {
	Input *types.BatchGetDeploymentGroupsInput
}

// BatchGetDeploymentInstancesMarshaler defines marshaler for BatchGetDeploymentInstances operation
type BatchGetDeploymentInstancesMarshaler struct {
	Input *types.BatchGetDeploymentInstancesInput
}

// BatchGetDeploymentTargetsMarshaler defines marshaler for BatchGetDeploymentTargets operation
type BatchGetDeploymentTargetsMarshaler struct {
	Input *types.BatchGetDeploymentTargetsInput
}

// BatchGetDeploymentsMarshaler defines marshaler for BatchGetDeployments operation
type BatchGetDeploymentsMarshaler struct {
	Input *types.BatchGetDeploymentsInput
}

// BatchGetOnPremisesInstancesMarshaler defines marshaler for BatchGetOnPremisesInstances operation
type BatchGetOnPremisesInstancesMarshaler struct {
	Input *types.BatchGetOnPremisesInstancesInput
}

// ContinueDeploymentMarshaler defines marshaler for ContinueDeployment operation
type ContinueDeploymentMarshaler struct {
	Input *types.ContinueDeploymentInput
}

// CreateApplicationMarshaler defines marshaler for CreateApplication operation
type CreateApplicationMarshaler struct {
	Input *types.CreateApplicationInput
}

// CreateDeploymentMarshaler defines marshaler for CreateDeployment operation
type CreateDeploymentMarshaler struct {
	Input *types.CreateDeploymentInput
}

// CreateDeploymentConfigMarshaler defines marshaler for CreateDeploymentConfig operation
type CreateDeploymentConfigMarshaler struct {
	Input *types.CreateDeploymentConfigInput
}

// CreateDeploymentGroupMarshaler defines marshaler for CreateDeploymentGroup operation
type CreateDeploymentGroupMarshaler struct {
	Input *types.CreateDeploymentGroupInput
}

// DeleteApplicationMarshaler defines marshaler for DeleteApplication operation
type DeleteApplicationMarshaler struct {
	Input *types.DeleteApplicationInput
}

// DeleteDeploymentConfigMarshaler defines marshaler for DeleteDeploymentConfig operation
type DeleteDeploymentConfigMarshaler struct {
	Input *types.DeleteDeploymentConfigInput
}

// DeleteDeploymentGroupMarshaler defines marshaler for DeleteDeploymentGroup operation
type DeleteDeploymentGroupMarshaler struct {
	Input *types.DeleteDeploymentGroupInput
}

// DeleteGitHubAccountTokenMarshaler defines marshaler for DeleteGitHubAccountToken operation
type DeleteGitHubAccountTokenMarshaler struct {
	Input *types.DeleteGitHubAccountTokenInput
}

// DeregisterOnPremisesInstanceMarshaler defines marshaler for DeregisterOnPremisesInstance operation
type DeregisterOnPremisesInstanceMarshaler struct {
	Input *types.DeregisterOnPremisesInstanceInput
}

// GetApplicationMarshaler defines marshaler for GetApplication operation
type GetApplicationMarshaler struct {
	Input *types.GetApplicationInput
}

// GetApplicationRevisionMarshaler defines marshaler for GetApplicationRevision operation
type GetApplicationRevisionMarshaler struct {
	Input *types.GetApplicationRevisionInput
}

// GetDeploymentMarshaler defines marshaler for GetDeployment operation
type GetDeploymentMarshaler struct {
	Input *types.GetDeploymentInput
}

// GetDeploymentConfigMarshaler defines marshaler for GetDeploymentConfig operation
type GetDeploymentConfigMarshaler struct {
	Input *types.GetDeploymentConfigInput
}

// GetDeploymentGroupMarshaler defines marshaler for GetDeploymentGroup operation
type GetDeploymentGroupMarshaler struct {
	Input *types.GetDeploymentGroupInput
}

// GetDeploymentInstanceMarshaler defines marshaler for GetDeploymentInstance operation
type GetDeploymentInstanceMarshaler struct {
	Input *types.GetDeploymentInstanceInput
}

// GetDeploymentTargetMarshaler defines marshaler for GetDeploymentTarget operation
type GetDeploymentTargetMarshaler struct {
	Input *types.GetDeploymentTargetInput
}

// GetOnPremisesInstanceMarshaler defines marshaler for GetOnPremisesInstance operation
type GetOnPremisesInstanceMarshaler struct {
	Input *types.GetOnPremisesInstanceInput
}

// ListApplicationRevisionsMarshaler defines marshaler for ListApplicationRevisions operation
type ListApplicationRevisionsMarshaler struct {
	Input *types.ListApplicationRevisionsInput
}

// ListApplicationsMarshaler defines marshaler for ListApplications operation
type ListApplicationsMarshaler struct {
	Input *types.ListApplicationsInput
}

// ListDeploymentConfigsMarshaler defines marshaler for ListDeploymentConfigs operation
type ListDeploymentConfigsMarshaler struct {
	Input *types.ListDeploymentConfigsInput
}

// ListDeploymentGroupsMarshaler defines marshaler for ListDeploymentGroups operation
type ListDeploymentGroupsMarshaler struct {
	Input *types.ListDeploymentGroupsInput
}

// ListDeploymentInstancesMarshaler defines marshaler for ListDeploymentInstances operation
type ListDeploymentInstancesMarshaler struct {
	Input *types.ListDeploymentInstancesInput
}

// ListDeploymentTargetsMarshaler defines marshaler for ListDeploymentTargets operation
type ListDeploymentTargetsMarshaler struct {
	Input *types.ListDeploymentTargetsInput
}

// ListDeploymentsMarshaler defines marshaler for ListDeployments operation
type ListDeploymentsMarshaler struct {
	Input *types.ListDeploymentsInput
}

// ListGitHubAccountTokenNamesMarshaler defines marshaler for ListGitHubAccountTokenNames operation
type ListGitHubAccountTokenNamesMarshaler struct {
	Input *types.ListGitHubAccountTokenNamesInput
}

// ListOnPremisesInstancesMarshaler defines marshaler for ListOnPremisesInstances operation
type ListOnPremisesInstancesMarshaler struct {
	Input *types.ListOnPremisesInstancesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PutLifecycleEventHookExecutionStatusMarshaler defines marshaler for PutLifecycleEventHookExecutionStatus operation
type PutLifecycleEventHookExecutionStatusMarshaler struct {
	Input *types.PutLifecycleEventHookExecutionStatusInput
}

// RegisterApplicationRevisionMarshaler defines marshaler for RegisterApplicationRevision operation
type RegisterApplicationRevisionMarshaler struct {
	Input *types.RegisterApplicationRevisionInput
}

// RegisterOnPremisesInstanceMarshaler defines marshaler for RegisterOnPremisesInstance operation
type RegisterOnPremisesInstanceMarshaler struct {
	Input *types.RegisterOnPremisesInstanceInput
}

// RemoveTagsFromOnPremisesInstancesMarshaler defines marshaler for RemoveTagsFromOnPremisesInstances operation
type RemoveTagsFromOnPremisesInstancesMarshaler struct {
	Input *types.RemoveTagsFromOnPremisesInstancesInput
}

// SkipWaitTimeForInstanceTerminationMarshaler defines marshaler for SkipWaitTimeForInstanceTermination operation
type SkipWaitTimeForInstanceTerminationMarshaler struct {
	Input *types.SkipWaitTimeForInstanceTerminationInput
}

// StopDeploymentMarshaler defines marshaler for StopDeployment operation
type StopDeploymentMarshaler struct {
	Input *types.StopDeploymentInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateApplicationMarshaler defines marshaler for UpdateApplication operation
type UpdateApplicationMarshaler struct {
	Input *types.UpdateApplicationInput
}

// UpdateDeploymentGroupMarshaler defines marshaler for UpdateDeploymentGroup operation
type UpdateDeploymentGroupMarshaler struct {
	Input *types.UpdateDeploymentGroupInput
}

func MarshalAddTagsToOnPremisesInstancesInputShapeAWSJSON(v *types.AddTagsToOnPremisesInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetApplicationRevisionsInputShapeAWSJSON(v *types.BatchGetApplicationRevisionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetApplicationsInputShapeAWSJSON(v *types.BatchGetApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetDeploymentGroupsInputShapeAWSJSON(v *types.BatchGetDeploymentGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetDeploymentInstancesInputShapeAWSJSON(v *types.BatchGetDeploymentInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetDeploymentTargetsInputShapeAWSJSON(v *types.BatchGetDeploymentTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetDeploymentsInputShapeAWSJSON(v *types.BatchGetDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetOnPremisesInstancesInputShapeAWSJSON(v *types.BatchGetOnPremisesInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalContinueDeploymentInputShapeAWSJSON(v *types.ContinueDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateApplicationInputShapeAWSJSON(v *types.CreateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDeploymentInputShapeAWSJSON(v *types.CreateDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDeploymentConfigInputShapeAWSJSON(v *types.CreateDeploymentConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateDeploymentGroupInputShapeAWSJSON(v *types.CreateDeploymentGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationInputShapeAWSJSON(v *types.DeleteApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDeploymentConfigInputShapeAWSJSON(v *types.DeleteDeploymentConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteDeploymentGroupInputShapeAWSJSON(v *types.DeleteDeploymentGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteGitHubAccountTokenInputShapeAWSJSON(v *types.DeleteGitHubAccountTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeregisterOnPremisesInstanceInputShapeAWSJSON(v *types.DeregisterOnPremisesInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetApplicationInputShapeAWSJSON(v *types.GetApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetApplicationRevisionInputShapeAWSJSON(v *types.GetApplicationRevisionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeploymentInputShapeAWSJSON(v *types.GetDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeploymentConfigInputShapeAWSJSON(v *types.GetDeploymentConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeploymentGroupInputShapeAWSJSON(v *types.GetDeploymentGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeploymentInstanceInputShapeAWSJSON(v *types.GetDeploymentInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDeploymentTargetInputShapeAWSJSON(v *types.GetDeploymentTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetOnPremisesInstanceInputShapeAWSJSON(v *types.GetOnPremisesInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListApplicationRevisionsInputShapeAWSJSON(v *types.ListApplicationRevisionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListApplicationsInputShapeAWSJSON(v *types.ListApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeploymentConfigsInputShapeAWSJSON(v *types.ListDeploymentConfigsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeploymentGroupsInputShapeAWSJSON(v *types.ListDeploymentGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeploymentInstancesInputShapeAWSJSON(v *types.ListDeploymentInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeploymentTargetsInputShapeAWSJSON(v *types.ListDeploymentTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListDeploymentsInputShapeAWSJSON(v *types.ListDeploymentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListGitHubAccountTokenNamesInputShapeAWSJSON(v *types.ListGitHubAccountTokenNamesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListOnPremisesInstancesInputShapeAWSJSON(v *types.ListOnPremisesInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutLifecycleEventHookExecutionStatusInputShapeAWSJSON(v *types.PutLifecycleEventHookExecutionStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterApplicationRevisionInputShapeAWSJSON(v *types.RegisterApplicationRevisionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterOnPremisesInstanceInputShapeAWSJSON(v *types.RegisterOnPremisesInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRemoveTagsFromOnPremisesInstancesInputShapeAWSJSON(v *types.RemoveTagsFromOnPremisesInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSkipWaitTimeForInstanceTerminationInputShapeAWSJSON(v *types.SkipWaitTimeForInstanceTerminationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopDeploymentInputShapeAWSJSON(v *types.StopDeploymentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateApplicationInputShapeAWSJSON(v *types.UpdateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateDeploymentGroupInputShapeAWSJSON(v *types.UpdateDeploymentGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m AddTagsToOnPremisesInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAddTagsToOnPremisesInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AddTagsToOnPremisesInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AddTagsToOnPremisesInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetApplicationRevisionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetApplicationRevisionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetApplicationRevisionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetApplicationRevisions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetDeploymentGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetDeploymentGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetDeploymentGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetDeploymentGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetDeploymentInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetDeploymentInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetDeploymentInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetDeploymentInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetDeploymentTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetDeploymentTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetDeploymentTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetDeploymentTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetDeploymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetDeploymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetDeploymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetDeployments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetOnPremisesInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetOnPremisesInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetOnPremisesInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetOnPremisesInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ContinueDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalContinueDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ContinueDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ContinueDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeploymentConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDeploymentGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDeploymentGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDeploymentGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDeploymentGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDeploymentConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDeploymentConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDeploymentConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDeploymentConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDeploymentGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDeploymentGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDeploymentGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDeploymentGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGitHubAccountTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGitHubAccountTokenInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGitHubAccountTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGitHubAccountToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterOnPremisesInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterOnPremisesInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterOnPremisesInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterOnPremisesInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetApplicationRevisionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetApplicationRevisionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetApplicationRevisionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetApplicationRevision.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeploymentConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeploymentGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeploymentInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDeploymentTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDeploymentTargetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDeploymentTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDeploymentTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetOnPremisesInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetOnPremisesInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetOnPremisesInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetOnPremisesInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationRevisionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationRevisionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationRevisionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplicationRevisions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentConfigsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentConfigsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentConfigsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeploymentConfigs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeploymentGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeploymentInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeploymentTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListDeploymentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListDeploymentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListDeploymentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListDeployments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListGitHubAccountTokenNamesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListGitHubAccountTokenNamesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListGitHubAccountTokenNamesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListGitHubAccountTokenNames.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListOnPremisesInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListOnPremisesInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListOnPremisesInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListOnPremisesInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutLifecycleEventHookExecutionStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutLifecycleEventHookExecutionStatusInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutLifecycleEventHookExecutionStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutLifecycleEventHookExecutionStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterApplicationRevisionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterApplicationRevisionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterApplicationRevisionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterApplicationRevision.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterOnPremisesInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterOnPremisesInstanceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterOnPremisesInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterOnPremisesInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RemoveTagsFromOnPremisesInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRemoveTagsFromOnPremisesInstancesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RemoveTagsFromOnPremisesInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RemoveTagsFromOnPremisesInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SkipWaitTimeForInstanceTerminationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSkipWaitTimeForInstanceTerminationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SkipWaitTimeForInstanceTerminationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SkipWaitTimeForInstanceTermination.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopDeploymentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopDeploymentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopDeploymentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopDeployment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateDeploymentGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateDeploymentGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateDeploymentGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateDeploymentGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
