// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/marketplacemetering/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchMeterUsageMarshaler defines marshaler for BatchMeterUsage operation
type BatchMeterUsageMarshaler struct {
	Input *types.BatchMeterUsageInput
}

// MeterUsageMarshaler defines marshaler for MeterUsage operation
type MeterUsageMarshaler struct {
	Input *types.MeterUsageInput
}

// RegisterUsageMarshaler defines marshaler for RegisterUsage operation
type RegisterUsageMarshaler struct {
	Input *types.RegisterUsageInput
}

// ResolveCustomerMarshaler defines marshaler for ResolveCustomer operation
type ResolveCustomerMarshaler struct {
	Input *types.ResolveCustomerInput
}

func MarshalBatchMeterUsageInputShapeAWSJSON(v *types.BatchMeterUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalMeterUsageInputShapeAWSJSON(v *types.MeterUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRegisterUsageInputShapeAWSJSON(v *types.RegisterUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalResolveCustomerInputShapeAWSJSON(v *types.ResolveCustomerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m BatchMeterUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchMeterUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchMeterUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchMeterUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MeterUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMeterUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MeterUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MeterUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterUsageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResolveCustomerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResolveCustomerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResolveCustomerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResolveCustomer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
