// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/ecr/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchCheckLayerAvailabilityMarshaler defines marshaler for BatchCheckLayerAvailability operation
type BatchCheckLayerAvailabilityMarshaler struct {
	Input *types.BatchCheckLayerAvailabilityInput
}

// BatchDeleteImageMarshaler defines marshaler for BatchDeleteImage operation
type BatchDeleteImageMarshaler struct {
	Input *types.BatchDeleteImageInput
}

// BatchGetImageMarshaler defines marshaler for BatchGetImage operation
type BatchGetImageMarshaler struct {
	Input *types.BatchGetImageInput
}

// CompleteLayerUploadMarshaler defines marshaler for CompleteLayerUpload operation
type CompleteLayerUploadMarshaler struct {
	Input *types.CompleteLayerUploadInput
}

// CreateRepositoryMarshaler defines marshaler for CreateRepository operation
type CreateRepositoryMarshaler struct {
	Input *types.CreateRepositoryInput
}

// DeleteLifecyclePolicyMarshaler defines marshaler for DeleteLifecyclePolicy operation
type DeleteLifecyclePolicyMarshaler struct {
	Input *types.DeleteLifecyclePolicyInput
}

// DeleteRepositoryMarshaler defines marshaler for DeleteRepository operation
type DeleteRepositoryMarshaler struct {
	Input *types.DeleteRepositoryInput
}

// DeleteRepositoryPolicyMarshaler defines marshaler for DeleteRepositoryPolicy operation
type DeleteRepositoryPolicyMarshaler struct {
	Input *types.DeleteRepositoryPolicyInput
}

// DescribeImageScanFindingsMarshaler defines marshaler for DescribeImageScanFindings operation
type DescribeImageScanFindingsMarshaler struct {
	Input *types.DescribeImageScanFindingsInput
}

// DescribeImagesMarshaler defines marshaler for DescribeImages operation
type DescribeImagesMarshaler struct {
	Input *types.DescribeImagesInput
}

// DescribeRepositoriesMarshaler defines marshaler for DescribeRepositories operation
type DescribeRepositoriesMarshaler struct {
	Input *types.DescribeRepositoriesInput
}

// GetAuthorizationTokenMarshaler defines marshaler for GetAuthorizationToken operation
type GetAuthorizationTokenMarshaler struct {
	Input *types.GetAuthorizationTokenInput
}

// GetDownloadUrlForLayerMarshaler defines marshaler for GetDownloadUrlForLayer operation
type GetDownloadUrlForLayerMarshaler struct {
	Input *types.GetDownloadUrlForLayerInput
}

// GetLifecyclePolicyMarshaler defines marshaler for GetLifecyclePolicy operation
type GetLifecyclePolicyMarshaler struct {
	Input *types.GetLifecyclePolicyInput
}

// GetLifecyclePolicyPreviewMarshaler defines marshaler for GetLifecyclePolicyPreview operation
type GetLifecyclePolicyPreviewMarshaler struct {
	Input *types.GetLifecyclePolicyPreviewInput
}

// GetRepositoryPolicyMarshaler defines marshaler for GetRepositoryPolicy operation
type GetRepositoryPolicyMarshaler struct {
	Input *types.GetRepositoryPolicyInput
}

// InitiateLayerUploadMarshaler defines marshaler for InitiateLayerUpload operation
type InitiateLayerUploadMarshaler struct {
	Input *types.InitiateLayerUploadInput
}

// ListImagesMarshaler defines marshaler for ListImages operation
type ListImagesMarshaler struct {
	Input *types.ListImagesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PutImageMarshaler defines marshaler for PutImage operation
type PutImageMarshaler struct {
	Input *types.PutImageInput
}

// PutImageScanningConfigurationMarshaler defines marshaler for PutImageScanningConfiguration operation
type PutImageScanningConfigurationMarshaler struct {
	Input *types.PutImageScanningConfigurationInput
}

// PutImageTagMutabilityMarshaler defines marshaler for PutImageTagMutability operation
type PutImageTagMutabilityMarshaler struct {
	Input *types.PutImageTagMutabilityInput
}

// PutLifecyclePolicyMarshaler defines marshaler for PutLifecyclePolicy operation
type PutLifecyclePolicyMarshaler struct {
	Input *types.PutLifecyclePolicyInput
}

// SetRepositoryPolicyMarshaler defines marshaler for SetRepositoryPolicy operation
type SetRepositoryPolicyMarshaler struct {
	Input *types.SetRepositoryPolicyInput
}

// StartImageScanMarshaler defines marshaler for StartImageScan operation
type StartImageScanMarshaler struct {
	Input *types.StartImageScanInput
}

// StartLifecyclePolicyPreviewMarshaler defines marshaler for StartLifecyclePolicyPreview operation
type StartLifecyclePolicyPreviewMarshaler struct {
	Input *types.StartLifecyclePolicyPreviewInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UploadLayerPartMarshaler defines marshaler for UploadLayerPart operation
type UploadLayerPartMarshaler struct {
	Input *types.UploadLayerPartInput
}

func MarshalBatchCheckLayerAvailabilityInputShapeAWSJSON(v *types.BatchCheckLayerAvailabilityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchDeleteImageInputShapeAWSJSON(v *types.BatchDeleteImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetImageInputShapeAWSJSON(v *types.BatchGetImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCompleteLayerUploadInputShapeAWSJSON(v *types.CompleteLayerUploadInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateRepositoryInputShapeAWSJSON(v *types.CreateRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteLifecyclePolicyInputShapeAWSJSON(v *types.DeleteLifecyclePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRepositoryInputShapeAWSJSON(v *types.DeleteRepositoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteRepositoryPolicyInputShapeAWSJSON(v *types.DeleteRepositoryPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeImageScanFindingsInputShapeAWSJSON(v *types.DescribeImageScanFindingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeImagesInputShapeAWSJSON(v *types.DescribeImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeRepositoriesInputShapeAWSJSON(v *types.DescribeRepositoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetAuthorizationTokenInputShapeAWSJSON(v *types.GetAuthorizationTokenInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetDownloadUrlForLayerInputShapeAWSJSON(v *types.GetDownloadUrlForLayerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLifecyclePolicyInputShapeAWSJSON(v *types.GetLifecyclePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetLifecyclePolicyPreviewInputShapeAWSJSON(v *types.GetLifecyclePolicyPreviewInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetRepositoryPolicyInputShapeAWSJSON(v *types.GetRepositoryPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalInitiateLayerUploadInputShapeAWSJSON(v *types.InitiateLayerUploadInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListImagesInputShapeAWSJSON(v *types.ListImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutImageInputShapeAWSJSON(v *types.PutImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutImageScanningConfigurationInputShapeAWSJSON(v *types.PutImageScanningConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutImageTagMutabilityInputShapeAWSJSON(v *types.PutImageTagMutabilityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalPutLifecyclePolicyInputShapeAWSJSON(v *types.PutLifecyclePolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSetRepositoryPolicyInputShapeAWSJSON(v *types.SetRepositoryPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartImageScanInputShapeAWSJSON(v *types.StartImageScanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartLifecyclePolicyPreviewInputShapeAWSJSON(v *types.StartLifecyclePolicyPreviewInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUploadLayerPartInputShapeAWSJSON(v *types.UploadLayerPartInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m BatchCheckLayerAvailabilityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchCheckLayerAvailabilityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchCheckLayerAvailabilityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchCheckLayerAvailability.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDeleteImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDeleteImageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDeleteImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDeleteImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetImageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CompleteLayerUploadMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCompleteLayerUploadInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CompleteLayerUploadMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CompleteLayerUpload.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLifecyclePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLifecyclePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLifecyclePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLifecyclePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRepositoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRepositoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRepositoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRepository.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRepositoryPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRepositoryPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRepositoryPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRepositoryPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImageScanFindingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImageScanFindingsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImageScanFindingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImageScanFindings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRepositoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRepositoriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRepositoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRepositories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetAuthorizationTokenMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetAuthorizationTokenInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetAuthorizationTokenMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetAuthorizationToken.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDownloadUrlForLayerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDownloadUrlForLayerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDownloadUrlForLayerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDownloadUrlForLayer.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLifecyclePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLifecyclePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLifecyclePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLifecyclePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLifecyclePolicyPreviewMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLifecyclePolicyPreviewInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLifecyclePolicyPreviewMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLifecyclePolicyPreview.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRepositoryPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRepositoryPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRepositoryPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRepositoryPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InitiateLayerUploadMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInitiateLayerUploadInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InitiateLayerUploadMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InitiateLayerUpload.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListImagesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutImageInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutImageScanningConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutImageScanningConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutImageScanningConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutImageScanningConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutImageTagMutabilityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutImageTagMutabilityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutImageTagMutabilityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutImageTagMutability.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutLifecyclePolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutLifecyclePolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutLifecyclePolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutLifecyclePolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SetRepositoryPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSetRepositoryPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SetRepositoryPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SetRepositoryPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartImageScanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartImageScanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartImageScanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartImageScan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartLifecyclePolicyPreviewMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartLifecyclePolicyPreviewInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartLifecyclePolicyPreviewMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartLifecyclePolicyPreview.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UploadLayerPartMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUploadLayerPartInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UploadLayerPartMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UploadLayerPart.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
