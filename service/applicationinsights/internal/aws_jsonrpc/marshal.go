// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/applicationinsights/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateApplicationMarshaler defines marshaler for CreateApplication operation
type CreateApplicationMarshaler struct {
	Input *types.CreateApplicationInput
}

// CreateComponentMarshaler defines marshaler for CreateComponent operation
type CreateComponentMarshaler struct {
	Input *types.CreateComponentInput
}

// DeleteApplicationMarshaler defines marshaler for DeleteApplication operation
type DeleteApplicationMarshaler struct {
	Input *types.DeleteApplicationInput
}

// DeleteComponentMarshaler defines marshaler for DeleteComponent operation
type DeleteComponentMarshaler struct {
	Input *types.DeleteComponentInput
}

// DescribeApplicationMarshaler defines marshaler for DescribeApplication operation
type DescribeApplicationMarshaler struct {
	Input *types.DescribeApplicationInput
}

// DescribeComponentMarshaler defines marshaler for DescribeComponent operation
type DescribeComponentMarshaler struct {
	Input *types.DescribeComponentInput
}

// DescribeComponentConfigurationMarshaler defines marshaler for DescribeComponentConfiguration operation
type DescribeComponentConfigurationMarshaler struct {
	Input *types.DescribeComponentConfigurationInput
}

// DescribeComponentConfigurationRecommendationMarshaler defines marshaler for DescribeComponentConfigurationRecommendation operation
type DescribeComponentConfigurationRecommendationMarshaler struct {
	Input *types.DescribeComponentConfigurationRecommendationInput
}

// DescribeObservationMarshaler defines marshaler for DescribeObservation operation
type DescribeObservationMarshaler struct {
	Input *types.DescribeObservationInput
}

// DescribeProblemMarshaler defines marshaler for DescribeProblem operation
type DescribeProblemMarshaler struct {
	Input *types.DescribeProblemInput
}

// DescribeProblemObservationsMarshaler defines marshaler for DescribeProblemObservations operation
type DescribeProblemObservationsMarshaler struct {
	Input *types.DescribeProblemObservationsInput
}

// ListApplicationsMarshaler defines marshaler for ListApplications operation
type ListApplicationsMarshaler struct {
	Input *types.ListApplicationsInput
}

// ListComponentsMarshaler defines marshaler for ListComponents operation
type ListComponentsMarshaler struct {
	Input *types.ListComponentsInput
}

// ListProblemsMarshaler defines marshaler for ListProblems operation
type ListProblemsMarshaler struct {
	Input *types.ListProblemsInput
}

// UpdateApplicationMarshaler defines marshaler for UpdateApplication operation
type UpdateApplicationMarshaler struct {
	Input *types.UpdateApplicationInput
}

// UpdateComponentMarshaler defines marshaler for UpdateComponent operation
type UpdateComponentMarshaler struct {
	Input *types.UpdateComponentInput
}

// UpdateComponentConfigurationMarshaler defines marshaler for UpdateComponentConfiguration operation
type UpdateComponentConfigurationMarshaler struct {
	Input *types.UpdateComponentConfigurationInput
}

func MarshalCreateApplicationInputShapeAWSJSON(v *types.CreateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateComponentInputShapeAWSJSON(v *types.CreateComponentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteApplicationInputShapeAWSJSON(v *types.DeleteApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteComponentInputShapeAWSJSON(v *types.DeleteComponentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeApplicationInputShapeAWSJSON(v *types.DescribeApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeComponentInputShapeAWSJSON(v *types.DescribeComponentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeComponentConfigurationInputShapeAWSJSON(v *types.DescribeComponentConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeComponentConfigurationRecommendationInputShapeAWSJSON(v *types.DescribeComponentConfigurationRecommendationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeObservationInputShapeAWSJSON(v *types.DescribeObservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProblemInputShapeAWSJSON(v *types.DescribeProblemInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeProblemObservationsInputShapeAWSJSON(v *types.DescribeProblemObservationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListApplicationsInputShapeAWSJSON(v *types.ListApplicationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListComponentsInputShapeAWSJSON(v *types.ListComponentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListProblemsInputShapeAWSJSON(v *types.ListProblemsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateApplicationInputShapeAWSJSON(v *types.UpdateApplicationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateComponentInputShapeAWSJSON(v *types.UpdateComponentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateComponentConfigurationInputShapeAWSJSON(v *types.UpdateComponentConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateComponentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateComponentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateComponentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateComponent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteComponentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteComponentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteComponentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteComponent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeComponentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeComponentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeComponentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeComponent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeComponentConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeComponentConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeComponentConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeComponentConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeComponentConfigurationRecommendationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeComponentConfigurationRecommendationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeComponentConfigurationRecommendationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeComponentConfigurationRecommendation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeObservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeObservationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeObservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeObservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProblemMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProblemInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProblemMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProblem.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProblemObservationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProblemObservationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProblemObservationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProblemObservations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListApplicationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListApplicationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListApplicationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListApplications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListComponentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListComponentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListComponentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListComponents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProblemsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProblemsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProblemsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProblems.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateApplicationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateApplicationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateApplicationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateApplication.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateComponentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateComponentInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateComponentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateComponent.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateComponentConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateComponentConfigurationInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateComponentConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateComponentConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
