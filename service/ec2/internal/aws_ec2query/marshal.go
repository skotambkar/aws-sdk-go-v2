// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_ec2query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_ec2query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/ec2query"
	"github.com/aws/aws-sdk-go-v2/service/ec2/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptReservedInstancesExchangeQuoteMarshaler defines marshaler for AcceptReservedInstancesExchangeQuote operation
type AcceptReservedInstancesExchangeQuoteMarshaler struct {
	Input *types.AcceptReservedInstancesExchangeQuoteInput
}

// AcceptTransitGatewayVpcAttachmentMarshaler defines marshaler for AcceptTransitGatewayVpcAttachment operation
type AcceptTransitGatewayVpcAttachmentMarshaler struct {
	Input *types.AcceptTransitGatewayVpcAttachmentInput
}

// AcceptVpcEndpointConnectionsMarshaler defines marshaler for AcceptVpcEndpointConnections operation
type AcceptVpcEndpointConnectionsMarshaler struct {
	Input *types.AcceptVpcEndpointConnectionsInput
}

// AcceptVpcPeeringConnectionMarshaler defines marshaler for AcceptVpcPeeringConnection operation
type AcceptVpcPeeringConnectionMarshaler struct {
	Input *types.AcceptVpcPeeringConnectionInput
}

// AdvertiseByoipCidrMarshaler defines marshaler for AdvertiseByoipCidr operation
type AdvertiseByoipCidrMarshaler struct {
	Input *types.AdvertiseByoipCidrInput
}

// AllocateAddressMarshaler defines marshaler for AllocateAddress operation
type AllocateAddressMarshaler struct {
	Input *types.AllocateAddressInput
}

// AllocateHostsMarshaler defines marshaler for AllocateHosts operation
type AllocateHostsMarshaler struct {
	Input *types.AllocateHostsInput
}

// ApplySecurityGroupsToClientVpnTargetNetworkMarshaler defines marshaler for ApplySecurityGroupsToClientVpnTargetNetwork operation
type ApplySecurityGroupsToClientVpnTargetNetworkMarshaler struct {
	Input *types.ApplySecurityGroupsToClientVpnTargetNetworkInput
}

// AssignIpv6AddressesMarshaler defines marshaler for AssignIpv6Addresses operation
type AssignIpv6AddressesMarshaler struct {
	Input *types.AssignIpv6AddressesInput
}

// AssignPrivateIpAddressesMarshaler defines marshaler for AssignPrivateIpAddresses operation
type AssignPrivateIpAddressesMarshaler struct {
	Input *types.AssignPrivateIpAddressesInput
}

// AssociateAddressMarshaler defines marshaler for AssociateAddress operation
type AssociateAddressMarshaler struct {
	Input *types.AssociateAddressInput
}

// AssociateClientVpnTargetNetworkMarshaler defines marshaler for AssociateClientVpnTargetNetwork operation
type AssociateClientVpnTargetNetworkMarshaler struct {
	Input *types.AssociateClientVpnTargetNetworkInput
}

// AssociateDhcpOptionsMarshaler defines marshaler for AssociateDhcpOptions operation
type AssociateDhcpOptionsMarshaler struct {
	Input *types.AssociateDhcpOptionsInput
}

// AssociateIamInstanceProfileMarshaler defines marshaler for AssociateIamInstanceProfile operation
type AssociateIamInstanceProfileMarshaler struct {
	Input *types.AssociateIamInstanceProfileInput
}

// AssociateRouteTableMarshaler defines marshaler for AssociateRouteTable operation
type AssociateRouteTableMarshaler struct {
	Input *types.AssociateRouteTableInput
}

// AssociateSubnetCidrBlockMarshaler defines marshaler for AssociateSubnetCidrBlock operation
type AssociateSubnetCidrBlockMarshaler struct {
	Input *types.AssociateSubnetCidrBlockInput
}

// AssociateTransitGatewayRouteTableMarshaler defines marshaler for AssociateTransitGatewayRouteTable operation
type AssociateTransitGatewayRouteTableMarshaler struct {
	Input *types.AssociateTransitGatewayRouteTableInput
}

// AssociateVpcCidrBlockMarshaler defines marshaler for AssociateVpcCidrBlock operation
type AssociateVpcCidrBlockMarshaler struct {
	Input *types.AssociateVpcCidrBlockInput
}

// AttachClassicLinkVpcMarshaler defines marshaler for AttachClassicLinkVpc operation
type AttachClassicLinkVpcMarshaler struct {
	Input *types.AttachClassicLinkVpcInput
}

// AttachInternetGatewayMarshaler defines marshaler for AttachInternetGateway operation
type AttachInternetGatewayMarshaler struct {
	Input *types.AttachInternetGatewayInput
}

// AttachNetworkInterfaceMarshaler defines marshaler for AttachNetworkInterface operation
type AttachNetworkInterfaceMarshaler struct {
	Input *types.AttachNetworkInterfaceInput
}

// AttachVolumeMarshaler defines marshaler for AttachVolume operation
type AttachVolumeMarshaler struct {
	Input *types.AttachVolumeInput
}

// AttachVpnGatewayMarshaler defines marshaler for AttachVpnGateway operation
type AttachVpnGatewayMarshaler struct {
	Input *types.AttachVpnGatewayInput
}

// AuthorizeClientVpnIngressMarshaler defines marshaler for AuthorizeClientVpnIngress operation
type AuthorizeClientVpnIngressMarshaler struct {
	Input *types.AuthorizeClientVpnIngressInput
}

// AuthorizeSecurityGroupEgressMarshaler defines marshaler for AuthorizeSecurityGroupEgress operation
type AuthorizeSecurityGroupEgressMarshaler struct {
	Input *types.AuthorizeSecurityGroupEgressInput
}

// AuthorizeSecurityGroupIngressMarshaler defines marshaler for AuthorizeSecurityGroupIngress operation
type AuthorizeSecurityGroupIngressMarshaler struct {
	Input *types.AuthorizeSecurityGroupIngressInput
}

// BundleInstanceMarshaler defines marshaler for BundleInstance operation
type BundleInstanceMarshaler struct {
	Input *types.BundleInstanceInput
}

// CancelBundleTaskMarshaler defines marshaler for CancelBundleTask operation
type CancelBundleTaskMarshaler struct {
	Input *types.CancelBundleTaskInput
}

// CancelCapacityReservationMarshaler defines marshaler for CancelCapacityReservation operation
type CancelCapacityReservationMarshaler struct {
	Input *types.CancelCapacityReservationInput
}

// CancelConversionTaskMarshaler defines marshaler for CancelConversionTask operation
type CancelConversionTaskMarshaler struct {
	Input *types.CancelConversionTaskInput
}

// CancelExportTaskMarshaler defines marshaler for CancelExportTask operation
type CancelExportTaskMarshaler struct {
	Input *types.CancelExportTaskInput
}

// CancelImportTaskMarshaler defines marshaler for CancelImportTask operation
type CancelImportTaskMarshaler struct {
	Input *types.CancelImportTaskInput
}

// CancelReservedInstancesListingMarshaler defines marshaler for CancelReservedInstancesListing operation
type CancelReservedInstancesListingMarshaler struct {
	Input *types.CancelReservedInstancesListingInput
}

// CancelSpotFleetRequestsMarshaler defines marshaler for CancelSpotFleetRequests operation
type CancelSpotFleetRequestsMarshaler struct {
	Input *types.CancelSpotFleetRequestsInput
}

// CancelSpotInstanceRequestsMarshaler defines marshaler for CancelSpotInstanceRequests operation
type CancelSpotInstanceRequestsMarshaler struct {
	Input *types.CancelSpotInstanceRequestsInput
}

// ConfirmProductInstanceMarshaler defines marshaler for ConfirmProductInstance operation
type ConfirmProductInstanceMarshaler struct {
	Input *types.ConfirmProductInstanceInput
}

// CopyFpgaImageMarshaler defines marshaler for CopyFpgaImage operation
type CopyFpgaImageMarshaler struct {
	Input *types.CopyFpgaImageInput
}

// CopyImageMarshaler defines marshaler for CopyImage operation
type CopyImageMarshaler struct {
	Input *types.CopyImageInput
}

// CopySnapshotMarshaler defines marshaler for CopySnapshot operation
type CopySnapshotMarshaler struct {
	Input *types.CopySnapshotInput
}

// CreateCapacityReservationMarshaler defines marshaler for CreateCapacityReservation operation
type CreateCapacityReservationMarshaler struct {
	Input *types.CreateCapacityReservationInput
}

// CreateClientVpnEndpointMarshaler defines marshaler for CreateClientVpnEndpoint operation
type CreateClientVpnEndpointMarshaler struct {
	Input *types.CreateClientVpnEndpointInput
}

// CreateClientVpnRouteMarshaler defines marshaler for CreateClientVpnRoute operation
type CreateClientVpnRouteMarshaler struct {
	Input *types.CreateClientVpnRouteInput
}

// CreateCustomerGatewayMarshaler defines marshaler for CreateCustomerGateway operation
type CreateCustomerGatewayMarshaler struct {
	Input *types.CreateCustomerGatewayInput
}

// CreateDefaultSubnetMarshaler defines marshaler for CreateDefaultSubnet operation
type CreateDefaultSubnetMarshaler struct {
	Input *types.CreateDefaultSubnetInput
}

// CreateDefaultVpcMarshaler defines marshaler for CreateDefaultVpc operation
type CreateDefaultVpcMarshaler struct {
	Input *types.CreateDefaultVpcInput
}

// CreateDhcpOptionsMarshaler defines marshaler for CreateDhcpOptions operation
type CreateDhcpOptionsMarshaler struct {
	Input *types.CreateDhcpOptionsInput
}

// CreateEgressOnlyInternetGatewayMarshaler defines marshaler for CreateEgressOnlyInternetGateway operation
type CreateEgressOnlyInternetGatewayMarshaler struct {
	Input *types.CreateEgressOnlyInternetGatewayInput
}

// CreateFleetMarshaler defines marshaler for CreateFleet operation
type CreateFleetMarshaler struct {
	Input *types.CreateFleetInput
}

// CreateFlowLogsMarshaler defines marshaler for CreateFlowLogs operation
type CreateFlowLogsMarshaler struct {
	Input *types.CreateFlowLogsInput
}

// CreateFpgaImageMarshaler defines marshaler for CreateFpgaImage operation
type CreateFpgaImageMarshaler struct {
	Input *types.CreateFpgaImageInput
}

// CreateImageMarshaler defines marshaler for CreateImage operation
type CreateImageMarshaler struct {
	Input *types.CreateImageInput
}

// CreateInstanceExportTaskMarshaler defines marshaler for CreateInstanceExportTask operation
type CreateInstanceExportTaskMarshaler struct {
	Input *types.CreateInstanceExportTaskInput
}

// CreateInternetGatewayMarshaler defines marshaler for CreateInternetGateway operation
type CreateInternetGatewayMarshaler struct {
	Input *types.CreateInternetGatewayInput
}

// CreateKeyPairMarshaler defines marshaler for CreateKeyPair operation
type CreateKeyPairMarshaler struct {
	Input *types.CreateKeyPairInput
}

// CreateLaunchTemplateMarshaler defines marshaler for CreateLaunchTemplate operation
type CreateLaunchTemplateMarshaler struct {
	Input *types.CreateLaunchTemplateInput
}

// CreateLaunchTemplateVersionMarshaler defines marshaler for CreateLaunchTemplateVersion operation
type CreateLaunchTemplateVersionMarshaler struct {
	Input *types.CreateLaunchTemplateVersionInput
}

// CreateNatGatewayMarshaler defines marshaler for CreateNatGateway operation
type CreateNatGatewayMarshaler struct {
	Input *types.CreateNatGatewayInput
}

// CreateNetworkAclMarshaler defines marshaler for CreateNetworkAcl operation
type CreateNetworkAclMarshaler struct {
	Input *types.CreateNetworkAclInput
}

// CreateNetworkAclEntryMarshaler defines marshaler for CreateNetworkAclEntry operation
type CreateNetworkAclEntryMarshaler struct {
	Input *types.CreateNetworkAclEntryInput
}

// CreateNetworkInterfaceMarshaler defines marshaler for CreateNetworkInterface operation
type CreateNetworkInterfaceMarshaler struct {
	Input *types.CreateNetworkInterfaceInput
}

// CreateNetworkInterfacePermissionMarshaler defines marshaler for CreateNetworkInterfacePermission operation
type CreateNetworkInterfacePermissionMarshaler struct {
	Input *types.CreateNetworkInterfacePermissionInput
}

// CreatePlacementGroupMarshaler defines marshaler for CreatePlacementGroup operation
type CreatePlacementGroupMarshaler struct {
	Input *types.CreatePlacementGroupInput
}

// CreateReservedInstancesListingMarshaler defines marshaler for CreateReservedInstancesListing operation
type CreateReservedInstancesListingMarshaler struct {
	Input *types.CreateReservedInstancesListingInput
}

// CreateRouteMarshaler defines marshaler for CreateRoute operation
type CreateRouteMarshaler struct {
	Input *types.CreateRouteInput
}

// CreateRouteTableMarshaler defines marshaler for CreateRouteTable operation
type CreateRouteTableMarshaler struct {
	Input *types.CreateRouteTableInput
}

// CreateSecurityGroupMarshaler defines marshaler for CreateSecurityGroup operation
type CreateSecurityGroupMarshaler struct {
	Input *types.CreateSecurityGroupInput
}

// CreateSnapshotMarshaler defines marshaler for CreateSnapshot operation
type CreateSnapshotMarshaler struct {
	Input *types.CreateSnapshotInput
}

// CreateSnapshotsMarshaler defines marshaler for CreateSnapshots operation
type CreateSnapshotsMarshaler struct {
	Input *types.CreateSnapshotsInput
}

// CreateSpotDatafeedSubscriptionMarshaler defines marshaler for CreateSpotDatafeedSubscription operation
type CreateSpotDatafeedSubscriptionMarshaler struct {
	Input *types.CreateSpotDatafeedSubscriptionInput
}

// CreateSubnetMarshaler defines marshaler for CreateSubnet operation
type CreateSubnetMarshaler struct {
	Input *types.CreateSubnetInput
}

// CreateTagsMarshaler defines marshaler for CreateTags operation
type CreateTagsMarshaler struct {
	Input *types.CreateTagsInput
}

// CreateTrafficMirrorFilterMarshaler defines marshaler for CreateTrafficMirrorFilter operation
type CreateTrafficMirrorFilterMarshaler struct {
	Input *types.CreateTrafficMirrorFilterInput
}

// CreateTrafficMirrorFilterRuleMarshaler defines marshaler for CreateTrafficMirrorFilterRule operation
type CreateTrafficMirrorFilterRuleMarshaler struct {
	Input *types.CreateTrafficMirrorFilterRuleInput
}

// CreateTrafficMirrorSessionMarshaler defines marshaler for CreateTrafficMirrorSession operation
type CreateTrafficMirrorSessionMarshaler struct {
	Input *types.CreateTrafficMirrorSessionInput
}

// CreateTrafficMirrorTargetMarshaler defines marshaler for CreateTrafficMirrorTarget operation
type CreateTrafficMirrorTargetMarshaler struct {
	Input *types.CreateTrafficMirrorTargetInput
}

// CreateTransitGatewayMarshaler defines marshaler for CreateTransitGateway operation
type CreateTransitGatewayMarshaler struct {
	Input *types.CreateTransitGatewayInput
}

// CreateTransitGatewayRouteMarshaler defines marshaler for CreateTransitGatewayRoute operation
type CreateTransitGatewayRouteMarshaler struct {
	Input *types.CreateTransitGatewayRouteInput
}

// CreateTransitGatewayRouteTableMarshaler defines marshaler for CreateTransitGatewayRouteTable operation
type CreateTransitGatewayRouteTableMarshaler struct {
	Input *types.CreateTransitGatewayRouteTableInput
}

// CreateTransitGatewayVpcAttachmentMarshaler defines marshaler for CreateTransitGatewayVpcAttachment operation
type CreateTransitGatewayVpcAttachmentMarshaler struct {
	Input *types.CreateTransitGatewayVpcAttachmentInput
}

// CreateVolumeMarshaler defines marshaler for CreateVolume operation
type CreateVolumeMarshaler struct {
	Input *types.CreateVolumeInput
}

// CreateVpcMarshaler defines marshaler for CreateVpc operation
type CreateVpcMarshaler struct {
	Input *types.CreateVpcInput
}

// CreateVpcEndpointMarshaler defines marshaler for CreateVpcEndpoint operation
type CreateVpcEndpointMarshaler struct {
	Input *types.CreateVpcEndpointInput
}

// CreateVpcEndpointConnectionNotificationMarshaler defines marshaler for CreateVpcEndpointConnectionNotification operation
type CreateVpcEndpointConnectionNotificationMarshaler struct {
	Input *types.CreateVpcEndpointConnectionNotificationInput
}

// CreateVpcEndpointServiceConfigurationMarshaler defines marshaler for CreateVpcEndpointServiceConfiguration operation
type CreateVpcEndpointServiceConfigurationMarshaler struct {
	Input *types.CreateVpcEndpointServiceConfigurationInput
}

// CreateVpcPeeringConnectionMarshaler defines marshaler for CreateVpcPeeringConnection operation
type CreateVpcPeeringConnectionMarshaler struct {
	Input *types.CreateVpcPeeringConnectionInput
}

// CreateVpnConnectionMarshaler defines marshaler for CreateVpnConnection operation
type CreateVpnConnectionMarshaler struct {
	Input *types.CreateVpnConnectionInput
}

// CreateVpnConnectionRouteMarshaler defines marshaler for CreateVpnConnectionRoute operation
type CreateVpnConnectionRouteMarshaler struct {
	Input *types.CreateVpnConnectionRouteInput
}

// CreateVpnGatewayMarshaler defines marshaler for CreateVpnGateway operation
type CreateVpnGatewayMarshaler struct {
	Input *types.CreateVpnGatewayInput
}

// DeleteClientVpnEndpointMarshaler defines marshaler for DeleteClientVpnEndpoint operation
type DeleteClientVpnEndpointMarshaler struct {
	Input *types.DeleteClientVpnEndpointInput
}

// DeleteClientVpnRouteMarshaler defines marshaler for DeleteClientVpnRoute operation
type DeleteClientVpnRouteMarshaler struct {
	Input *types.DeleteClientVpnRouteInput
}

// DeleteCustomerGatewayMarshaler defines marshaler for DeleteCustomerGateway operation
type DeleteCustomerGatewayMarshaler struct {
	Input *types.DeleteCustomerGatewayInput
}

// DeleteDhcpOptionsMarshaler defines marshaler for DeleteDhcpOptions operation
type DeleteDhcpOptionsMarshaler struct {
	Input *types.DeleteDhcpOptionsInput
}

// DeleteEgressOnlyInternetGatewayMarshaler defines marshaler for DeleteEgressOnlyInternetGateway operation
type DeleteEgressOnlyInternetGatewayMarshaler struct {
	Input *types.DeleteEgressOnlyInternetGatewayInput
}

// DeleteFleetsMarshaler defines marshaler for DeleteFleets operation
type DeleteFleetsMarshaler struct {
	Input *types.DeleteFleetsInput
}

// DeleteFlowLogsMarshaler defines marshaler for DeleteFlowLogs operation
type DeleteFlowLogsMarshaler struct {
	Input *types.DeleteFlowLogsInput
}

// DeleteFpgaImageMarshaler defines marshaler for DeleteFpgaImage operation
type DeleteFpgaImageMarshaler struct {
	Input *types.DeleteFpgaImageInput
}

// DeleteInternetGatewayMarshaler defines marshaler for DeleteInternetGateway operation
type DeleteInternetGatewayMarshaler struct {
	Input *types.DeleteInternetGatewayInput
}

// DeleteKeyPairMarshaler defines marshaler for DeleteKeyPair operation
type DeleteKeyPairMarshaler struct {
	Input *types.DeleteKeyPairInput
}

// DeleteLaunchTemplateMarshaler defines marshaler for DeleteLaunchTemplate operation
type DeleteLaunchTemplateMarshaler struct {
	Input *types.DeleteLaunchTemplateInput
}

// DeleteLaunchTemplateVersionsMarshaler defines marshaler for DeleteLaunchTemplateVersions operation
type DeleteLaunchTemplateVersionsMarshaler struct {
	Input *types.DeleteLaunchTemplateVersionsInput
}

// DeleteNatGatewayMarshaler defines marshaler for DeleteNatGateway operation
type DeleteNatGatewayMarshaler struct {
	Input *types.DeleteNatGatewayInput
}

// DeleteNetworkAclMarshaler defines marshaler for DeleteNetworkAcl operation
type DeleteNetworkAclMarshaler struct {
	Input *types.DeleteNetworkAclInput
}

// DeleteNetworkAclEntryMarshaler defines marshaler for DeleteNetworkAclEntry operation
type DeleteNetworkAclEntryMarshaler struct {
	Input *types.DeleteNetworkAclEntryInput
}

// DeleteNetworkInterfaceMarshaler defines marshaler for DeleteNetworkInterface operation
type DeleteNetworkInterfaceMarshaler struct {
	Input *types.DeleteNetworkInterfaceInput
}

// DeleteNetworkInterfacePermissionMarshaler defines marshaler for DeleteNetworkInterfacePermission operation
type DeleteNetworkInterfacePermissionMarshaler struct {
	Input *types.DeleteNetworkInterfacePermissionInput
}

// DeletePlacementGroupMarshaler defines marshaler for DeletePlacementGroup operation
type DeletePlacementGroupMarshaler struct {
	Input *types.DeletePlacementGroupInput
}

// DeleteQueuedReservedInstancesMarshaler defines marshaler for DeleteQueuedReservedInstances operation
type DeleteQueuedReservedInstancesMarshaler struct {
	Input *types.DeleteQueuedReservedInstancesInput
}

// DeleteRouteMarshaler defines marshaler for DeleteRoute operation
type DeleteRouteMarshaler struct {
	Input *types.DeleteRouteInput
}

// DeleteRouteTableMarshaler defines marshaler for DeleteRouteTable operation
type DeleteRouteTableMarshaler struct {
	Input *types.DeleteRouteTableInput
}

// DeleteSecurityGroupMarshaler defines marshaler for DeleteSecurityGroup operation
type DeleteSecurityGroupMarshaler struct {
	Input *types.DeleteSecurityGroupInput
}

// DeleteSnapshotMarshaler defines marshaler for DeleteSnapshot operation
type DeleteSnapshotMarshaler struct {
	Input *types.DeleteSnapshotInput
}

// DeleteSpotDatafeedSubscriptionMarshaler defines marshaler for DeleteSpotDatafeedSubscription operation
type DeleteSpotDatafeedSubscriptionMarshaler struct {
	Input *types.DeleteSpotDatafeedSubscriptionInput
}

// DeleteSubnetMarshaler defines marshaler for DeleteSubnet operation
type DeleteSubnetMarshaler struct {
	Input *types.DeleteSubnetInput
}

// DeleteTagsMarshaler defines marshaler for DeleteTags operation
type DeleteTagsMarshaler struct {
	Input *types.DeleteTagsInput
}

// DeleteTrafficMirrorFilterMarshaler defines marshaler for DeleteTrafficMirrorFilter operation
type DeleteTrafficMirrorFilterMarshaler struct {
	Input *types.DeleteTrafficMirrorFilterInput
}

// DeleteTrafficMirrorFilterRuleMarshaler defines marshaler for DeleteTrafficMirrorFilterRule operation
type DeleteTrafficMirrorFilterRuleMarshaler struct {
	Input *types.DeleteTrafficMirrorFilterRuleInput
}

// DeleteTrafficMirrorSessionMarshaler defines marshaler for DeleteTrafficMirrorSession operation
type DeleteTrafficMirrorSessionMarshaler struct {
	Input *types.DeleteTrafficMirrorSessionInput
}

// DeleteTrafficMirrorTargetMarshaler defines marshaler for DeleteTrafficMirrorTarget operation
type DeleteTrafficMirrorTargetMarshaler struct {
	Input *types.DeleteTrafficMirrorTargetInput
}

// DeleteTransitGatewayMarshaler defines marshaler for DeleteTransitGateway operation
type DeleteTransitGatewayMarshaler struct {
	Input *types.DeleteTransitGatewayInput
}

// DeleteTransitGatewayRouteMarshaler defines marshaler for DeleteTransitGatewayRoute operation
type DeleteTransitGatewayRouteMarshaler struct {
	Input *types.DeleteTransitGatewayRouteInput
}

// DeleteTransitGatewayRouteTableMarshaler defines marshaler for DeleteTransitGatewayRouteTable operation
type DeleteTransitGatewayRouteTableMarshaler struct {
	Input *types.DeleteTransitGatewayRouteTableInput
}

// DeleteTransitGatewayVpcAttachmentMarshaler defines marshaler for DeleteTransitGatewayVpcAttachment operation
type DeleteTransitGatewayVpcAttachmentMarshaler struct {
	Input *types.DeleteTransitGatewayVpcAttachmentInput
}

// DeleteVolumeMarshaler defines marshaler for DeleteVolume operation
type DeleteVolumeMarshaler struct {
	Input *types.DeleteVolumeInput
}

// DeleteVpcMarshaler defines marshaler for DeleteVpc operation
type DeleteVpcMarshaler struct {
	Input *types.DeleteVpcInput
}

// DeleteVpcEndpointConnectionNotificationsMarshaler defines marshaler for DeleteVpcEndpointConnectionNotifications operation
type DeleteVpcEndpointConnectionNotificationsMarshaler struct {
	Input *types.DeleteVpcEndpointConnectionNotificationsInput
}

// DeleteVpcEndpointServiceConfigurationsMarshaler defines marshaler for DeleteVpcEndpointServiceConfigurations operation
type DeleteVpcEndpointServiceConfigurationsMarshaler struct {
	Input *types.DeleteVpcEndpointServiceConfigurationsInput
}

// DeleteVpcEndpointsMarshaler defines marshaler for DeleteVpcEndpoints operation
type DeleteVpcEndpointsMarshaler struct {
	Input *types.DeleteVpcEndpointsInput
}

// DeleteVpcPeeringConnectionMarshaler defines marshaler for DeleteVpcPeeringConnection operation
type DeleteVpcPeeringConnectionMarshaler struct {
	Input *types.DeleteVpcPeeringConnectionInput
}

// DeleteVpnConnectionMarshaler defines marshaler for DeleteVpnConnection operation
type DeleteVpnConnectionMarshaler struct {
	Input *types.DeleteVpnConnectionInput
}

// DeleteVpnConnectionRouteMarshaler defines marshaler for DeleteVpnConnectionRoute operation
type DeleteVpnConnectionRouteMarshaler struct {
	Input *types.DeleteVpnConnectionRouteInput
}

// DeleteVpnGatewayMarshaler defines marshaler for DeleteVpnGateway operation
type DeleteVpnGatewayMarshaler struct {
	Input *types.DeleteVpnGatewayInput
}

// DeprovisionByoipCidrMarshaler defines marshaler for DeprovisionByoipCidr operation
type DeprovisionByoipCidrMarshaler struct {
	Input *types.DeprovisionByoipCidrInput
}

// DeregisterImageMarshaler defines marshaler for DeregisterImage operation
type DeregisterImageMarshaler struct {
	Input *types.DeregisterImageInput
}

// DescribeAccountAttributesMarshaler defines marshaler for DescribeAccountAttributes operation
type DescribeAccountAttributesMarshaler struct {
	Input *types.DescribeAccountAttributesInput
}

// DescribeAddressesMarshaler defines marshaler for DescribeAddresses operation
type DescribeAddressesMarshaler struct {
	Input *types.DescribeAddressesInput
}

// DescribeAggregateIdFormatMarshaler defines marshaler for DescribeAggregateIdFormat operation
type DescribeAggregateIdFormatMarshaler struct {
	Input *types.DescribeAggregateIdFormatInput
}

// DescribeAvailabilityZonesMarshaler defines marshaler for DescribeAvailabilityZones operation
type DescribeAvailabilityZonesMarshaler struct {
	Input *types.DescribeAvailabilityZonesInput
}

// DescribeBundleTasksMarshaler defines marshaler for DescribeBundleTasks operation
type DescribeBundleTasksMarshaler struct {
	Input *types.DescribeBundleTasksInput
}

// DescribeByoipCidrsMarshaler defines marshaler for DescribeByoipCidrs operation
type DescribeByoipCidrsMarshaler struct {
	Input *types.DescribeByoipCidrsInput
}

// DescribeCapacityReservationsMarshaler defines marshaler for DescribeCapacityReservations operation
type DescribeCapacityReservationsMarshaler struct {
	Input *types.DescribeCapacityReservationsInput
}

// DescribeClassicLinkInstancesMarshaler defines marshaler for DescribeClassicLinkInstances operation
type DescribeClassicLinkInstancesMarshaler struct {
	Input *types.DescribeClassicLinkInstancesInput
}

// DescribeClientVpnAuthorizationRulesMarshaler defines marshaler for DescribeClientVpnAuthorizationRules operation
type DescribeClientVpnAuthorizationRulesMarshaler struct {
	Input *types.DescribeClientVpnAuthorizationRulesInput
}

// DescribeClientVpnConnectionsMarshaler defines marshaler for DescribeClientVpnConnections operation
type DescribeClientVpnConnectionsMarshaler struct {
	Input *types.DescribeClientVpnConnectionsInput
}

// DescribeClientVpnEndpointsMarshaler defines marshaler for DescribeClientVpnEndpoints operation
type DescribeClientVpnEndpointsMarshaler struct {
	Input *types.DescribeClientVpnEndpointsInput
}

// DescribeClientVpnRoutesMarshaler defines marshaler for DescribeClientVpnRoutes operation
type DescribeClientVpnRoutesMarshaler struct {
	Input *types.DescribeClientVpnRoutesInput
}

// DescribeClientVpnTargetNetworksMarshaler defines marshaler for DescribeClientVpnTargetNetworks operation
type DescribeClientVpnTargetNetworksMarshaler struct {
	Input *types.DescribeClientVpnTargetNetworksInput
}

// DescribeConversionTasksMarshaler defines marshaler for DescribeConversionTasks operation
type DescribeConversionTasksMarshaler struct {
	Input *types.DescribeConversionTasksInput
}

// DescribeCustomerGatewaysMarshaler defines marshaler for DescribeCustomerGateways operation
type DescribeCustomerGatewaysMarshaler struct {
	Input *types.DescribeCustomerGatewaysInput
}

// DescribeDhcpOptionsMarshaler defines marshaler for DescribeDhcpOptions operation
type DescribeDhcpOptionsMarshaler struct {
	Input *types.DescribeDhcpOptionsInput
}

// DescribeEgressOnlyInternetGatewaysMarshaler defines marshaler for DescribeEgressOnlyInternetGateways operation
type DescribeEgressOnlyInternetGatewaysMarshaler struct {
	Input *types.DescribeEgressOnlyInternetGatewaysInput
}

// DescribeElasticGpusMarshaler defines marshaler for DescribeElasticGpus operation
type DescribeElasticGpusMarshaler struct {
	Input *types.DescribeElasticGpusInput
}

// DescribeExportImageTasksMarshaler defines marshaler for DescribeExportImageTasks operation
type DescribeExportImageTasksMarshaler struct {
	Input *types.DescribeExportImageTasksInput
}

// DescribeExportTasksMarshaler defines marshaler for DescribeExportTasks operation
type DescribeExportTasksMarshaler struct {
	Input *types.DescribeExportTasksInput
}

// DescribeFastSnapshotRestoresMarshaler defines marshaler for DescribeFastSnapshotRestores operation
type DescribeFastSnapshotRestoresMarshaler struct {
	Input *types.DescribeFastSnapshotRestoresInput
}

// DescribeFleetHistoryMarshaler defines marshaler for DescribeFleetHistory operation
type DescribeFleetHistoryMarshaler struct {
	Input *types.DescribeFleetHistoryInput
}

// DescribeFleetInstancesMarshaler defines marshaler for DescribeFleetInstances operation
type DescribeFleetInstancesMarshaler struct {
	Input *types.DescribeFleetInstancesInput
}

// DescribeFleetsMarshaler defines marshaler for DescribeFleets operation
type DescribeFleetsMarshaler struct {
	Input *types.DescribeFleetsInput
}

// DescribeFlowLogsMarshaler defines marshaler for DescribeFlowLogs operation
type DescribeFlowLogsMarshaler struct {
	Input *types.DescribeFlowLogsInput
}

// DescribeFpgaImageAttributeMarshaler defines marshaler for DescribeFpgaImageAttribute operation
type DescribeFpgaImageAttributeMarshaler struct {
	Input *types.DescribeFpgaImageAttributeInput
}

// DescribeFpgaImagesMarshaler defines marshaler for DescribeFpgaImages operation
type DescribeFpgaImagesMarshaler struct {
	Input *types.DescribeFpgaImagesInput
}

// DescribeHostReservationOfferingsMarshaler defines marshaler for DescribeHostReservationOfferings operation
type DescribeHostReservationOfferingsMarshaler struct {
	Input *types.DescribeHostReservationOfferingsInput
}

// DescribeHostReservationsMarshaler defines marshaler for DescribeHostReservations operation
type DescribeHostReservationsMarshaler struct {
	Input *types.DescribeHostReservationsInput
}

// DescribeHostsMarshaler defines marshaler for DescribeHosts operation
type DescribeHostsMarshaler struct {
	Input *types.DescribeHostsInput
}

// DescribeIamInstanceProfileAssociationsMarshaler defines marshaler for DescribeIamInstanceProfileAssociations operation
type DescribeIamInstanceProfileAssociationsMarshaler struct {
	Input *types.DescribeIamInstanceProfileAssociationsInput
}

// DescribeIdFormatMarshaler defines marshaler for DescribeIdFormat operation
type DescribeIdFormatMarshaler struct {
	Input *types.DescribeIdFormatInput
}

// DescribeIdentityIdFormatMarshaler defines marshaler for DescribeIdentityIdFormat operation
type DescribeIdentityIdFormatMarshaler struct {
	Input *types.DescribeIdentityIdFormatInput
}

// DescribeImageAttributeMarshaler defines marshaler for DescribeImageAttribute operation
type DescribeImageAttributeMarshaler struct {
	Input *types.DescribeImageAttributeInput
}

// DescribeImagesMarshaler defines marshaler for DescribeImages operation
type DescribeImagesMarshaler struct {
	Input *types.DescribeImagesInput
}

// DescribeImportImageTasksMarshaler defines marshaler for DescribeImportImageTasks operation
type DescribeImportImageTasksMarshaler struct {
	Input *types.DescribeImportImageTasksInput
}

// DescribeImportSnapshotTasksMarshaler defines marshaler for DescribeImportSnapshotTasks operation
type DescribeImportSnapshotTasksMarshaler struct {
	Input *types.DescribeImportSnapshotTasksInput
}

// DescribeInstanceAttributeMarshaler defines marshaler for DescribeInstanceAttribute operation
type DescribeInstanceAttributeMarshaler struct {
	Input *types.DescribeInstanceAttributeInput
}

// DescribeInstanceCreditSpecificationsMarshaler defines marshaler for DescribeInstanceCreditSpecifications operation
type DescribeInstanceCreditSpecificationsMarshaler struct {
	Input *types.DescribeInstanceCreditSpecificationsInput
}

// DescribeInstanceStatusMarshaler defines marshaler for DescribeInstanceStatus operation
type DescribeInstanceStatusMarshaler struct {
	Input *types.DescribeInstanceStatusInput
}

// DescribeInstancesMarshaler defines marshaler for DescribeInstances operation
type DescribeInstancesMarshaler struct {
	Input *types.DescribeInstancesInput
}

// DescribeInternetGatewaysMarshaler defines marshaler for DescribeInternetGateways operation
type DescribeInternetGatewaysMarshaler struct {
	Input *types.DescribeInternetGatewaysInput
}

// DescribeKeyPairsMarshaler defines marshaler for DescribeKeyPairs operation
type DescribeKeyPairsMarshaler struct {
	Input *types.DescribeKeyPairsInput
}

// DescribeLaunchTemplateVersionsMarshaler defines marshaler for DescribeLaunchTemplateVersions operation
type DescribeLaunchTemplateVersionsMarshaler struct {
	Input *types.DescribeLaunchTemplateVersionsInput
}

// DescribeLaunchTemplatesMarshaler defines marshaler for DescribeLaunchTemplates operation
type DescribeLaunchTemplatesMarshaler struct {
	Input *types.DescribeLaunchTemplatesInput
}

// DescribeMovingAddressesMarshaler defines marshaler for DescribeMovingAddresses operation
type DescribeMovingAddressesMarshaler struct {
	Input *types.DescribeMovingAddressesInput
}

// DescribeNatGatewaysMarshaler defines marshaler for DescribeNatGateways operation
type DescribeNatGatewaysMarshaler struct {
	Input *types.DescribeNatGatewaysInput
}

// DescribeNetworkAclsMarshaler defines marshaler for DescribeNetworkAcls operation
type DescribeNetworkAclsMarshaler struct {
	Input *types.DescribeNetworkAclsInput
}

// DescribeNetworkInterfaceAttributeMarshaler defines marshaler for DescribeNetworkInterfaceAttribute operation
type DescribeNetworkInterfaceAttributeMarshaler struct {
	Input *types.DescribeNetworkInterfaceAttributeInput
}

// DescribeNetworkInterfacePermissionsMarshaler defines marshaler for DescribeNetworkInterfacePermissions operation
type DescribeNetworkInterfacePermissionsMarshaler struct {
	Input *types.DescribeNetworkInterfacePermissionsInput
}

// DescribeNetworkInterfacesMarshaler defines marshaler for DescribeNetworkInterfaces operation
type DescribeNetworkInterfacesMarshaler struct {
	Input *types.DescribeNetworkInterfacesInput
}

// DescribePlacementGroupsMarshaler defines marshaler for DescribePlacementGroups operation
type DescribePlacementGroupsMarshaler struct {
	Input *types.DescribePlacementGroupsInput
}

// DescribePrefixListsMarshaler defines marshaler for DescribePrefixLists operation
type DescribePrefixListsMarshaler struct {
	Input *types.DescribePrefixListsInput
}

// DescribePrincipalIdFormatMarshaler defines marshaler for DescribePrincipalIdFormat operation
type DescribePrincipalIdFormatMarshaler struct {
	Input *types.DescribePrincipalIdFormatInput
}

// DescribePublicIpv4PoolsMarshaler defines marshaler for DescribePublicIpv4Pools operation
type DescribePublicIpv4PoolsMarshaler struct {
	Input *types.DescribePublicIpv4PoolsInput
}

// DescribeRegionsMarshaler defines marshaler for DescribeRegions operation
type DescribeRegionsMarshaler struct {
	Input *types.DescribeRegionsInput
}

// DescribeReservedInstancesMarshaler defines marshaler for DescribeReservedInstances operation
type DescribeReservedInstancesMarshaler struct {
	Input *types.DescribeReservedInstancesInput
}

// DescribeReservedInstancesListingsMarshaler defines marshaler for DescribeReservedInstancesListings operation
type DescribeReservedInstancesListingsMarshaler struct {
	Input *types.DescribeReservedInstancesListingsInput
}

// DescribeReservedInstancesModificationsMarshaler defines marshaler for DescribeReservedInstancesModifications operation
type DescribeReservedInstancesModificationsMarshaler struct {
	Input *types.DescribeReservedInstancesModificationsInput
}

// DescribeReservedInstancesOfferingsMarshaler defines marshaler for DescribeReservedInstancesOfferings operation
type DescribeReservedInstancesOfferingsMarshaler struct {
	Input *types.DescribeReservedInstancesOfferingsInput
}

// DescribeRouteTablesMarshaler defines marshaler for DescribeRouteTables operation
type DescribeRouteTablesMarshaler struct {
	Input *types.DescribeRouteTablesInput
}

// DescribeScheduledInstanceAvailabilityMarshaler defines marshaler for DescribeScheduledInstanceAvailability operation
type DescribeScheduledInstanceAvailabilityMarshaler struct {
	Input *types.DescribeScheduledInstanceAvailabilityInput
}

// DescribeScheduledInstancesMarshaler defines marshaler for DescribeScheduledInstances operation
type DescribeScheduledInstancesMarshaler struct {
	Input *types.DescribeScheduledInstancesInput
}

// DescribeSecurityGroupReferencesMarshaler defines marshaler for DescribeSecurityGroupReferences operation
type DescribeSecurityGroupReferencesMarshaler struct {
	Input *types.DescribeSecurityGroupReferencesInput
}

// DescribeSecurityGroupsMarshaler defines marshaler for DescribeSecurityGroups operation
type DescribeSecurityGroupsMarshaler struct {
	Input *types.DescribeSecurityGroupsInput
}

// DescribeSnapshotAttributeMarshaler defines marshaler for DescribeSnapshotAttribute operation
type DescribeSnapshotAttributeMarshaler struct {
	Input *types.DescribeSnapshotAttributeInput
}

// DescribeSnapshotsMarshaler defines marshaler for DescribeSnapshots operation
type DescribeSnapshotsMarshaler struct {
	Input *types.DescribeSnapshotsInput
}

// DescribeSpotDatafeedSubscriptionMarshaler defines marshaler for DescribeSpotDatafeedSubscription operation
type DescribeSpotDatafeedSubscriptionMarshaler struct {
	Input *types.DescribeSpotDatafeedSubscriptionInput
}

// DescribeSpotFleetInstancesMarshaler defines marshaler for DescribeSpotFleetInstances operation
type DescribeSpotFleetInstancesMarshaler struct {
	Input *types.DescribeSpotFleetInstancesInput
}

// DescribeSpotFleetRequestHistoryMarshaler defines marshaler for DescribeSpotFleetRequestHistory operation
type DescribeSpotFleetRequestHistoryMarshaler struct {
	Input *types.DescribeSpotFleetRequestHistoryInput
}

// DescribeSpotFleetRequestsMarshaler defines marshaler for DescribeSpotFleetRequests operation
type DescribeSpotFleetRequestsMarshaler struct {
	Input *types.DescribeSpotFleetRequestsInput
}

// DescribeSpotInstanceRequestsMarshaler defines marshaler for DescribeSpotInstanceRequests operation
type DescribeSpotInstanceRequestsMarshaler struct {
	Input *types.DescribeSpotInstanceRequestsInput
}

// DescribeSpotPriceHistoryMarshaler defines marshaler for DescribeSpotPriceHistory operation
type DescribeSpotPriceHistoryMarshaler struct {
	Input *types.DescribeSpotPriceHistoryInput
}

// DescribeStaleSecurityGroupsMarshaler defines marshaler for DescribeStaleSecurityGroups operation
type DescribeStaleSecurityGroupsMarshaler struct {
	Input *types.DescribeStaleSecurityGroupsInput
}

// DescribeSubnetsMarshaler defines marshaler for DescribeSubnets operation
type DescribeSubnetsMarshaler struct {
	Input *types.DescribeSubnetsInput
}

// DescribeTagsMarshaler defines marshaler for DescribeTags operation
type DescribeTagsMarshaler struct {
	Input *types.DescribeTagsInput
}

// DescribeTrafficMirrorFiltersMarshaler defines marshaler for DescribeTrafficMirrorFilters operation
type DescribeTrafficMirrorFiltersMarshaler struct {
	Input *types.DescribeTrafficMirrorFiltersInput
}

// DescribeTrafficMirrorSessionsMarshaler defines marshaler for DescribeTrafficMirrorSessions operation
type DescribeTrafficMirrorSessionsMarshaler struct {
	Input *types.DescribeTrafficMirrorSessionsInput
}

// DescribeTrafficMirrorTargetsMarshaler defines marshaler for DescribeTrafficMirrorTargets operation
type DescribeTrafficMirrorTargetsMarshaler struct {
	Input *types.DescribeTrafficMirrorTargetsInput
}

// DescribeTransitGatewayAttachmentsMarshaler defines marshaler for DescribeTransitGatewayAttachments operation
type DescribeTransitGatewayAttachmentsMarshaler struct {
	Input *types.DescribeTransitGatewayAttachmentsInput
}

// DescribeTransitGatewayRouteTablesMarshaler defines marshaler for DescribeTransitGatewayRouteTables operation
type DescribeTransitGatewayRouteTablesMarshaler struct {
	Input *types.DescribeTransitGatewayRouteTablesInput
}

// DescribeTransitGatewayVpcAttachmentsMarshaler defines marshaler for DescribeTransitGatewayVpcAttachments operation
type DescribeTransitGatewayVpcAttachmentsMarshaler struct {
	Input *types.DescribeTransitGatewayVpcAttachmentsInput
}

// DescribeTransitGatewaysMarshaler defines marshaler for DescribeTransitGateways operation
type DescribeTransitGatewaysMarshaler struct {
	Input *types.DescribeTransitGatewaysInput
}

// DescribeVolumeAttributeMarshaler defines marshaler for DescribeVolumeAttribute operation
type DescribeVolumeAttributeMarshaler struct {
	Input *types.DescribeVolumeAttributeInput
}

// DescribeVolumeStatusMarshaler defines marshaler for DescribeVolumeStatus operation
type DescribeVolumeStatusMarshaler struct {
	Input *types.DescribeVolumeStatusInput
}

// DescribeVolumesMarshaler defines marshaler for DescribeVolumes operation
type DescribeVolumesMarshaler struct {
	Input *types.DescribeVolumesInput
}

// DescribeVolumesModificationsMarshaler defines marshaler for DescribeVolumesModifications operation
type DescribeVolumesModificationsMarshaler struct {
	Input *types.DescribeVolumesModificationsInput
}

// DescribeVpcAttributeMarshaler defines marshaler for DescribeVpcAttribute operation
type DescribeVpcAttributeMarshaler struct {
	Input *types.DescribeVpcAttributeInput
}

// DescribeVpcClassicLinkMarshaler defines marshaler for DescribeVpcClassicLink operation
type DescribeVpcClassicLinkMarshaler struct {
	Input *types.DescribeVpcClassicLinkInput
}

// DescribeVpcClassicLinkDnsSupportMarshaler defines marshaler for DescribeVpcClassicLinkDnsSupport operation
type DescribeVpcClassicLinkDnsSupportMarshaler struct {
	Input *types.DescribeVpcClassicLinkDnsSupportInput
}

// DescribeVpcEndpointConnectionNotificationsMarshaler defines marshaler for DescribeVpcEndpointConnectionNotifications operation
type DescribeVpcEndpointConnectionNotificationsMarshaler struct {
	Input *types.DescribeVpcEndpointConnectionNotificationsInput
}

// DescribeVpcEndpointConnectionsMarshaler defines marshaler for DescribeVpcEndpointConnections operation
type DescribeVpcEndpointConnectionsMarshaler struct {
	Input *types.DescribeVpcEndpointConnectionsInput
}

// DescribeVpcEndpointServiceConfigurationsMarshaler defines marshaler for DescribeVpcEndpointServiceConfigurations operation
type DescribeVpcEndpointServiceConfigurationsMarshaler struct {
	Input *types.DescribeVpcEndpointServiceConfigurationsInput
}

// DescribeVpcEndpointServicePermissionsMarshaler defines marshaler for DescribeVpcEndpointServicePermissions operation
type DescribeVpcEndpointServicePermissionsMarshaler struct {
	Input *types.DescribeVpcEndpointServicePermissionsInput
}

// DescribeVpcEndpointServicesMarshaler defines marshaler for DescribeVpcEndpointServices operation
type DescribeVpcEndpointServicesMarshaler struct {
	Input *types.DescribeVpcEndpointServicesInput
}

// DescribeVpcEndpointsMarshaler defines marshaler for DescribeVpcEndpoints operation
type DescribeVpcEndpointsMarshaler struct {
	Input *types.DescribeVpcEndpointsInput
}

// DescribeVpcPeeringConnectionsMarshaler defines marshaler for DescribeVpcPeeringConnections operation
type DescribeVpcPeeringConnectionsMarshaler struct {
	Input *types.DescribeVpcPeeringConnectionsInput
}

// DescribeVpcsMarshaler defines marshaler for DescribeVpcs operation
type DescribeVpcsMarshaler struct {
	Input *types.DescribeVpcsInput
}

// DescribeVpnConnectionsMarshaler defines marshaler for DescribeVpnConnections operation
type DescribeVpnConnectionsMarshaler struct {
	Input *types.DescribeVpnConnectionsInput
}

// DescribeVpnGatewaysMarshaler defines marshaler for DescribeVpnGateways operation
type DescribeVpnGatewaysMarshaler struct {
	Input *types.DescribeVpnGatewaysInput
}

// DetachClassicLinkVpcMarshaler defines marshaler for DetachClassicLinkVpc operation
type DetachClassicLinkVpcMarshaler struct {
	Input *types.DetachClassicLinkVpcInput
}

// DetachInternetGatewayMarshaler defines marshaler for DetachInternetGateway operation
type DetachInternetGatewayMarshaler struct {
	Input *types.DetachInternetGatewayInput
}

// DetachNetworkInterfaceMarshaler defines marshaler for DetachNetworkInterface operation
type DetachNetworkInterfaceMarshaler struct {
	Input *types.DetachNetworkInterfaceInput
}

// DetachVolumeMarshaler defines marshaler for DetachVolume operation
type DetachVolumeMarshaler struct {
	Input *types.DetachVolumeInput
}

// DetachVpnGatewayMarshaler defines marshaler for DetachVpnGateway operation
type DetachVpnGatewayMarshaler struct {
	Input *types.DetachVpnGatewayInput
}

// DisableEbsEncryptionByDefaultMarshaler defines marshaler for DisableEbsEncryptionByDefault operation
type DisableEbsEncryptionByDefaultMarshaler struct {
	Input *types.DisableEbsEncryptionByDefaultInput
}

// DisableFastSnapshotRestoresMarshaler defines marshaler for DisableFastSnapshotRestores operation
type DisableFastSnapshotRestoresMarshaler struct {
	Input *types.DisableFastSnapshotRestoresInput
}

// DisableTransitGatewayRouteTablePropagationMarshaler defines marshaler for DisableTransitGatewayRouteTablePropagation operation
type DisableTransitGatewayRouteTablePropagationMarshaler struct {
	Input *types.DisableTransitGatewayRouteTablePropagationInput
}

// DisableVgwRoutePropagationMarshaler defines marshaler for DisableVgwRoutePropagation operation
type DisableVgwRoutePropagationMarshaler struct {
	Input *types.DisableVgwRoutePropagationInput
}

// DisableVpcClassicLinkMarshaler defines marshaler for DisableVpcClassicLink operation
type DisableVpcClassicLinkMarshaler struct {
	Input *types.DisableVpcClassicLinkInput
}

// DisableVpcClassicLinkDnsSupportMarshaler defines marshaler for DisableVpcClassicLinkDnsSupport operation
type DisableVpcClassicLinkDnsSupportMarshaler struct {
	Input *types.DisableVpcClassicLinkDnsSupportInput
}

// DisassociateAddressMarshaler defines marshaler for DisassociateAddress operation
type DisassociateAddressMarshaler struct {
	Input *types.DisassociateAddressInput
}

// DisassociateClientVpnTargetNetworkMarshaler defines marshaler for DisassociateClientVpnTargetNetwork operation
type DisassociateClientVpnTargetNetworkMarshaler struct {
	Input *types.DisassociateClientVpnTargetNetworkInput
}

// DisassociateIamInstanceProfileMarshaler defines marshaler for DisassociateIamInstanceProfile operation
type DisassociateIamInstanceProfileMarshaler struct {
	Input *types.DisassociateIamInstanceProfileInput
}

// DisassociateRouteTableMarshaler defines marshaler for DisassociateRouteTable operation
type DisassociateRouteTableMarshaler struct {
	Input *types.DisassociateRouteTableInput
}

// DisassociateSubnetCidrBlockMarshaler defines marshaler for DisassociateSubnetCidrBlock operation
type DisassociateSubnetCidrBlockMarshaler struct {
	Input *types.DisassociateSubnetCidrBlockInput
}

// DisassociateTransitGatewayRouteTableMarshaler defines marshaler for DisassociateTransitGatewayRouteTable operation
type DisassociateTransitGatewayRouteTableMarshaler struct {
	Input *types.DisassociateTransitGatewayRouteTableInput
}

// DisassociateVpcCidrBlockMarshaler defines marshaler for DisassociateVpcCidrBlock operation
type DisassociateVpcCidrBlockMarshaler struct {
	Input *types.DisassociateVpcCidrBlockInput
}

// EnableEbsEncryptionByDefaultMarshaler defines marshaler for EnableEbsEncryptionByDefault operation
type EnableEbsEncryptionByDefaultMarshaler struct {
	Input *types.EnableEbsEncryptionByDefaultInput
}

// EnableFastSnapshotRestoresMarshaler defines marshaler for EnableFastSnapshotRestores operation
type EnableFastSnapshotRestoresMarshaler struct {
	Input *types.EnableFastSnapshotRestoresInput
}

// EnableTransitGatewayRouteTablePropagationMarshaler defines marshaler for EnableTransitGatewayRouteTablePropagation operation
type EnableTransitGatewayRouteTablePropagationMarshaler struct {
	Input *types.EnableTransitGatewayRouteTablePropagationInput
}

// EnableVgwRoutePropagationMarshaler defines marshaler for EnableVgwRoutePropagation operation
type EnableVgwRoutePropagationMarshaler struct {
	Input *types.EnableVgwRoutePropagationInput
}

// EnableVolumeIOMarshaler defines marshaler for EnableVolumeIO operation
type EnableVolumeIOMarshaler struct {
	Input *types.EnableVolumeIOInput
}

// EnableVpcClassicLinkMarshaler defines marshaler for EnableVpcClassicLink operation
type EnableVpcClassicLinkMarshaler struct {
	Input *types.EnableVpcClassicLinkInput
}

// EnableVpcClassicLinkDnsSupportMarshaler defines marshaler for EnableVpcClassicLinkDnsSupport operation
type EnableVpcClassicLinkDnsSupportMarshaler struct {
	Input *types.EnableVpcClassicLinkDnsSupportInput
}

// ExportClientVpnClientCertificateRevocationListMarshaler defines marshaler for ExportClientVpnClientCertificateRevocationList operation
type ExportClientVpnClientCertificateRevocationListMarshaler struct {
	Input *types.ExportClientVpnClientCertificateRevocationListInput
}

// ExportClientVpnClientConfigurationMarshaler defines marshaler for ExportClientVpnClientConfiguration operation
type ExportClientVpnClientConfigurationMarshaler struct {
	Input *types.ExportClientVpnClientConfigurationInput
}

// ExportImageMarshaler defines marshaler for ExportImage operation
type ExportImageMarshaler struct {
	Input *types.ExportImageInput
}

// ExportTransitGatewayRoutesMarshaler defines marshaler for ExportTransitGatewayRoutes operation
type ExportTransitGatewayRoutesMarshaler struct {
	Input *types.ExportTransitGatewayRoutesInput
}

// GetCapacityReservationUsageMarshaler defines marshaler for GetCapacityReservationUsage operation
type GetCapacityReservationUsageMarshaler struct {
	Input *types.GetCapacityReservationUsageInput
}

// GetConsoleOutputMarshaler defines marshaler for GetConsoleOutput operation
type GetConsoleOutputMarshaler struct {
	Input *types.GetConsoleOutputInput
}

// GetConsoleScreenshotMarshaler defines marshaler for GetConsoleScreenshot operation
type GetConsoleScreenshotMarshaler struct {
	Input *types.GetConsoleScreenshotInput
}

// GetEbsDefaultKmsKeyIdMarshaler defines marshaler for GetEbsDefaultKmsKeyId operation
type GetEbsDefaultKmsKeyIdMarshaler struct {
	Input *types.GetEbsDefaultKmsKeyIdInput
}

// GetEbsEncryptionByDefaultMarshaler defines marshaler for GetEbsEncryptionByDefault operation
type GetEbsEncryptionByDefaultMarshaler struct {
	Input *types.GetEbsEncryptionByDefaultInput
}

// GetHostReservationPurchasePreviewMarshaler defines marshaler for GetHostReservationPurchasePreview operation
type GetHostReservationPurchasePreviewMarshaler struct {
	Input *types.GetHostReservationPurchasePreviewInput
}

// GetLaunchTemplateDataMarshaler defines marshaler for GetLaunchTemplateData operation
type GetLaunchTemplateDataMarshaler struct {
	Input *types.GetLaunchTemplateDataInput
}

// GetPasswordDataMarshaler defines marshaler for GetPasswordData operation
type GetPasswordDataMarshaler struct {
	Input *types.GetPasswordDataInput
}

// GetReservedInstancesExchangeQuoteMarshaler defines marshaler for GetReservedInstancesExchangeQuote operation
type GetReservedInstancesExchangeQuoteMarshaler struct {
	Input *types.GetReservedInstancesExchangeQuoteInput
}

// GetTransitGatewayAttachmentPropagationsMarshaler defines marshaler for GetTransitGatewayAttachmentPropagations operation
type GetTransitGatewayAttachmentPropagationsMarshaler struct {
	Input *types.GetTransitGatewayAttachmentPropagationsInput
}

// GetTransitGatewayRouteTableAssociationsMarshaler defines marshaler for GetTransitGatewayRouteTableAssociations operation
type GetTransitGatewayRouteTableAssociationsMarshaler struct {
	Input *types.GetTransitGatewayRouteTableAssociationsInput
}

// GetTransitGatewayRouteTablePropagationsMarshaler defines marshaler for GetTransitGatewayRouteTablePropagations operation
type GetTransitGatewayRouteTablePropagationsMarshaler struct {
	Input *types.GetTransitGatewayRouteTablePropagationsInput
}

// ImportClientVpnClientCertificateRevocationListMarshaler defines marshaler for ImportClientVpnClientCertificateRevocationList operation
type ImportClientVpnClientCertificateRevocationListMarshaler struct {
	Input *types.ImportClientVpnClientCertificateRevocationListInput
}

// ImportImageMarshaler defines marshaler for ImportImage operation
type ImportImageMarshaler struct {
	Input *types.ImportImageInput
}

// ImportInstanceMarshaler defines marshaler for ImportInstance operation
type ImportInstanceMarshaler struct {
	Input *types.ImportInstanceInput
}

// ImportKeyPairMarshaler defines marshaler for ImportKeyPair operation
type ImportKeyPairMarshaler struct {
	Input *types.ImportKeyPairInput
}

// ImportSnapshotMarshaler defines marshaler for ImportSnapshot operation
type ImportSnapshotMarshaler struct {
	Input *types.ImportSnapshotInput
}

// ImportVolumeMarshaler defines marshaler for ImportVolume operation
type ImportVolumeMarshaler struct {
	Input *types.ImportVolumeInput
}

// ModifyCapacityReservationMarshaler defines marshaler for ModifyCapacityReservation operation
type ModifyCapacityReservationMarshaler struct {
	Input *types.ModifyCapacityReservationInput
}

// ModifyClientVpnEndpointMarshaler defines marshaler for ModifyClientVpnEndpoint operation
type ModifyClientVpnEndpointMarshaler struct {
	Input *types.ModifyClientVpnEndpointInput
}

// ModifyEbsDefaultKmsKeyIdMarshaler defines marshaler for ModifyEbsDefaultKmsKeyId operation
type ModifyEbsDefaultKmsKeyIdMarshaler struct {
	Input *types.ModifyEbsDefaultKmsKeyIdInput
}

// ModifyFleetMarshaler defines marshaler for ModifyFleet operation
type ModifyFleetMarshaler struct {
	Input *types.ModifyFleetInput
}

// ModifyFpgaImageAttributeMarshaler defines marshaler for ModifyFpgaImageAttribute operation
type ModifyFpgaImageAttributeMarshaler struct {
	Input *types.ModifyFpgaImageAttributeInput
}

// ModifyHostsMarshaler defines marshaler for ModifyHosts operation
type ModifyHostsMarshaler struct {
	Input *types.ModifyHostsInput
}

// ModifyIdFormatMarshaler defines marshaler for ModifyIdFormat operation
type ModifyIdFormatMarshaler struct {
	Input *types.ModifyIdFormatInput
}

// ModifyIdentityIdFormatMarshaler defines marshaler for ModifyIdentityIdFormat operation
type ModifyIdentityIdFormatMarshaler struct {
	Input *types.ModifyIdentityIdFormatInput
}

// ModifyImageAttributeMarshaler defines marshaler for ModifyImageAttribute operation
type ModifyImageAttributeMarshaler struct {
	Input *types.ModifyImageAttributeInput
}

// ModifyInstanceAttributeMarshaler defines marshaler for ModifyInstanceAttribute operation
type ModifyInstanceAttributeMarshaler struct {
	Input *types.ModifyInstanceAttributeInput
}

// ModifyInstanceCapacityReservationAttributesMarshaler defines marshaler for ModifyInstanceCapacityReservationAttributes operation
type ModifyInstanceCapacityReservationAttributesMarshaler struct {
	Input *types.ModifyInstanceCapacityReservationAttributesInput
}

// ModifyInstanceCreditSpecificationMarshaler defines marshaler for ModifyInstanceCreditSpecification operation
type ModifyInstanceCreditSpecificationMarshaler struct {
	Input *types.ModifyInstanceCreditSpecificationInput
}

// ModifyInstanceEventStartTimeMarshaler defines marshaler for ModifyInstanceEventStartTime operation
type ModifyInstanceEventStartTimeMarshaler struct {
	Input *types.ModifyInstanceEventStartTimeInput
}

// ModifyInstanceMetadataOptionsMarshaler defines marshaler for ModifyInstanceMetadataOptions operation
type ModifyInstanceMetadataOptionsMarshaler struct {
	Input *types.ModifyInstanceMetadataOptionsInput
}

// ModifyInstancePlacementMarshaler defines marshaler for ModifyInstancePlacement operation
type ModifyInstancePlacementMarshaler struct {
	Input *types.ModifyInstancePlacementInput
}

// ModifyLaunchTemplateMarshaler defines marshaler for ModifyLaunchTemplate operation
type ModifyLaunchTemplateMarshaler struct {
	Input *types.ModifyLaunchTemplateInput
}

// ModifyNetworkInterfaceAttributeMarshaler defines marshaler for ModifyNetworkInterfaceAttribute operation
type ModifyNetworkInterfaceAttributeMarshaler struct {
	Input *types.ModifyNetworkInterfaceAttributeInput
}

// ModifyReservedInstancesMarshaler defines marshaler for ModifyReservedInstances operation
type ModifyReservedInstancesMarshaler struct {
	Input *types.ModifyReservedInstancesInput
}

// ModifySnapshotAttributeMarshaler defines marshaler for ModifySnapshotAttribute operation
type ModifySnapshotAttributeMarshaler struct {
	Input *types.ModifySnapshotAttributeInput
}

// ModifySpotFleetRequestMarshaler defines marshaler for ModifySpotFleetRequest operation
type ModifySpotFleetRequestMarshaler struct {
	Input *types.ModifySpotFleetRequestInput
}

// ModifySubnetAttributeMarshaler defines marshaler for ModifySubnetAttribute operation
type ModifySubnetAttributeMarshaler struct {
	Input *types.ModifySubnetAttributeInput
}

// ModifyTrafficMirrorFilterNetworkServicesMarshaler defines marshaler for ModifyTrafficMirrorFilterNetworkServices operation
type ModifyTrafficMirrorFilterNetworkServicesMarshaler struct {
	Input *types.ModifyTrafficMirrorFilterNetworkServicesInput
}

// ModifyTrafficMirrorFilterRuleMarshaler defines marshaler for ModifyTrafficMirrorFilterRule operation
type ModifyTrafficMirrorFilterRuleMarshaler struct {
	Input *types.ModifyTrafficMirrorFilterRuleInput
}

// ModifyTrafficMirrorSessionMarshaler defines marshaler for ModifyTrafficMirrorSession operation
type ModifyTrafficMirrorSessionMarshaler struct {
	Input *types.ModifyTrafficMirrorSessionInput
}

// ModifyTransitGatewayVpcAttachmentMarshaler defines marshaler for ModifyTransitGatewayVpcAttachment operation
type ModifyTransitGatewayVpcAttachmentMarshaler struct {
	Input *types.ModifyTransitGatewayVpcAttachmentInput
}

// ModifyVolumeMarshaler defines marshaler for ModifyVolume operation
type ModifyVolumeMarshaler struct {
	Input *types.ModifyVolumeInput
}

// ModifyVolumeAttributeMarshaler defines marshaler for ModifyVolumeAttribute operation
type ModifyVolumeAttributeMarshaler struct {
	Input *types.ModifyVolumeAttributeInput
}

// ModifyVpcAttributeMarshaler defines marshaler for ModifyVpcAttribute operation
type ModifyVpcAttributeMarshaler struct {
	Input *types.ModifyVpcAttributeInput
}

// ModifyVpcEndpointMarshaler defines marshaler for ModifyVpcEndpoint operation
type ModifyVpcEndpointMarshaler struct {
	Input *types.ModifyVpcEndpointInput
}

// ModifyVpcEndpointConnectionNotificationMarshaler defines marshaler for ModifyVpcEndpointConnectionNotification operation
type ModifyVpcEndpointConnectionNotificationMarshaler struct {
	Input *types.ModifyVpcEndpointConnectionNotificationInput
}

// ModifyVpcEndpointServiceConfigurationMarshaler defines marshaler for ModifyVpcEndpointServiceConfiguration operation
type ModifyVpcEndpointServiceConfigurationMarshaler struct {
	Input *types.ModifyVpcEndpointServiceConfigurationInput
}

// ModifyVpcEndpointServicePermissionsMarshaler defines marshaler for ModifyVpcEndpointServicePermissions operation
type ModifyVpcEndpointServicePermissionsMarshaler struct {
	Input *types.ModifyVpcEndpointServicePermissionsInput
}

// ModifyVpcPeeringConnectionOptionsMarshaler defines marshaler for ModifyVpcPeeringConnectionOptions operation
type ModifyVpcPeeringConnectionOptionsMarshaler struct {
	Input *types.ModifyVpcPeeringConnectionOptionsInput
}

// ModifyVpcTenancyMarshaler defines marshaler for ModifyVpcTenancy operation
type ModifyVpcTenancyMarshaler struct {
	Input *types.ModifyVpcTenancyInput
}

// ModifyVpnConnectionMarshaler defines marshaler for ModifyVpnConnection operation
type ModifyVpnConnectionMarshaler struct {
	Input *types.ModifyVpnConnectionInput
}

// ModifyVpnTunnelCertificateMarshaler defines marshaler for ModifyVpnTunnelCertificate operation
type ModifyVpnTunnelCertificateMarshaler struct {
	Input *types.ModifyVpnTunnelCertificateInput
}

// ModifyVpnTunnelOptionsMarshaler defines marshaler for ModifyVpnTunnelOptions operation
type ModifyVpnTunnelOptionsMarshaler struct {
	Input *types.ModifyVpnTunnelOptionsInput
}

// MonitorInstancesMarshaler defines marshaler for MonitorInstances operation
type MonitorInstancesMarshaler struct {
	Input *types.MonitorInstancesInput
}

// MoveAddressToVpcMarshaler defines marshaler for MoveAddressToVpc operation
type MoveAddressToVpcMarshaler struct {
	Input *types.MoveAddressToVpcInput
}

// ProvisionByoipCidrMarshaler defines marshaler for ProvisionByoipCidr operation
type ProvisionByoipCidrMarshaler struct {
	Input *types.ProvisionByoipCidrInput
}

// PurchaseHostReservationMarshaler defines marshaler for PurchaseHostReservation operation
type PurchaseHostReservationMarshaler struct {
	Input *types.PurchaseHostReservationInput
}

// PurchaseReservedInstancesOfferingMarshaler defines marshaler for PurchaseReservedInstancesOffering operation
type PurchaseReservedInstancesOfferingMarshaler struct {
	Input *types.PurchaseReservedInstancesOfferingInput
}

// PurchaseScheduledInstancesMarshaler defines marshaler for PurchaseScheduledInstances operation
type PurchaseScheduledInstancesMarshaler struct {
	Input *types.PurchaseScheduledInstancesInput
}

// RebootInstancesMarshaler defines marshaler for RebootInstances operation
type RebootInstancesMarshaler struct {
	Input *types.RebootInstancesInput
}

// RegisterImageMarshaler defines marshaler for RegisterImage operation
type RegisterImageMarshaler struct {
	Input *types.RegisterImageInput
}

// RejectTransitGatewayVpcAttachmentMarshaler defines marshaler for RejectTransitGatewayVpcAttachment operation
type RejectTransitGatewayVpcAttachmentMarshaler struct {
	Input *types.RejectTransitGatewayVpcAttachmentInput
}

// RejectVpcEndpointConnectionsMarshaler defines marshaler for RejectVpcEndpointConnections operation
type RejectVpcEndpointConnectionsMarshaler struct {
	Input *types.RejectVpcEndpointConnectionsInput
}

// RejectVpcPeeringConnectionMarshaler defines marshaler for RejectVpcPeeringConnection operation
type RejectVpcPeeringConnectionMarshaler struct {
	Input *types.RejectVpcPeeringConnectionInput
}

// ReleaseAddressMarshaler defines marshaler for ReleaseAddress operation
type ReleaseAddressMarshaler struct {
	Input *types.ReleaseAddressInput
}

// ReleaseHostsMarshaler defines marshaler for ReleaseHosts operation
type ReleaseHostsMarshaler struct {
	Input *types.ReleaseHostsInput
}

// ReplaceIamInstanceProfileAssociationMarshaler defines marshaler for ReplaceIamInstanceProfileAssociation operation
type ReplaceIamInstanceProfileAssociationMarshaler struct {
	Input *types.ReplaceIamInstanceProfileAssociationInput
}

// ReplaceNetworkAclAssociationMarshaler defines marshaler for ReplaceNetworkAclAssociation operation
type ReplaceNetworkAclAssociationMarshaler struct {
	Input *types.ReplaceNetworkAclAssociationInput
}

// ReplaceNetworkAclEntryMarshaler defines marshaler for ReplaceNetworkAclEntry operation
type ReplaceNetworkAclEntryMarshaler struct {
	Input *types.ReplaceNetworkAclEntryInput
}

// ReplaceRouteMarshaler defines marshaler for ReplaceRoute operation
type ReplaceRouteMarshaler struct {
	Input *types.ReplaceRouteInput
}

// ReplaceRouteTableAssociationMarshaler defines marshaler for ReplaceRouteTableAssociation operation
type ReplaceRouteTableAssociationMarshaler struct {
	Input *types.ReplaceRouteTableAssociationInput
}

// ReplaceTransitGatewayRouteMarshaler defines marshaler for ReplaceTransitGatewayRoute operation
type ReplaceTransitGatewayRouteMarshaler struct {
	Input *types.ReplaceTransitGatewayRouteInput
}

// ReportInstanceStatusMarshaler defines marshaler for ReportInstanceStatus operation
type ReportInstanceStatusMarshaler struct {
	Input *types.ReportInstanceStatusInput
}

// RequestSpotFleetMarshaler defines marshaler for RequestSpotFleet operation
type RequestSpotFleetMarshaler struct {
	Input *types.RequestSpotFleetInput
}

// RequestSpotInstancesMarshaler defines marshaler for RequestSpotInstances operation
type RequestSpotInstancesMarshaler struct {
	Input *types.RequestSpotInstancesInput
}

// ResetEbsDefaultKmsKeyIdMarshaler defines marshaler for ResetEbsDefaultKmsKeyId operation
type ResetEbsDefaultKmsKeyIdMarshaler struct {
	Input *types.ResetEbsDefaultKmsKeyIdInput
}

// ResetFpgaImageAttributeMarshaler defines marshaler for ResetFpgaImageAttribute operation
type ResetFpgaImageAttributeMarshaler struct {
	Input *types.ResetFpgaImageAttributeInput
}

// ResetImageAttributeMarshaler defines marshaler for ResetImageAttribute operation
type ResetImageAttributeMarshaler struct {
	Input *types.ResetImageAttributeInput
}

// ResetInstanceAttributeMarshaler defines marshaler for ResetInstanceAttribute operation
type ResetInstanceAttributeMarshaler struct {
	Input *types.ResetInstanceAttributeInput
}

// ResetNetworkInterfaceAttributeMarshaler defines marshaler for ResetNetworkInterfaceAttribute operation
type ResetNetworkInterfaceAttributeMarshaler struct {
	Input *types.ResetNetworkInterfaceAttributeInput
}

// ResetSnapshotAttributeMarshaler defines marshaler for ResetSnapshotAttribute operation
type ResetSnapshotAttributeMarshaler struct {
	Input *types.ResetSnapshotAttributeInput
}

// RestoreAddressToClassicMarshaler defines marshaler for RestoreAddressToClassic operation
type RestoreAddressToClassicMarshaler struct {
	Input *types.RestoreAddressToClassicInput
}

// RevokeClientVpnIngressMarshaler defines marshaler for RevokeClientVpnIngress operation
type RevokeClientVpnIngressMarshaler struct {
	Input *types.RevokeClientVpnIngressInput
}

// RevokeSecurityGroupEgressMarshaler defines marshaler for RevokeSecurityGroupEgress operation
type RevokeSecurityGroupEgressMarshaler struct {
	Input *types.RevokeSecurityGroupEgressInput
}

// RevokeSecurityGroupIngressMarshaler defines marshaler for RevokeSecurityGroupIngress operation
type RevokeSecurityGroupIngressMarshaler struct {
	Input *types.RevokeSecurityGroupIngressInput
}

// RunInstancesMarshaler defines marshaler for RunInstances operation
type RunInstancesMarshaler struct {
	Input *types.RunInstancesInput
}

// RunScheduledInstancesMarshaler defines marshaler for RunScheduledInstances operation
type RunScheduledInstancesMarshaler struct {
	Input *types.RunScheduledInstancesInput
}

// SearchTransitGatewayRoutesMarshaler defines marshaler for SearchTransitGatewayRoutes operation
type SearchTransitGatewayRoutesMarshaler struct {
	Input *types.SearchTransitGatewayRoutesInput
}

// SendDiagnosticInterruptMarshaler defines marshaler for SendDiagnosticInterrupt operation
type SendDiagnosticInterruptMarshaler struct {
	Input *types.SendDiagnosticInterruptInput
}

// StartInstancesMarshaler defines marshaler for StartInstances operation
type StartInstancesMarshaler struct {
	Input *types.StartInstancesInput
}

// StopInstancesMarshaler defines marshaler for StopInstances operation
type StopInstancesMarshaler struct {
	Input *types.StopInstancesInput
}

// TerminateClientVpnConnectionsMarshaler defines marshaler for TerminateClientVpnConnections operation
type TerminateClientVpnConnectionsMarshaler struct {
	Input *types.TerminateClientVpnConnectionsInput
}

// TerminateInstancesMarshaler defines marshaler for TerminateInstances operation
type TerminateInstancesMarshaler struct {
	Input *types.TerminateInstancesInput
}

// UnassignIpv6AddressesMarshaler defines marshaler for UnassignIpv6Addresses operation
type UnassignIpv6AddressesMarshaler struct {
	Input *types.UnassignIpv6AddressesInput
}

// UnassignPrivateIpAddressesMarshaler defines marshaler for UnassignPrivateIpAddresses operation
type UnassignPrivateIpAddressesMarshaler struct {
	Input *types.UnassignPrivateIpAddressesInput
}

// UnmonitorInstancesMarshaler defines marshaler for UnmonitorInstances operation
type UnmonitorInstancesMarshaler struct {
	Input *types.UnmonitorInstancesInput
}

// UpdateSecurityGroupRuleDescriptionsEgressMarshaler defines marshaler for UpdateSecurityGroupRuleDescriptionsEgress operation
type UpdateSecurityGroupRuleDescriptionsEgressMarshaler struct {
	Input *types.UpdateSecurityGroupRuleDescriptionsEgressInput
}

// UpdateSecurityGroupRuleDescriptionsIngressMarshaler defines marshaler for UpdateSecurityGroupRuleDescriptionsIngress operation
type UpdateSecurityGroupRuleDescriptionsIngressMarshaler struct {
	Input *types.UpdateSecurityGroupRuleDescriptionsIngressInput
}

// WithdrawByoipCidrMarshaler defines marshaler for WithdrawByoipCidr operation
type WithdrawByoipCidrMarshaler struct {
	Input *types.WithdrawByoipCidrInput
}

func MarshalAcceptReservedInstancesExchangeQuoteInputShapeAWSEC2Query(v *types.AcceptReservedInstancesExchangeQuoteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAcceptTransitGatewayVpcAttachmentInputShapeAWSEC2Query(v *types.AcceptTransitGatewayVpcAttachmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAcceptVpcEndpointConnectionsInputShapeAWSEC2Query(v *types.AcceptVpcEndpointConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAcceptVpcPeeringConnectionInputShapeAWSEC2Query(v *types.AcceptVpcPeeringConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAdvertiseByoipCidrInputShapeAWSEC2Query(v *types.AdvertiseByoipCidrInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAllocateAddressInputShapeAWSEC2Query(v *types.AllocateAddressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAllocateHostsInputShapeAWSEC2Query(v *types.AllocateHostsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalApplySecurityGroupsToClientVpnTargetNetworkInputShapeAWSEC2Query(v *types.ApplySecurityGroupsToClientVpnTargetNetworkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssignIpv6AddressesInputShapeAWSEC2Query(v *types.AssignIpv6AddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssignPrivateIpAddressesInputShapeAWSEC2Query(v *types.AssignPrivateIpAddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateAddressInputShapeAWSEC2Query(v *types.AssociateAddressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateClientVpnTargetNetworkInputShapeAWSEC2Query(v *types.AssociateClientVpnTargetNetworkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateDhcpOptionsInputShapeAWSEC2Query(v *types.AssociateDhcpOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateIamInstanceProfileInputShapeAWSEC2Query(v *types.AssociateIamInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateRouteTableInputShapeAWSEC2Query(v *types.AssociateRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateSubnetCidrBlockInputShapeAWSEC2Query(v *types.AssociateSubnetCidrBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateTransitGatewayRouteTableInputShapeAWSEC2Query(v *types.AssociateTransitGatewayRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAssociateVpcCidrBlockInputShapeAWSEC2Query(v *types.AssociateVpcCidrBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAttachClassicLinkVpcInputShapeAWSEC2Query(v *types.AttachClassicLinkVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAttachInternetGatewayInputShapeAWSEC2Query(v *types.AttachInternetGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAttachNetworkInterfaceInputShapeAWSEC2Query(v *types.AttachNetworkInterfaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAttachVolumeInputShapeAWSEC2Query(v *types.AttachVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAttachVpnGatewayInputShapeAWSEC2Query(v *types.AttachVpnGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAuthorizeClientVpnIngressInputShapeAWSEC2Query(v *types.AuthorizeClientVpnIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAuthorizeSecurityGroupEgressInputShapeAWSEC2Query(v *types.AuthorizeSecurityGroupEgressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalAuthorizeSecurityGroupIngressInputShapeAWSEC2Query(v *types.AuthorizeSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalBundleInstanceInputShapeAWSEC2Query(v *types.BundleInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelBundleTaskInputShapeAWSEC2Query(v *types.CancelBundleTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelCapacityReservationInputShapeAWSEC2Query(v *types.CancelCapacityReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelConversionTaskInputShapeAWSEC2Query(v *types.CancelConversionTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelExportTaskInputShapeAWSEC2Query(v *types.CancelExportTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelImportTaskInputShapeAWSEC2Query(v *types.CancelImportTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelReservedInstancesListingInputShapeAWSEC2Query(v *types.CancelReservedInstancesListingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelSpotFleetRequestsInputShapeAWSEC2Query(v *types.CancelSpotFleetRequestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCancelSpotInstanceRequestsInputShapeAWSEC2Query(v *types.CancelSpotInstanceRequestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalConfirmProductInstanceInputShapeAWSEC2Query(v *types.ConfirmProductInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCopyFpgaImageInputShapeAWSEC2Query(v *types.CopyFpgaImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCopyImageInputShapeAWSEC2Query(v *types.CopyImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCopySnapshotInputShapeAWSEC2Query(v *types.CopySnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateCapacityReservationInputShapeAWSEC2Query(v *types.CreateCapacityReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateClientVpnEndpointInputShapeAWSEC2Query(v *types.CreateClientVpnEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateClientVpnRouteInputShapeAWSEC2Query(v *types.CreateClientVpnRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateCustomerGatewayInputShapeAWSEC2Query(v *types.CreateCustomerGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateDefaultSubnetInputShapeAWSEC2Query(v *types.CreateDefaultSubnetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateDefaultVpcInputShapeAWSEC2Query(v *types.CreateDefaultVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateDhcpOptionsInputShapeAWSEC2Query(v *types.CreateDhcpOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateEgressOnlyInternetGatewayInputShapeAWSEC2Query(v *types.CreateEgressOnlyInternetGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateFleetInputShapeAWSEC2Query(v *types.CreateFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateFlowLogsInputShapeAWSEC2Query(v *types.CreateFlowLogsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateFpgaImageInputShapeAWSEC2Query(v *types.CreateFpgaImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateImageInputShapeAWSEC2Query(v *types.CreateImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateInstanceExportTaskInputShapeAWSEC2Query(v *types.CreateInstanceExportTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateInternetGatewayInputShapeAWSEC2Query(v *types.CreateInternetGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateKeyPairInputShapeAWSEC2Query(v *types.CreateKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateLaunchTemplateInputShapeAWSEC2Query(v *types.CreateLaunchTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateLaunchTemplateVersionInputShapeAWSEC2Query(v *types.CreateLaunchTemplateVersionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateNatGatewayInputShapeAWSEC2Query(v *types.CreateNatGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateNetworkAclInputShapeAWSEC2Query(v *types.CreateNetworkAclInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateNetworkAclEntryInputShapeAWSEC2Query(v *types.CreateNetworkAclEntryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateNetworkInterfaceInputShapeAWSEC2Query(v *types.CreateNetworkInterfaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateNetworkInterfacePermissionInputShapeAWSEC2Query(v *types.CreateNetworkInterfacePermissionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreatePlacementGroupInputShapeAWSEC2Query(v *types.CreatePlacementGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateReservedInstancesListingInputShapeAWSEC2Query(v *types.CreateReservedInstancesListingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateRouteInputShapeAWSEC2Query(v *types.CreateRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateRouteTableInputShapeAWSEC2Query(v *types.CreateRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateSecurityGroupInputShapeAWSEC2Query(v *types.CreateSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateSnapshotInputShapeAWSEC2Query(v *types.CreateSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateSnapshotsInputShapeAWSEC2Query(v *types.CreateSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateSpotDatafeedSubscriptionInputShapeAWSEC2Query(v *types.CreateSpotDatafeedSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateSubnetInputShapeAWSEC2Query(v *types.CreateSubnetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTagsInputShapeAWSEC2Query(v *types.CreateTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTrafficMirrorFilterInputShapeAWSEC2Query(v *types.CreateTrafficMirrorFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTrafficMirrorFilterRuleInputShapeAWSEC2Query(v *types.CreateTrafficMirrorFilterRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTrafficMirrorSessionInputShapeAWSEC2Query(v *types.CreateTrafficMirrorSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTrafficMirrorTargetInputShapeAWSEC2Query(v *types.CreateTrafficMirrorTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTransitGatewayInputShapeAWSEC2Query(v *types.CreateTransitGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTransitGatewayRouteInputShapeAWSEC2Query(v *types.CreateTransitGatewayRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTransitGatewayRouteTableInputShapeAWSEC2Query(v *types.CreateTransitGatewayRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateTransitGatewayVpcAttachmentInputShapeAWSEC2Query(v *types.CreateTransitGatewayVpcAttachmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVolumeInputShapeAWSEC2Query(v *types.CreateVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpcInputShapeAWSEC2Query(v *types.CreateVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpcEndpointInputShapeAWSEC2Query(v *types.CreateVpcEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpcEndpointConnectionNotificationInputShapeAWSEC2Query(v *types.CreateVpcEndpointConnectionNotificationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpcEndpointServiceConfigurationInputShapeAWSEC2Query(v *types.CreateVpcEndpointServiceConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpcPeeringConnectionInputShapeAWSEC2Query(v *types.CreateVpcPeeringConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpnConnectionInputShapeAWSEC2Query(v *types.CreateVpnConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpnConnectionRouteInputShapeAWSEC2Query(v *types.CreateVpnConnectionRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalCreateVpnGatewayInputShapeAWSEC2Query(v *types.CreateVpnGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteClientVpnEndpointInputShapeAWSEC2Query(v *types.DeleteClientVpnEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteClientVpnRouteInputShapeAWSEC2Query(v *types.DeleteClientVpnRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteCustomerGatewayInputShapeAWSEC2Query(v *types.DeleteCustomerGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteDhcpOptionsInputShapeAWSEC2Query(v *types.DeleteDhcpOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteEgressOnlyInternetGatewayInputShapeAWSEC2Query(v *types.DeleteEgressOnlyInternetGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteFleetsInputShapeAWSEC2Query(v *types.DeleteFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteFlowLogsInputShapeAWSEC2Query(v *types.DeleteFlowLogsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteFpgaImageInputShapeAWSEC2Query(v *types.DeleteFpgaImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteInternetGatewayInputShapeAWSEC2Query(v *types.DeleteInternetGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteKeyPairInputShapeAWSEC2Query(v *types.DeleteKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteLaunchTemplateInputShapeAWSEC2Query(v *types.DeleteLaunchTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteLaunchTemplateVersionsInputShapeAWSEC2Query(v *types.DeleteLaunchTemplateVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteNatGatewayInputShapeAWSEC2Query(v *types.DeleteNatGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteNetworkAclInputShapeAWSEC2Query(v *types.DeleteNetworkAclInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteNetworkAclEntryInputShapeAWSEC2Query(v *types.DeleteNetworkAclEntryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteNetworkInterfaceInputShapeAWSEC2Query(v *types.DeleteNetworkInterfaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteNetworkInterfacePermissionInputShapeAWSEC2Query(v *types.DeleteNetworkInterfacePermissionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeletePlacementGroupInputShapeAWSEC2Query(v *types.DeletePlacementGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteQueuedReservedInstancesInputShapeAWSEC2Query(v *types.DeleteQueuedReservedInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteRouteInputShapeAWSEC2Query(v *types.DeleteRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteRouteTableInputShapeAWSEC2Query(v *types.DeleteRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteSecurityGroupInputShapeAWSEC2Query(v *types.DeleteSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteSnapshotInputShapeAWSEC2Query(v *types.DeleteSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteSpotDatafeedSubscriptionInputShapeAWSEC2Query(v *types.DeleteSpotDatafeedSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteSubnetInputShapeAWSEC2Query(v *types.DeleteSubnetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTagsInputShapeAWSEC2Query(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTrafficMirrorFilterInputShapeAWSEC2Query(v *types.DeleteTrafficMirrorFilterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTrafficMirrorFilterRuleInputShapeAWSEC2Query(v *types.DeleteTrafficMirrorFilterRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTrafficMirrorSessionInputShapeAWSEC2Query(v *types.DeleteTrafficMirrorSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTrafficMirrorTargetInputShapeAWSEC2Query(v *types.DeleteTrafficMirrorTargetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTransitGatewayInputShapeAWSEC2Query(v *types.DeleteTransitGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTransitGatewayRouteInputShapeAWSEC2Query(v *types.DeleteTransitGatewayRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTransitGatewayRouteTableInputShapeAWSEC2Query(v *types.DeleteTransitGatewayRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteTransitGatewayVpcAttachmentInputShapeAWSEC2Query(v *types.DeleteTransitGatewayVpcAttachmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVolumeInputShapeAWSEC2Query(v *types.DeleteVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpcInputShapeAWSEC2Query(v *types.DeleteVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpcEndpointConnectionNotificationsInputShapeAWSEC2Query(v *types.DeleteVpcEndpointConnectionNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpcEndpointServiceConfigurationsInputShapeAWSEC2Query(v *types.DeleteVpcEndpointServiceConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpcEndpointsInputShapeAWSEC2Query(v *types.DeleteVpcEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpcPeeringConnectionInputShapeAWSEC2Query(v *types.DeleteVpcPeeringConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpnConnectionInputShapeAWSEC2Query(v *types.DeleteVpnConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpnConnectionRouteInputShapeAWSEC2Query(v *types.DeleteVpnConnectionRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeleteVpnGatewayInputShapeAWSEC2Query(v *types.DeleteVpnGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeprovisionByoipCidrInputShapeAWSEC2Query(v *types.DeprovisionByoipCidrInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDeregisterImageInputShapeAWSEC2Query(v *types.DeregisterImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeAccountAttributesInputShapeAWSEC2Query(v *types.DescribeAccountAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeAddressesInputShapeAWSEC2Query(v *types.DescribeAddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeAggregateIdFormatInputShapeAWSEC2Query(v *types.DescribeAggregateIdFormatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeAvailabilityZonesInputShapeAWSEC2Query(v *types.DescribeAvailabilityZonesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeBundleTasksInputShapeAWSEC2Query(v *types.DescribeBundleTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeByoipCidrsInputShapeAWSEC2Query(v *types.DescribeByoipCidrsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeCapacityReservationsInputShapeAWSEC2Query(v *types.DescribeCapacityReservationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeClassicLinkInstancesInputShapeAWSEC2Query(v *types.DescribeClassicLinkInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeClientVpnAuthorizationRulesInputShapeAWSEC2Query(v *types.DescribeClientVpnAuthorizationRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeClientVpnConnectionsInputShapeAWSEC2Query(v *types.DescribeClientVpnConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeClientVpnEndpointsInputShapeAWSEC2Query(v *types.DescribeClientVpnEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeClientVpnRoutesInputShapeAWSEC2Query(v *types.DescribeClientVpnRoutesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeClientVpnTargetNetworksInputShapeAWSEC2Query(v *types.DescribeClientVpnTargetNetworksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeConversionTasksInputShapeAWSEC2Query(v *types.DescribeConversionTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeCustomerGatewaysInputShapeAWSEC2Query(v *types.DescribeCustomerGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeDhcpOptionsInputShapeAWSEC2Query(v *types.DescribeDhcpOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeEgressOnlyInternetGatewaysInputShapeAWSEC2Query(v *types.DescribeEgressOnlyInternetGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeElasticGpusInputShapeAWSEC2Query(v *types.DescribeElasticGpusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeExportImageTasksInputShapeAWSEC2Query(v *types.DescribeExportImageTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeExportTasksInputShapeAWSEC2Query(v *types.DescribeExportTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFastSnapshotRestoresInputShapeAWSEC2Query(v *types.DescribeFastSnapshotRestoresInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFleetHistoryInputShapeAWSEC2Query(v *types.DescribeFleetHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFleetInstancesInputShapeAWSEC2Query(v *types.DescribeFleetInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFleetsInputShapeAWSEC2Query(v *types.DescribeFleetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFlowLogsInputShapeAWSEC2Query(v *types.DescribeFlowLogsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFpgaImageAttributeInputShapeAWSEC2Query(v *types.DescribeFpgaImageAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeFpgaImagesInputShapeAWSEC2Query(v *types.DescribeFpgaImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeHostReservationOfferingsInputShapeAWSEC2Query(v *types.DescribeHostReservationOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeHostReservationsInputShapeAWSEC2Query(v *types.DescribeHostReservationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeHostsInputShapeAWSEC2Query(v *types.DescribeHostsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeIamInstanceProfileAssociationsInputShapeAWSEC2Query(v *types.DescribeIamInstanceProfileAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeIdFormatInputShapeAWSEC2Query(v *types.DescribeIdFormatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeIdentityIdFormatInputShapeAWSEC2Query(v *types.DescribeIdentityIdFormatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeImageAttributeInputShapeAWSEC2Query(v *types.DescribeImageAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeImagesInputShapeAWSEC2Query(v *types.DescribeImagesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeImportImageTasksInputShapeAWSEC2Query(v *types.DescribeImportImageTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeImportSnapshotTasksInputShapeAWSEC2Query(v *types.DescribeImportSnapshotTasksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeInstanceAttributeInputShapeAWSEC2Query(v *types.DescribeInstanceAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeInstanceCreditSpecificationsInputShapeAWSEC2Query(v *types.DescribeInstanceCreditSpecificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeInstanceStatusInputShapeAWSEC2Query(v *types.DescribeInstanceStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeInstancesInputShapeAWSEC2Query(v *types.DescribeInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeInternetGatewaysInputShapeAWSEC2Query(v *types.DescribeInternetGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeKeyPairsInputShapeAWSEC2Query(v *types.DescribeKeyPairsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeLaunchTemplateVersionsInputShapeAWSEC2Query(v *types.DescribeLaunchTemplateVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeLaunchTemplatesInputShapeAWSEC2Query(v *types.DescribeLaunchTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeMovingAddressesInputShapeAWSEC2Query(v *types.DescribeMovingAddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeNatGatewaysInputShapeAWSEC2Query(v *types.DescribeNatGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeNetworkAclsInputShapeAWSEC2Query(v *types.DescribeNetworkAclsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeNetworkInterfaceAttributeInputShapeAWSEC2Query(v *types.DescribeNetworkInterfaceAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeNetworkInterfacePermissionsInputShapeAWSEC2Query(v *types.DescribeNetworkInterfacePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeNetworkInterfacesInputShapeAWSEC2Query(v *types.DescribeNetworkInterfacesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribePlacementGroupsInputShapeAWSEC2Query(v *types.DescribePlacementGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribePrefixListsInputShapeAWSEC2Query(v *types.DescribePrefixListsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribePrincipalIdFormatInputShapeAWSEC2Query(v *types.DescribePrincipalIdFormatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribePublicIpv4PoolsInputShapeAWSEC2Query(v *types.DescribePublicIpv4PoolsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeRegionsInputShapeAWSEC2Query(v *types.DescribeRegionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeReservedInstancesInputShapeAWSEC2Query(v *types.DescribeReservedInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeReservedInstancesListingsInputShapeAWSEC2Query(v *types.DescribeReservedInstancesListingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeReservedInstancesModificationsInputShapeAWSEC2Query(v *types.DescribeReservedInstancesModificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeReservedInstancesOfferingsInputShapeAWSEC2Query(v *types.DescribeReservedInstancesOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeRouteTablesInputShapeAWSEC2Query(v *types.DescribeRouteTablesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeScheduledInstanceAvailabilityInputShapeAWSEC2Query(v *types.DescribeScheduledInstanceAvailabilityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeScheduledInstancesInputShapeAWSEC2Query(v *types.DescribeScheduledInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSecurityGroupReferencesInputShapeAWSEC2Query(v *types.DescribeSecurityGroupReferencesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSecurityGroupsInputShapeAWSEC2Query(v *types.DescribeSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSnapshotAttributeInputShapeAWSEC2Query(v *types.DescribeSnapshotAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSnapshotsInputShapeAWSEC2Query(v *types.DescribeSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSpotDatafeedSubscriptionInputShapeAWSEC2Query(v *types.DescribeSpotDatafeedSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSpotFleetInstancesInputShapeAWSEC2Query(v *types.DescribeSpotFleetInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSpotFleetRequestHistoryInputShapeAWSEC2Query(v *types.DescribeSpotFleetRequestHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSpotFleetRequestsInputShapeAWSEC2Query(v *types.DescribeSpotFleetRequestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSpotInstanceRequestsInputShapeAWSEC2Query(v *types.DescribeSpotInstanceRequestsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSpotPriceHistoryInputShapeAWSEC2Query(v *types.DescribeSpotPriceHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeStaleSecurityGroupsInputShapeAWSEC2Query(v *types.DescribeStaleSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeSubnetsInputShapeAWSEC2Query(v *types.DescribeSubnetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTagsInputShapeAWSEC2Query(v *types.DescribeTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTrafficMirrorFiltersInputShapeAWSEC2Query(v *types.DescribeTrafficMirrorFiltersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTrafficMirrorSessionsInputShapeAWSEC2Query(v *types.DescribeTrafficMirrorSessionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTrafficMirrorTargetsInputShapeAWSEC2Query(v *types.DescribeTrafficMirrorTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTransitGatewayAttachmentsInputShapeAWSEC2Query(v *types.DescribeTransitGatewayAttachmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTransitGatewayRouteTablesInputShapeAWSEC2Query(v *types.DescribeTransitGatewayRouteTablesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTransitGatewayVpcAttachmentsInputShapeAWSEC2Query(v *types.DescribeTransitGatewayVpcAttachmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeTransitGatewaysInputShapeAWSEC2Query(v *types.DescribeTransitGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVolumeAttributeInputShapeAWSEC2Query(v *types.DescribeVolumeAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVolumeStatusInputShapeAWSEC2Query(v *types.DescribeVolumeStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVolumesInputShapeAWSEC2Query(v *types.DescribeVolumesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVolumesModificationsInputShapeAWSEC2Query(v *types.DescribeVolumesModificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcAttributeInputShapeAWSEC2Query(v *types.DescribeVpcAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcClassicLinkInputShapeAWSEC2Query(v *types.DescribeVpcClassicLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcClassicLinkDnsSupportInputShapeAWSEC2Query(v *types.DescribeVpcClassicLinkDnsSupportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcEndpointConnectionNotificationsInputShapeAWSEC2Query(v *types.DescribeVpcEndpointConnectionNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcEndpointConnectionsInputShapeAWSEC2Query(v *types.DescribeVpcEndpointConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcEndpointServiceConfigurationsInputShapeAWSEC2Query(v *types.DescribeVpcEndpointServiceConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcEndpointServicePermissionsInputShapeAWSEC2Query(v *types.DescribeVpcEndpointServicePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcEndpointServicesInputShapeAWSEC2Query(v *types.DescribeVpcEndpointServicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcEndpointsInputShapeAWSEC2Query(v *types.DescribeVpcEndpointsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcPeeringConnectionsInputShapeAWSEC2Query(v *types.DescribeVpcPeeringConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpcsInputShapeAWSEC2Query(v *types.DescribeVpcsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpnConnectionsInputShapeAWSEC2Query(v *types.DescribeVpnConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDescribeVpnGatewaysInputShapeAWSEC2Query(v *types.DescribeVpnGatewaysInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDetachClassicLinkVpcInputShapeAWSEC2Query(v *types.DetachClassicLinkVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDetachInternetGatewayInputShapeAWSEC2Query(v *types.DetachInternetGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDetachNetworkInterfaceInputShapeAWSEC2Query(v *types.DetachNetworkInterfaceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDetachVolumeInputShapeAWSEC2Query(v *types.DetachVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDetachVpnGatewayInputShapeAWSEC2Query(v *types.DetachVpnGatewayInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisableEbsEncryptionByDefaultInputShapeAWSEC2Query(v *types.DisableEbsEncryptionByDefaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisableFastSnapshotRestoresInputShapeAWSEC2Query(v *types.DisableFastSnapshotRestoresInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisableTransitGatewayRouteTablePropagationInputShapeAWSEC2Query(v *types.DisableTransitGatewayRouteTablePropagationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisableVgwRoutePropagationInputShapeAWSEC2Query(v *types.DisableVgwRoutePropagationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisableVpcClassicLinkInputShapeAWSEC2Query(v *types.DisableVpcClassicLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisableVpcClassicLinkDnsSupportInputShapeAWSEC2Query(v *types.DisableVpcClassicLinkDnsSupportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateAddressInputShapeAWSEC2Query(v *types.DisassociateAddressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateClientVpnTargetNetworkInputShapeAWSEC2Query(v *types.DisassociateClientVpnTargetNetworkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateIamInstanceProfileInputShapeAWSEC2Query(v *types.DisassociateIamInstanceProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateRouteTableInputShapeAWSEC2Query(v *types.DisassociateRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateSubnetCidrBlockInputShapeAWSEC2Query(v *types.DisassociateSubnetCidrBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateTransitGatewayRouteTableInputShapeAWSEC2Query(v *types.DisassociateTransitGatewayRouteTableInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalDisassociateVpcCidrBlockInputShapeAWSEC2Query(v *types.DisassociateVpcCidrBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableEbsEncryptionByDefaultInputShapeAWSEC2Query(v *types.EnableEbsEncryptionByDefaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableFastSnapshotRestoresInputShapeAWSEC2Query(v *types.EnableFastSnapshotRestoresInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableTransitGatewayRouteTablePropagationInputShapeAWSEC2Query(v *types.EnableTransitGatewayRouteTablePropagationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableVgwRoutePropagationInputShapeAWSEC2Query(v *types.EnableVgwRoutePropagationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableVolumeIOInputShapeAWSEC2Query(v *types.EnableVolumeIOInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableVpcClassicLinkInputShapeAWSEC2Query(v *types.EnableVpcClassicLinkInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalEnableVpcClassicLinkDnsSupportInputShapeAWSEC2Query(v *types.EnableVpcClassicLinkDnsSupportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalExportClientVpnClientCertificateRevocationListInputShapeAWSEC2Query(v *types.ExportClientVpnClientCertificateRevocationListInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalExportClientVpnClientConfigurationInputShapeAWSEC2Query(v *types.ExportClientVpnClientConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalExportImageInputShapeAWSEC2Query(v *types.ExportImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalExportTransitGatewayRoutesInputShapeAWSEC2Query(v *types.ExportTransitGatewayRoutesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetCapacityReservationUsageInputShapeAWSEC2Query(v *types.GetCapacityReservationUsageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetConsoleOutputInputShapeAWSEC2Query(v *types.GetConsoleOutputInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetConsoleScreenshotInputShapeAWSEC2Query(v *types.GetConsoleScreenshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetEbsDefaultKmsKeyIdInputShapeAWSEC2Query(v *types.GetEbsDefaultKmsKeyIdInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetEbsEncryptionByDefaultInputShapeAWSEC2Query(v *types.GetEbsEncryptionByDefaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetHostReservationPurchasePreviewInputShapeAWSEC2Query(v *types.GetHostReservationPurchasePreviewInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetLaunchTemplateDataInputShapeAWSEC2Query(v *types.GetLaunchTemplateDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetPasswordDataInputShapeAWSEC2Query(v *types.GetPasswordDataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetReservedInstancesExchangeQuoteInputShapeAWSEC2Query(v *types.GetReservedInstancesExchangeQuoteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetTransitGatewayAttachmentPropagationsInputShapeAWSEC2Query(v *types.GetTransitGatewayAttachmentPropagationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetTransitGatewayRouteTableAssociationsInputShapeAWSEC2Query(v *types.GetTransitGatewayRouteTableAssociationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalGetTransitGatewayRouteTablePropagationsInputShapeAWSEC2Query(v *types.GetTransitGatewayRouteTablePropagationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalImportClientVpnClientCertificateRevocationListInputShapeAWSEC2Query(v *types.ImportClientVpnClientCertificateRevocationListInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalImportImageInputShapeAWSEC2Query(v *types.ImportImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalImportInstanceInputShapeAWSEC2Query(v *types.ImportInstanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalImportKeyPairInputShapeAWSEC2Query(v *types.ImportKeyPairInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalImportSnapshotInputShapeAWSEC2Query(v *types.ImportSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalImportVolumeInputShapeAWSEC2Query(v *types.ImportVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyCapacityReservationInputShapeAWSEC2Query(v *types.ModifyCapacityReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyClientVpnEndpointInputShapeAWSEC2Query(v *types.ModifyClientVpnEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyEbsDefaultKmsKeyIdInputShapeAWSEC2Query(v *types.ModifyEbsDefaultKmsKeyIdInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyFleetInputShapeAWSEC2Query(v *types.ModifyFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyFpgaImageAttributeInputShapeAWSEC2Query(v *types.ModifyFpgaImageAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyHostsInputShapeAWSEC2Query(v *types.ModifyHostsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyIdFormatInputShapeAWSEC2Query(v *types.ModifyIdFormatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyIdentityIdFormatInputShapeAWSEC2Query(v *types.ModifyIdentityIdFormatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyImageAttributeInputShapeAWSEC2Query(v *types.ModifyImageAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyInstanceAttributeInputShapeAWSEC2Query(v *types.ModifyInstanceAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyInstanceCapacityReservationAttributesInputShapeAWSEC2Query(v *types.ModifyInstanceCapacityReservationAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyInstanceCreditSpecificationInputShapeAWSEC2Query(v *types.ModifyInstanceCreditSpecificationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyInstanceEventStartTimeInputShapeAWSEC2Query(v *types.ModifyInstanceEventStartTimeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyInstanceMetadataOptionsInputShapeAWSEC2Query(v *types.ModifyInstanceMetadataOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyInstancePlacementInputShapeAWSEC2Query(v *types.ModifyInstancePlacementInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyLaunchTemplateInputShapeAWSEC2Query(v *types.ModifyLaunchTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyNetworkInterfaceAttributeInputShapeAWSEC2Query(v *types.ModifyNetworkInterfaceAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyReservedInstancesInputShapeAWSEC2Query(v *types.ModifyReservedInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifySnapshotAttributeInputShapeAWSEC2Query(v *types.ModifySnapshotAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifySpotFleetRequestInputShapeAWSEC2Query(v *types.ModifySpotFleetRequestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifySubnetAttributeInputShapeAWSEC2Query(v *types.ModifySubnetAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyTrafficMirrorFilterNetworkServicesInputShapeAWSEC2Query(v *types.ModifyTrafficMirrorFilterNetworkServicesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyTrafficMirrorFilterRuleInputShapeAWSEC2Query(v *types.ModifyTrafficMirrorFilterRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyTrafficMirrorSessionInputShapeAWSEC2Query(v *types.ModifyTrafficMirrorSessionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyTransitGatewayVpcAttachmentInputShapeAWSEC2Query(v *types.ModifyTransitGatewayVpcAttachmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVolumeInputShapeAWSEC2Query(v *types.ModifyVolumeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVolumeAttributeInputShapeAWSEC2Query(v *types.ModifyVolumeAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcAttributeInputShapeAWSEC2Query(v *types.ModifyVpcAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcEndpointInputShapeAWSEC2Query(v *types.ModifyVpcEndpointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcEndpointConnectionNotificationInputShapeAWSEC2Query(v *types.ModifyVpcEndpointConnectionNotificationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcEndpointServiceConfigurationInputShapeAWSEC2Query(v *types.ModifyVpcEndpointServiceConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcEndpointServicePermissionsInputShapeAWSEC2Query(v *types.ModifyVpcEndpointServicePermissionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcPeeringConnectionOptionsInputShapeAWSEC2Query(v *types.ModifyVpcPeeringConnectionOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpcTenancyInputShapeAWSEC2Query(v *types.ModifyVpcTenancyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpnConnectionInputShapeAWSEC2Query(v *types.ModifyVpnConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpnTunnelCertificateInputShapeAWSEC2Query(v *types.ModifyVpnTunnelCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalModifyVpnTunnelOptionsInputShapeAWSEC2Query(v *types.ModifyVpnTunnelOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalMonitorInstancesInputShapeAWSEC2Query(v *types.MonitorInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalMoveAddressToVpcInputShapeAWSEC2Query(v *types.MoveAddressToVpcInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalProvisionByoipCidrInputShapeAWSEC2Query(v *types.ProvisionByoipCidrInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalPurchaseHostReservationInputShapeAWSEC2Query(v *types.PurchaseHostReservationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalPurchaseReservedInstancesOfferingInputShapeAWSEC2Query(v *types.PurchaseReservedInstancesOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalPurchaseScheduledInstancesInputShapeAWSEC2Query(v *types.PurchaseScheduledInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRebootInstancesInputShapeAWSEC2Query(v *types.RebootInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRegisterImageInputShapeAWSEC2Query(v *types.RegisterImageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRejectTransitGatewayVpcAttachmentInputShapeAWSEC2Query(v *types.RejectTransitGatewayVpcAttachmentInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRejectVpcEndpointConnectionsInputShapeAWSEC2Query(v *types.RejectVpcEndpointConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRejectVpcPeeringConnectionInputShapeAWSEC2Query(v *types.RejectVpcPeeringConnectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReleaseAddressInputShapeAWSEC2Query(v *types.ReleaseAddressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReleaseHostsInputShapeAWSEC2Query(v *types.ReleaseHostsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReplaceIamInstanceProfileAssociationInputShapeAWSEC2Query(v *types.ReplaceIamInstanceProfileAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReplaceNetworkAclAssociationInputShapeAWSEC2Query(v *types.ReplaceNetworkAclAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReplaceNetworkAclEntryInputShapeAWSEC2Query(v *types.ReplaceNetworkAclEntryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReplaceRouteInputShapeAWSEC2Query(v *types.ReplaceRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReplaceRouteTableAssociationInputShapeAWSEC2Query(v *types.ReplaceRouteTableAssociationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReplaceTransitGatewayRouteInputShapeAWSEC2Query(v *types.ReplaceTransitGatewayRouteInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalReportInstanceStatusInputShapeAWSEC2Query(v *types.ReportInstanceStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRequestSpotFleetInputShapeAWSEC2Query(v *types.RequestSpotFleetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRequestSpotInstancesInputShapeAWSEC2Query(v *types.RequestSpotInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalResetEbsDefaultKmsKeyIdInputShapeAWSEC2Query(v *types.ResetEbsDefaultKmsKeyIdInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalResetFpgaImageAttributeInputShapeAWSEC2Query(v *types.ResetFpgaImageAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalResetImageAttributeInputShapeAWSEC2Query(v *types.ResetImageAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalResetInstanceAttributeInputShapeAWSEC2Query(v *types.ResetInstanceAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalResetNetworkInterfaceAttributeInputShapeAWSEC2Query(v *types.ResetNetworkInterfaceAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalResetSnapshotAttributeInputShapeAWSEC2Query(v *types.ResetSnapshotAttributeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRestoreAddressToClassicInputShapeAWSEC2Query(v *types.RestoreAddressToClassicInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRevokeClientVpnIngressInputShapeAWSEC2Query(v *types.RevokeClientVpnIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRevokeSecurityGroupEgressInputShapeAWSEC2Query(v *types.RevokeSecurityGroupEgressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRevokeSecurityGroupIngressInputShapeAWSEC2Query(v *types.RevokeSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRunInstancesInputShapeAWSEC2Query(v *types.RunInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalRunScheduledInstancesInputShapeAWSEC2Query(v *types.RunScheduledInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalSearchTransitGatewayRoutesInputShapeAWSEC2Query(v *types.SearchTransitGatewayRoutesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalSendDiagnosticInterruptInputShapeAWSEC2Query(v *types.SendDiagnosticInterruptInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalStartInstancesInputShapeAWSEC2Query(v *types.StartInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalStopInstancesInputShapeAWSEC2Query(v *types.StopInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalTerminateClientVpnConnectionsInputShapeAWSEC2Query(v *types.TerminateClientVpnConnectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalTerminateInstancesInputShapeAWSEC2Query(v *types.TerminateInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalUnassignIpv6AddressesInputShapeAWSEC2Query(v *types.UnassignIpv6AddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalUnassignPrivateIpAddressesInputShapeAWSEC2Query(v *types.UnassignPrivateIpAddressesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalUnmonitorInstancesInputShapeAWSEC2Query(v *types.UnmonitorInstancesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalUpdateSecurityGroupRuleDescriptionsEgressInputShapeAWSEC2Query(v *types.UpdateSecurityGroupRuleDescriptionsEgressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalUpdateSecurityGroupRuleDescriptionsIngressInputShapeAWSEC2Query(v *types.UpdateSecurityGroupRuleDescriptionsIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}

func MarshalWithdrawByoipCidrInputShapeAWSEC2Query(v *types.WithdrawByoipCidrInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	ec2query.Build(r)
	return nil
}
func (m AcceptReservedInstancesExchangeQuoteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptReservedInstancesExchangeQuoteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptReservedInstancesExchangeQuoteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptReservedInstancesExchangeQuote.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AcceptTransitGatewayVpcAttachmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptTransitGatewayVpcAttachmentInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptTransitGatewayVpcAttachmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptTransitGatewayVpcAttachment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AcceptVpcEndpointConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptVpcEndpointConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptVpcEndpointConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptVpcEndpointConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AcceptVpcPeeringConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptVpcPeeringConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptVpcPeeringConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptVpcPeeringConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AdvertiseByoipCidrMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAdvertiseByoipCidrInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AdvertiseByoipCidrMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AdvertiseByoipCidr.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AllocateAddressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAllocateAddressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AllocateAddressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AllocateAddress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AllocateHostsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAllocateHostsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AllocateHostsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AllocateHosts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ApplySecurityGroupsToClientVpnTargetNetworkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalApplySecurityGroupsToClientVpnTargetNetworkInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ApplySecurityGroupsToClientVpnTargetNetworkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ApplySecurityGroupsToClientVpnTargetNetwork.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssignIpv6AddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssignIpv6AddressesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssignIpv6AddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssignIpv6Addresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssignPrivateIpAddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssignPrivateIpAddressesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssignPrivateIpAddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssignPrivateIpAddresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateAddressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateAddressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateAddressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateAddress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateClientVpnTargetNetworkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateClientVpnTargetNetworkInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateClientVpnTargetNetworkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateClientVpnTargetNetwork.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateDhcpOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateDhcpOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateDhcpOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateDhcpOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateIamInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateIamInstanceProfileInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateIamInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateIamInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateSubnetCidrBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateSubnetCidrBlockInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateSubnetCidrBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateSubnetCidrBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateTransitGatewayRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateTransitGatewayRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateTransitGatewayRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateTransitGatewayRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AssociateVpcCidrBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAssociateVpcCidrBlockInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AssociateVpcCidrBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AssociateVpcCidrBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachClassicLinkVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachClassicLinkVpcInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachClassicLinkVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachClassicLinkVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachInternetGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachInternetGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachInternetGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachInternetGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachNetworkInterfaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachNetworkInterfaceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachNetworkInterfaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachNetworkInterface.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachVolumeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AttachVpnGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAttachVpnGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AttachVpnGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AttachVpnGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeClientVpnIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeClientVpnIngressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeClientVpnIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeClientVpnIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeSecurityGroupEgressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeSecurityGroupEgressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeSecurityGroupEgressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeSecurityGroupEgress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeSecurityGroupIngressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BundleInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBundleInstanceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BundleInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BundleInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelBundleTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelBundleTaskInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelBundleTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelBundleTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelCapacityReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelCapacityReservationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelCapacityReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelCapacityReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelConversionTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelConversionTaskInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelConversionTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelConversionTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelExportTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelExportTaskInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelExportTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelExportTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelImportTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelImportTaskInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelImportTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelImportTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelReservedInstancesListingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelReservedInstancesListingInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelReservedInstancesListingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelReservedInstancesListing.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelSpotFleetRequestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelSpotFleetRequestsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelSpotFleetRequestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelSpotFleetRequests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelSpotInstanceRequestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelSpotInstanceRequestsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelSpotInstanceRequestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelSpotInstanceRequests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ConfirmProductInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalConfirmProductInstanceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ConfirmProductInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ConfirmProductInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyFpgaImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyFpgaImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyFpgaImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyFpgaImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopySnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopySnapshotInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopySnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopySnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCapacityReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCapacityReservationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCapacityReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCapacityReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClientVpnEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClientVpnEndpointInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClientVpnEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateClientVpnEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClientVpnRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClientVpnRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClientVpnRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateClientVpnRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateCustomerGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateCustomerGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateCustomerGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCustomerGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDefaultSubnetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDefaultSubnetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDefaultSubnetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDefaultSubnet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDefaultVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDefaultVpcInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDefaultVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDefaultVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateDhcpOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateDhcpOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateDhcpOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateDhcpOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEgressOnlyInternetGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEgressOnlyInternetGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEgressOnlyInternetGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEgressOnlyInternetGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFleetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFlowLogsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFlowLogsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFlowLogsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFlowLogs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateFpgaImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateFpgaImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateFpgaImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateFpgaImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInstanceExportTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInstanceExportTaskInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInstanceExportTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInstanceExportTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateInternetGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateInternetGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateInternetGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateInternetGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateKeyPairInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLaunchTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLaunchTemplateInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLaunchTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLaunchTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateLaunchTemplateVersionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLaunchTemplateVersionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLaunchTemplateVersionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLaunchTemplateVersion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNatGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNatGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNatGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNatGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNetworkAclMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNetworkAclInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNetworkAclMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNetworkAcl.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNetworkAclEntryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNetworkAclEntryInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNetworkAclEntryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNetworkAclEntry.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNetworkInterfaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNetworkInterfaceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNetworkInterfaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNetworkInterface.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNetworkInterfacePermissionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNetworkInterfacePermissionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNetworkInterfacePermissionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNetworkInterfacePermission.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreatePlacementGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreatePlacementGroupInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreatePlacementGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreatePlacementGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateReservedInstancesListingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateReservedInstancesListingInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateReservedInstancesListingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateReservedInstancesListing.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSecurityGroupInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSpotDatafeedSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSpotDatafeedSubscriptionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSpotDatafeedSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSpotDatafeedSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSubnetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSubnetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSubnetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSubnet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTagsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTrafficMirrorFilterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTrafficMirrorFilterInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTrafficMirrorFilterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTrafficMirrorFilter.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTrafficMirrorFilterRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTrafficMirrorFilterRuleInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTrafficMirrorFilterRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTrafficMirrorFilterRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTrafficMirrorSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTrafficMirrorSessionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTrafficMirrorSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTrafficMirrorSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTrafficMirrorTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTrafficMirrorTargetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTrafficMirrorTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTrafficMirrorTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTransitGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTransitGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTransitGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTransitGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTransitGatewayRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTransitGatewayRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTransitGatewayRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTransitGatewayRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTransitGatewayRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTransitGatewayRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTransitGatewayRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTransitGatewayRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTransitGatewayVpcAttachmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTransitGatewayVpcAttachmentInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTransitGatewayVpcAttachmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTransitGatewayVpcAttachment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVolumeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcEndpointInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcEndpointConnectionNotificationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcEndpointConnectionNotificationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcEndpointConnectionNotificationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcEndpointConnectionNotification.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcEndpointServiceConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcEndpointServiceConfigurationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcEndpointServiceConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcEndpointServiceConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpcPeeringConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpcPeeringConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpcPeeringConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpcPeeringConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpnConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpnConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpnConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpnConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpnConnectionRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpnConnectionRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpnConnectionRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpnConnectionRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateVpnGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVpnGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVpnGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVpnGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClientVpnEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClientVpnEndpointInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClientVpnEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClientVpnEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClientVpnRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClientVpnRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClientVpnRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClientVpnRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteCustomerGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteCustomerGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteCustomerGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCustomerGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteDhcpOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteDhcpOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteDhcpOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteDhcpOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEgressOnlyInternetGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEgressOnlyInternetGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEgressOnlyInternetGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEgressOnlyInternetGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFleetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFleetsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFleetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFleets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFlowLogsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFlowLogsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFlowLogsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFlowLogs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteFpgaImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteFpgaImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteFpgaImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteFpgaImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteInternetGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteInternetGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteInternetGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteInternetGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteKeyPairInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLaunchTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLaunchTemplateInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLaunchTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLaunchTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLaunchTemplateVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLaunchTemplateVersionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLaunchTemplateVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLaunchTemplateVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNatGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNatGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNatGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNatGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNetworkAclMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNetworkAclInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNetworkAclMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNetworkAcl.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNetworkAclEntryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNetworkAclEntryInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNetworkAclEntryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNetworkAclEntry.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNetworkInterfaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNetworkInterfaceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNetworkInterfaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNetworkInterface.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNetworkInterfacePermissionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNetworkInterfacePermissionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNetworkInterfacePermissionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNetworkInterfacePermission.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeletePlacementGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeletePlacementGroupInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeletePlacementGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeletePlacementGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteQueuedReservedInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteQueuedReservedInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteQueuedReservedInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteQueuedReservedInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSecurityGroupInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSnapshotInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSpotDatafeedSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSpotDatafeedSubscriptionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSpotDatafeedSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSpotDatafeedSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSubnetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSubnetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSubnetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSubnet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTagsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTrafficMirrorFilterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTrafficMirrorFilterInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTrafficMirrorFilterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTrafficMirrorFilter.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTrafficMirrorFilterRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTrafficMirrorFilterRuleInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTrafficMirrorFilterRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTrafficMirrorFilterRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTrafficMirrorSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTrafficMirrorSessionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTrafficMirrorSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTrafficMirrorSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTrafficMirrorTargetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTrafficMirrorTargetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTrafficMirrorTargetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTrafficMirrorTarget.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTransitGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTransitGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTransitGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTransitGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTransitGatewayRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTransitGatewayRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTransitGatewayRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTransitGatewayRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTransitGatewayRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTransitGatewayRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTransitGatewayRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTransitGatewayRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTransitGatewayVpcAttachmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTransitGatewayVpcAttachmentInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTransitGatewayVpcAttachmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTransitGatewayVpcAttachment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVolumeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcEndpointConnectionNotificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcEndpointConnectionNotificationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcEndpointConnectionNotificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcEndpointConnectionNotifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcEndpointServiceConfigurationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcEndpointServiceConfigurationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcEndpointServiceConfigurationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcEndpointServiceConfigurations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcEndpointsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpcPeeringConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpcPeeringConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpcPeeringConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpcPeeringConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpnConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpnConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpnConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpnConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpnConnectionRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpnConnectionRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpnConnectionRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpnConnectionRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVpnGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVpnGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVpnGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVpnGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeprovisionByoipCidrMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeprovisionByoipCidrInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeprovisionByoipCidrMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeprovisionByoipCidr.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeregisterImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeregisterImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeregisterImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeregisterImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountAttributesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccountAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAddressesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAddresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAggregateIdFormatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAggregateIdFormatInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAggregateIdFormatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAggregateIdFormat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAvailabilityZonesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAvailabilityZonesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAvailabilityZonesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAvailabilityZones.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBundleTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBundleTasksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBundleTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBundleTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeByoipCidrsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeByoipCidrsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeByoipCidrsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeByoipCidrs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCapacityReservationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCapacityReservationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCapacityReservationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCapacityReservations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClassicLinkInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClassicLinkInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClassicLinkInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClassicLinkInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClientVpnAuthorizationRulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClientVpnAuthorizationRulesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClientVpnAuthorizationRulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClientVpnAuthorizationRules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClientVpnConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClientVpnConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClientVpnConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClientVpnConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClientVpnEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClientVpnEndpointsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClientVpnEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClientVpnEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClientVpnRoutesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClientVpnRoutesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClientVpnRoutesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClientVpnRoutes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClientVpnTargetNetworksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClientVpnTargetNetworksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClientVpnTargetNetworksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClientVpnTargetNetworks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeConversionTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeConversionTasksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeConversionTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeConversionTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeCustomerGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeCustomerGatewaysInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeCustomerGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeCustomerGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDhcpOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDhcpOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDhcpOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDhcpOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEgressOnlyInternetGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEgressOnlyInternetGatewaysInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEgressOnlyInternetGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEgressOnlyInternetGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeElasticGpusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeElasticGpusInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeElasticGpusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeElasticGpus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeExportImageTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeExportImageTasksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeExportImageTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeExportImageTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeExportTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeExportTasksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeExportTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeExportTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFastSnapshotRestoresMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFastSnapshotRestoresInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFastSnapshotRestoresMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFastSnapshotRestores.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetHistoryInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleetInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFleetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFleetsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFleetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFleets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFlowLogsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFlowLogsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFlowLogsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFlowLogs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFpgaImageAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFpgaImageAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFpgaImageAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFpgaImageAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeFpgaImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeFpgaImagesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeFpgaImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeFpgaImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHostReservationOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHostReservationOfferingsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHostReservationOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHostReservationOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHostReservationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHostReservationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHostReservationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHostReservations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHostsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHostsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHostsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHosts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeIamInstanceProfileAssociationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeIamInstanceProfileAssociationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeIamInstanceProfileAssociationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeIamInstanceProfileAssociations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeIdFormatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeIdFormatInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeIdFormatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeIdFormat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeIdentityIdFormatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeIdentityIdFormatInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeIdentityIdFormatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeIdentityIdFormat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImageAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImageAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImageAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImageAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImagesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImagesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImagesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImages.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImportImageTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImportImageTasksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImportImageTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImportImageTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeImportSnapshotTasksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeImportSnapshotTasksInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeImportSnapshotTasksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeImportSnapshotTasks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstanceAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstanceAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstanceAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstanceAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstanceCreditSpecificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstanceCreditSpecificationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstanceCreditSpecificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstanceCreditSpecifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstanceStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstanceStatusInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstanceStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstanceStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeInternetGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeInternetGatewaysInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeInternetGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeInternetGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeKeyPairsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeKeyPairsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeKeyPairsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeKeyPairs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLaunchTemplateVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLaunchTemplateVersionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLaunchTemplateVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLaunchTemplateVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLaunchTemplatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLaunchTemplatesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLaunchTemplatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLaunchTemplates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeMovingAddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeMovingAddressesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeMovingAddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeMovingAddresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNatGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNatGatewaysInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNatGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNatGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNetworkAclsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNetworkAclsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNetworkAclsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNetworkAcls.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNetworkInterfaceAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNetworkInterfaceAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNetworkInterfaceAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNetworkInterfaceAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNetworkInterfacePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNetworkInterfacePermissionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNetworkInterfacePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNetworkInterfacePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNetworkInterfacesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNetworkInterfacesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNetworkInterfacesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNetworkInterfaces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePlacementGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePlacementGroupsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePlacementGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePlacementGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePrefixListsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePrefixListsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePrefixListsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePrefixLists.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePrincipalIdFormatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePrincipalIdFormatInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePrincipalIdFormatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePrincipalIdFormat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribePublicIpv4PoolsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribePublicIpv4PoolsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribePublicIpv4PoolsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribePublicIpv4Pools.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRegionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRegionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRegionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRegions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedInstancesListingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedInstancesListingsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedInstancesListingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedInstancesListings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedInstancesModificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedInstancesModificationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedInstancesModificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedInstancesModifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedInstancesOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedInstancesOfferingsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedInstancesOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedInstancesOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRouteTablesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRouteTablesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRouteTablesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRouteTables.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeScheduledInstanceAvailabilityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeScheduledInstanceAvailabilityInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeScheduledInstanceAvailabilityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeScheduledInstanceAvailability.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeScheduledInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeScheduledInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeScheduledInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeScheduledInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSecurityGroupReferencesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSecurityGroupReferencesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSecurityGroupReferencesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSecurityGroupReferences.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSecurityGroupsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshotAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSpotDatafeedSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSpotDatafeedSubscriptionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSpotDatafeedSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSpotDatafeedSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSpotFleetInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSpotFleetInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSpotFleetInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSpotFleetInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSpotFleetRequestHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSpotFleetRequestHistoryInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSpotFleetRequestHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSpotFleetRequestHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSpotFleetRequestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSpotFleetRequestsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSpotFleetRequestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSpotFleetRequests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSpotInstanceRequestsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSpotInstanceRequestsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSpotInstanceRequestsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSpotInstanceRequests.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSpotPriceHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSpotPriceHistoryInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSpotPriceHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSpotPriceHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStaleSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStaleSecurityGroupsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStaleSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStaleSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSubnetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSubnetsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSubnetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSubnets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTagsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTrafficMirrorFiltersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTrafficMirrorFiltersInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTrafficMirrorFiltersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTrafficMirrorFilters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTrafficMirrorSessionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTrafficMirrorSessionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTrafficMirrorSessionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTrafficMirrorSessions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTrafficMirrorTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTrafficMirrorTargetsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTrafficMirrorTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTrafficMirrorTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTransitGatewayAttachmentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTransitGatewayAttachmentsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTransitGatewayAttachmentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTransitGatewayAttachments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTransitGatewayRouteTablesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTransitGatewayRouteTablesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTransitGatewayRouteTablesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTransitGatewayRouteTables.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTransitGatewayVpcAttachmentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTransitGatewayVpcAttachmentsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTransitGatewayVpcAttachmentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTransitGatewayVpcAttachments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTransitGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTransitGatewaysInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTransitGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTransitGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVolumeAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVolumeAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVolumeAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVolumeAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVolumeStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVolumeStatusInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVolumeStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVolumeStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVolumesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVolumesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVolumesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVolumes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVolumesModificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVolumesModificationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVolumesModificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVolumesModifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcClassicLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcClassicLinkInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcClassicLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcClassicLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcClassicLinkDnsSupportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcClassicLinkDnsSupportInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcClassicLinkDnsSupportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcClassicLinkDnsSupport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcEndpointConnectionNotificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcEndpointConnectionNotificationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcEndpointConnectionNotificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcEndpointConnectionNotifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcEndpointConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcEndpointConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcEndpointConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcEndpointConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcEndpointServiceConfigurationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcEndpointServiceConfigurationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcEndpointServiceConfigurationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcEndpointServiceConfigurations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcEndpointServicePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcEndpointServicePermissionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcEndpointServicePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcEndpointServicePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcEndpointServicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcEndpointServicesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcEndpointServicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcEndpointServices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcEndpointsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcEndpointsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcEndpointsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcEndpoints.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcPeeringConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcPeeringConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcPeeringConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcPeeringConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpcsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpcsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpcsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpcs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpnConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpnConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpnConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpnConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeVpnGatewaysMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeVpnGatewaysInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeVpnGatewaysMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeVpnGateways.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachClassicLinkVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachClassicLinkVpcInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachClassicLinkVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachClassicLinkVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachInternetGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachInternetGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachInternetGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachInternetGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachNetworkInterfaceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachNetworkInterfaceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachNetworkInterfaceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachNetworkInterface.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachVolumeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DetachVpnGatewayMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDetachVpnGatewayInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DetachVpnGatewayMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DetachVpnGateway.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableEbsEncryptionByDefaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableEbsEncryptionByDefaultInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableEbsEncryptionByDefaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableEbsEncryptionByDefault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableFastSnapshotRestoresMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableFastSnapshotRestoresInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableFastSnapshotRestoresMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableFastSnapshotRestores.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableTransitGatewayRouteTablePropagationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableTransitGatewayRouteTablePropagationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableTransitGatewayRouteTablePropagationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableTransitGatewayRouteTablePropagation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableVgwRoutePropagationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableVgwRoutePropagationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableVgwRoutePropagationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableVgwRoutePropagation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableVpcClassicLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableVpcClassicLinkInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableVpcClassicLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableVpcClassicLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableVpcClassicLinkDnsSupportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableVpcClassicLinkDnsSupportInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableVpcClassicLinkDnsSupportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableVpcClassicLinkDnsSupport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateAddressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateAddressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateAddressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateAddress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateClientVpnTargetNetworkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateClientVpnTargetNetworkInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateClientVpnTargetNetworkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateClientVpnTargetNetwork.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateIamInstanceProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateIamInstanceProfileInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateIamInstanceProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateIamInstanceProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateSubnetCidrBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateSubnetCidrBlockInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateSubnetCidrBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateSubnetCidrBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateTransitGatewayRouteTableMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateTransitGatewayRouteTableInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateTransitGatewayRouteTableMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateTransitGatewayRouteTable.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisassociateVpcCidrBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisassociateVpcCidrBlockInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisassociateVpcCidrBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisassociateVpcCidrBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableEbsEncryptionByDefaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableEbsEncryptionByDefaultInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableEbsEncryptionByDefaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableEbsEncryptionByDefault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableFastSnapshotRestoresMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableFastSnapshotRestoresInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableFastSnapshotRestoresMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableFastSnapshotRestores.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableTransitGatewayRouteTablePropagationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableTransitGatewayRouteTablePropagationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableTransitGatewayRouteTablePropagationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableTransitGatewayRouteTablePropagation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableVgwRoutePropagationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableVgwRoutePropagationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableVgwRoutePropagationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableVgwRoutePropagation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableVolumeIOMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableVolumeIOInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableVolumeIOMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableVolumeIO.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableVpcClassicLinkMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableVpcClassicLinkInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableVpcClassicLinkMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableVpcClassicLink.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableVpcClassicLinkDnsSupportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableVpcClassicLinkDnsSupportInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableVpcClassicLinkDnsSupportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableVpcClassicLinkDnsSupport.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportClientVpnClientCertificateRevocationListMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportClientVpnClientCertificateRevocationListInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportClientVpnClientCertificateRevocationListMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportClientVpnClientCertificateRevocationList.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportClientVpnClientConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportClientVpnClientConfigurationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportClientVpnClientConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportClientVpnClientConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportTransitGatewayRoutesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportTransitGatewayRoutesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportTransitGatewayRoutesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportTransitGatewayRoutes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetCapacityReservationUsageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetCapacityReservationUsageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetCapacityReservationUsageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetCapacityReservationUsage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConsoleOutputMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConsoleOutputInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConsoleOutputMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConsoleOutput.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetConsoleScreenshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetConsoleScreenshotInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetConsoleScreenshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetConsoleScreenshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEbsDefaultKmsKeyIdMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEbsDefaultKmsKeyIdInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEbsDefaultKmsKeyIdMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEbsDefaultKmsKeyId.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEbsEncryptionByDefaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEbsEncryptionByDefaultInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEbsEncryptionByDefaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEbsEncryptionByDefault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetHostReservationPurchasePreviewMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetHostReservationPurchasePreviewInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetHostReservationPurchasePreviewMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetHostReservationPurchasePreview.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetLaunchTemplateDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetLaunchTemplateDataInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetLaunchTemplateDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetLaunchTemplateData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetPasswordDataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetPasswordDataInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetPasswordDataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetPasswordData.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetReservedInstancesExchangeQuoteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetReservedInstancesExchangeQuoteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetReservedInstancesExchangeQuoteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetReservedInstancesExchangeQuote.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTransitGatewayAttachmentPropagationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTransitGatewayAttachmentPropagationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTransitGatewayAttachmentPropagationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTransitGatewayAttachmentPropagations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTransitGatewayRouteTableAssociationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTransitGatewayRouteTableAssociationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTransitGatewayRouteTableAssociationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTransitGatewayRouteTableAssociations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTransitGatewayRouteTablePropagationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTransitGatewayRouteTablePropagationsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTransitGatewayRouteTablePropagationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTransitGatewayRouteTablePropagations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportClientVpnClientCertificateRevocationListMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportClientVpnClientCertificateRevocationListInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportClientVpnClientCertificateRevocationListMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportClientVpnClientCertificateRevocationList.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportInstanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportInstanceInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportInstanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportInstance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportKeyPairMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportKeyPairInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportKeyPairMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportKeyPair.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportSnapshotInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ImportVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalImportVolumeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ImportVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ImportVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyCapacityReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyCapacityReservationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyCapacityReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyCapacityReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClientVpnEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClientVpnEndpointInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClientVpnEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClientVpnEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyEbsDefaultKmsKeyIdMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyEbsDefaultKmsKeyIdInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyEbsDefaultKmsKeyIdMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyEbsDefaultKmsKeyId.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyFleetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyFpgaImageAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyFpgaImageAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyFpgaImageAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyFpgaImageAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyHostsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyHostsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyHostsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyHosts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyIdFormatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyIdFormatInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyIdFormatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyIdFormat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyIdentityIdFormatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyIdentityIdFormatInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyIdentityIdFormatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyIdentityIdFormat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyImageAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyImageAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyImageAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyImageAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyInstanceAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyInstanceAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyInstanceAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyInstanceAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyInstanceCapacityReservationAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyInstanceCapacityReservationAttributesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyInstanceCapacityReservationAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyInstanceCapacityReservationAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyInstanceCreditSpecificationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyInstanceCreditSpecificationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyInstanceCreditSpecificationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyInstanceCreditSpecification.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyInstanceEventStartTimeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyInstanceEventStartTimeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyInstanceEventStartTimeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyInstanceEventStartTime.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyInstanceMetadataOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyInstanceMetadataOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyInstanceMetadataOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyInstanceMetadataOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyInstancePlacementMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyInstancePlacementInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyInstancePlacementMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyInstancePlacement.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyLaunchTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyLaunchTemplateInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyLaunchTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyLaunchTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyNetworkInterfaceAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyNetworkInterfaceAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyNetworkInterfaceAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyNetworkInterfaceAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyReservedInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyReservedInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyReservedInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyReservedInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifySnapshotAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifySnapshotAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifySnapshotAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifySnapshotAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifySpotFleetRequestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifySpotFleetRequestInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifySpotFleetRequestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifySpotFleetRequest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifySubnetAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifySubnetAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifySubnetAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifySubnetAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyTrafficMirrorFilterNetworkServicesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyTrafficMirrorFilterNetworkServicesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyTrafficMirrorFilterNetworkServicesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyTrafficMirrorFilterNetworkServices.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyTrafficMirrorFilterRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyTrafficMirrorFilterRuleInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyTrafficMirrorFilterRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyTrafficMirrorFilterRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyTrafficMirrorSessionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyTrafficMirrorSessionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyTrafficMirrorSessionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyTrafficMirrorSession.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyTransitGatewayVpcAttachmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyTransitGatewayVpcAttachmentInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyTransitGatewayVpcAttachmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyTransitGatewayVpcAttachment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVolumeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVolumeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVolumeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVolume.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVolumeAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVolumeAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVolumeAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVolumeAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcEndpointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcEndpointInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcEndpointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcEndpoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcEndpointConnectionNotificationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcEndpointConnectionNotificationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcEndpointConnectionNotificationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcEndpointConnectionNotification.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcEndpointServiceConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcEndpointServiceConfigurationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcEndpointServiceConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcEndpointServiceConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcEndpointServicePermissionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcEndpointServicePermissionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcEndpointServicePermissionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcEndpointServicePermissions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcPeeringConnectionOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcPeeringConnectionOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcPeeringConnectionOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcPeeringConnectionOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpcTenancyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpcTenancyInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpcTenancyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpcTenancy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpnConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpnConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpnConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpnConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpnTunnelCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpnTunnelCertificateInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpnTunnelCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpnTunnelCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyVpnTunnelOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyVpnTunnelOptionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyVpnTunnelOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyVpnTunnelOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MonitorInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMonitorInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MonitorInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MonitorInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m MoveAddressToVpcMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalMoveAddressToVpcInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m MoveAddressToVpcMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "MoveAddressToVpc.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ProvisionByoipCidrMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalProvisionByoipCidrInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ProvisionByoipCidrMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ProvisionByoipCidr.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseHostReservationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseHostReservationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseHostReservationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseHostReservation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseReservedInstancesOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseReservedInstancesOfferingInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseReservedInstancesOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseReservedInstancesOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseScheduledInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseScheduledInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseScheduledInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseScheduledInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RegisterImageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRegisterImageInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RegisterImageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RegisterImage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectTransitGatewayVpcAttachmentMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectTransitGatewayVpcAttachmentInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectTransitGatewayVpcAttachmentMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectTransitGatewayVpcAttachment.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectVpcEndpointConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectVpcEndpointConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectVpcEndpointConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectVpcEndpointConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RejectVpcPeeringConnectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRejectVpcPeeringConnectionInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RejectVpcPeeringConnectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RejectVpcPeeringConnection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReleaseAddressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReleaseAddressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReleaseAddressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReleaseAddress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReleaseHostsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReleaseHostsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReleaseHostsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReleaseHosts.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReplaceIamInstanceProfileAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReplaceIamInstanceProfileAssociationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReplaceIamInstanceProfileAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReplaceIamInstanceProfileAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReplaceNetworkAclAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReplaceNetworkAclAssociationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReplaceNetworkAclAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReplaceNetworkAclAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReplaceNetworkAclEntryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReplaceNetworkAclEntryInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReplaceNetworkAclEntryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReplaceNetworkAclEntry.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReplaceRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReplaceRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReplaceRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReplaceRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReplaceRouteTableAssociationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReplaceRouteTableAssociationInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReplaceRouteTableAssociationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReplaceRouteTableAssociation.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReplaceTransitGatewayRouteMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReplaceTransitGatewayRouteInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReplaceTransitGatewayRouteMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReplaceTransitGatewayRoute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ReportInstanceStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalReportInstanceStatusInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ReportInstanceStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ReportInstanceStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RequestSpotFleetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRequestSpotFleetInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RequestSpotFleetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RequestSpotFleet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RequestSpotInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRequestSpotInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RequestSpotInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RequestSpotInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetEbsDefaultKmsKeyIdMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetEbsDefaultKmsKeyIdInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetEbsDefaultKmsKeyIdMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetEbsDefaultKmsKeyId.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetFpgaImageAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetFpgaImageAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetFpgaImageAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetFpgaImageAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetImageAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetImageAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetImageAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetImageAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetInstanceAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetInstanceAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetInstanceAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetInstanceAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetNetworkInterfaceAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetNetworkInterfaceAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetNetworkInterfaceAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetNetworkInterfaceAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetSnapshotAttributeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetSnapshotAttributeInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetSnapshotAttributeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetSnapshotAttribute.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreAddressToClassicMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreAddressToClassicInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreAddressToClassicMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreAddressToClassic.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeClientVpnIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeClientVpnIngressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeClientVpnIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeClientVpnIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeSecurityGroupEgressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeSecurityGroupEgressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeSecurityGroupEgressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeSecurityGroupEgress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeSecurityGroupIngressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RunInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRunInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RunInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RunInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RunScheduledInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRunScheduledInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RunScheduledInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RunScheduledInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SearchTransitGatewayRoutesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSearchTransitGatewayRoutesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SearchTransitGatewayRoutesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SearchTransitGatewayRoutes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendDiagnosticInterruptMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendDiagnosticInterruptInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendDiagnosticInterruptMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendDiagnosticInterrupt.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TerminateClientVpnConnectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTerminateClientVpnConnectionsInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TerminateClientVpnConnectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TerminateClientVpnConnections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TerminateInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTerminateInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TerminateInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TerminateInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnassignIpv6AddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnassignIpv6AddressesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnassignIpv6AddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnassignIpv6Addresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnassignPrivateIpAddressesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnassignPrivateIpAddressesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnassignPrivateIpAddressesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnassignPrivateIpAddresses.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UnmonitorInstancesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUnmonitorInstancesInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UnmonitorInstancesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UnmonitorInstances.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSecurityGroupRuleDescriptionsEgressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSecurityGroupRuleDescriptionsEgressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSecurityGroupRuleDescriptionsEgressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSecurityGroupRuleDescriptionsEgress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSecurityGroupRuleDescriptionsIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSecurityGroupRuleDescriptionsIngressInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSecurityGroupRuleDescriptionsIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSecurityGroupRuleDescriptionsIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m WithdrawByoipCidrMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalWithdrawByoipCidrInputShapeAWSEC2Query(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m WithdrawByoipCidrMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "WithdrawByoipCidr.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
