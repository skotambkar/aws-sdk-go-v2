// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/backup/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateBackupPlanMarshaler defines marshaler for CreateBackupPlan operation
type CreateBackupPlanMarshaler struct {
	Input *types.CreateBackupPlanInput
}

// CreateBackupSelectionMarshaler defines marshaler for CreateBackupSelection operation
type CreateBackupSelectionMarshaler struct {
	Input *types.CreateBackupSelectionInput
}

// CreateBackupVaultMarshaler defines marshaler for CreateBackupVault operation
type CreateBackupVaultMarshaler struct {
	Input *types.CreateBackupVaultInput
}

// DeleteBackupPlanMarshaler defines marshaler for DeleteBackupPlan operation
type DeleteBackupPlanMarshaler struct {
	Input *types.DeleteBackupPlanInput
}

// DeleteBackupSelectionMarshaler defines marshaler for DeleteBackupSelection operation
type DeleteBackupSelectionMarshaler struct {
	Input *types.DeleteBackupSelectionInput
}

// DeleteBackupVaultMarshaler defines marshaler for DeleteBackupVault operation
type DeleteBackupVaultMarshaler struct {
	Input *types.DeleteBackupVaultInput
}

// DeleteBackupVaultAccessPolicyMarshaler defines marshaler for DeleteBackupVaultAccessPolicy operation
type DeleteBackupVaultAccessPolicyMarshaler struct {
	Input *types.DeleteBackupVaultAccessPolicyInput
}

// DeleteBackupVaultNotificationsMarshaler defines marshaler for DeleteBackupVaultNotifications operation
type DeleteBackupVaultNotificationsMarshaler struct {
	Input *types.DeleteBackupVaultNotificationsInput
}

// DeleteRecoveryPointMarshaler defines marshaler for DeleteRecoveryPoint operation
type DeleteRecoveryPointMarshaler struct {
	Input *types.DeleteRecoveryPointInput
}

// DescribeBackupJobMarshaler defines marshaler for DescribeBackupJob operation
type DescribeBackupJobMarshaler struct {
	Input *types.DescribeBackupJobInput
}

// DescribeBackupVaultMarshaler defines marshaler for DescribeBackupVault operation
type DescribeBackupVaultMarshaler struct {
	Input *types.DescribeBackupVaultInput
}

// DescribeProtectedResourceMarshaler defines marshaler for DescribeProtectedResource operation
type DescribeProtectedResourceMarshaler struct {
	Input *types.DescribeProtectedResourceInput
}

// DescribeRecoveryPointMarshaler defines marshaler for DescribeRecoveryPoint operation
type DescribeRecoveryPointMarshaler struct {
	Input *types.DescribeRecoveryPointInput
}

// DescribeRestoreJobMarshaler defines marshaler for DescribeRestoreJob operation
type DescribeRestoreJobMarshaler struct {
	Input *types.DescribeRestoreJobInput
}

// ExportBackupPlanTemplateMarshaler defines marshaler for ExportBackupPlanTemplate operation
type ExportBackupPlanTemplateMarshaler struct {
	Input *types.ExportBackupPlanTemplateInput
}

// GetBackupPlanMarshaler defines marshaler for GetBackupPlan operation
type GetBackupPlanMarshaler struct {
	Input *types.GetBackupPlanInput
}

// GetBackupPlanFromJSONMarshaler defines marshaler for GetBackupPlanFromJSON operation
type GetBackupPlanFromJSONMarshaler struct {
	Input *types.GetBackupPlanFromJSONInput
}

// GetBackupPlanFromTemplateMarshaler defines marshaler for GetBackupPlanFromTemplate operation
type GetBackupPlanFromTemplateMarshaler struct {
	Input *types.GetBackupPlanFromTemplateInput
}

// GetBackupSelectionMarshaler defines marshaler for GetBackupSelection operation
type GetBackupSelectionMarshaler struct {
	Input *types.GetBackupSelectionInput
}

// GetBackupVaultAccessPolicyMarshaler defines marshaler for GetBackupVaultAccessPolicy operation
type GetBackupVaultAccessPolicyMarshaler struct {
	Input *types.GetBackupVaultAccessPolicyInput
}

// GetBackupVaultNotificationsMarshaler defines marshaler for GetBackupVaultNotifications operation
type GetBackupVaultNotificationsMarshaler struct {
	Input *types.GetBackupVaultNotificationsInput
}

// GetRecoveryPointRestoreMetadataMarshaler defines marshaler for GetRecoveryPointRestoreMetadata operation
type GetRecoveryPointRestoreMetadataMarshaler struct {
	Input *types.GetRecoveryPointRestoreMetadataInput
}

// GetSupportedResourceTypesMarshaler defines marshaler for GetSupportedResourceTypes operation
type GetSupportedResourceTypesMarshaler struct {
	Input *types.GetSupportedResourceTypesInput
}

// ListBackupJobsMarshaler defines marshaler for ListBackupJobs operation
type ListBackupJobsMarshaler struct {
	Input *types.ListBackupJobsInput
}

// ListBackupPlanTemplatesMarshaler defines marshaler for ListBackupPlanTemplates operation
type ListBackupPlanTemplatesMarshaler struct {
	Input *types.ListBackupPlanTemplatesInput
}

// ListBackupPlanVersionsMarshaler defines marshaler for ListBackupPlanVersions operation
type ListBackupPlanVersionsMarshaler struct {
	Input *types.ListBackupPlanVersionsInput
}

// ListBackupPlansMarshaler defines marshaler for ListBackupPlans operation
type ListBackupPlansMarshaler struct {
	Input *types.ListBackupPlansInput
}

// ListBackupSelectionsMarshaler defines marshaler for ListBackupSelections operation
type ListBackupSelectionsMarshaler struct {
	Input *types.ListBackupSelectionsInput
}

// ListBackupVaultsMarshaler defines marshaler for ListBackupVaults operation
type ListBackupVaultsMarshaler struct {
	Input *types.ListBackupVaultsInput
}

// ListProtectedResourcesMarshaler defines marshaler for ListProtectedResources operation
type ListProtectedResourcesMarshaler struct {
	Input *types.ListProtectedResourcesInput
}

// ListRecoveryPointsByBackupVaultMarshaler defines marshaler for ListRecoveryPointsByBackupVault operation
type ListRecoveryPointsByBackupVaultMarshaler struct {
	Input *types.ListRecoveryPointsByBackupVaultInput
}

// ListRecoveryPointsByResourceMarshaler defines marshaler for ListRecoveryPointsByResource operation
type ListRecoveryPointsByResourceMarshaler struct {
	Input *types.ListRecoveryPointsByResourceInput
}

// ListRestoreJobsMarshaler defines marshaler for ListRestoreJobs operation
type ListRestoreJobsMarshaler struct {
	Input *types.ListRestoreJobsInput
}

// ListTagsMarshaler defines marshaler for ListTags operation
type ListTagsMarshaler struct {
	Input *types.ListTagsInput
}

// PutBackupVaultAccessPolicyMarshaler defines marshaler for PutBackupVaultAccessPolicy operation
type PutBackupVaultAccessPolicyMarshaler struct {
	Input *types.PutBackupVaultAccessPolicyInput
}

// PutBackupVaultNotificationsMarshaler defines marshaler for PutBackupVaultNotifications operation
type PutBackupVaultNotificationsMarshaler struct {
	Input *types.PutBackupVaultNotificationsInput
}

// StartBackupJobMarshaler defines marshaler for StartBackupJob operation
type StartBackupJobMarshaler struct {
	Input *types.StartBackupJobInput
}

// StartRestoreJobMarshaler defines marshaler for StartRestoreJob operation
type StartRestoreJobMarshaler struct {
	Input *types.StartRestoreJobInput
}

// StopBackupJobMarshaler defines marshaler for StopBackupJob operation
type StopBackupJobMarshaler struct {
	Input *types.StopBackupJobInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateBackupPlanMarshaler defines marshaler for UpdateBackupPlan operation
type UpdateBackupPlanMarshaler struct {
	Input *types.UpdateBackupPlanInput
}

// UpdateRecoveryPointLifecycleMarshaler defines marshaler for UpdateRecoveryPointLifecycle operation
type UpdateRecoveryPointLifecycleMarshaler struct {
	Input *types.UpdateRecoveryPointLifecycleInput
}

func MarshalCreateBackupPlanInputShapeAWSREST(v *types.CreateBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateBackupPlanInputShapeAWSJSON(v *types.CreateBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateBackupSelectionInputShapeAWSREST(v *types.CreateBackupSelectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateBackupSelectionInputShapeAWSJSON(v *types.CreateBackupSelectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateBackupVaultInputShapeAWSREST(v *types.CreateBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateBackupVaultInputShapeAWSJSON(v *types.CreateBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBackupPlanInputShapeAWSREST(v *types.DeleteBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBackupPlanInputShapeAWSJSON(v *types.DeleteBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBackupSelectionInputShapeAWSREST(v *types.DeleteBackupSelectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBackupSelectionInputShapeAWSJSON(v *types.DeleteBackupSelectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBackupVaultInputShapeAWSREST(v *types.DeleteBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBackupVaultInputShapeAWSJSON(v *types.DeleteBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBackupVaultAccessPolicyInputShapeAWSREST(v *types.DeleteBackupVaultAccessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBackupVaultAccessPolicyInputShapeAWSJSON(v *types.DeleteBackupVaultAccessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteBackupVaultNotificationsInputShapeAWSREST(v *types.DeleteBackupVaultNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteBackupVaultNotificationsInputShapeAWSJSON(v *types.DeleteBackupVaultNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteRecoveryPointInputShapeAWSREST(v *types.DeleteRecoveryPointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteRecoveryPointInputShapeAWSJSON(v *types.DeleteRecoveryPointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeBackupJobInputShapeAWSREST(v *types.DescribeBackupJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeBackupJobInputShapeAWSJSON(v *types.DescribeBackupJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeBackupVaultInputShapeAWSREST(v *types.DescribeBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeBackupVaultInputShapeAWSJSON(v *types.DescribeBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeProtectedResourceInputShapeAWSREST(v *types.DescribeProtectedResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeProtectedResourceInputShapeAWSJSON(v *types.DescribeProtectedResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeRecoveryPointInputShapeAWSREST(v *types.DescribeRecoveryPointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeRecoveryPointInputShapeAWSJSON(v *types.DescribeRecoveryPointInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeRestoreJobInputShapeAWSREST(v *types.DescribeRestoreJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeRestoreJobInputShapeAWSJSON(v *types.DescribeRestoreJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalExportBackupPlanTemplateInputShapeAWSREST(v *types.ExportBackupPlanTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalExportBackupPlanTemplateInputShapeAWSJSON(v *types.ExportBackupPlanTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBackupPlanInputShapeAWSREST(v *types.GetBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBackupPlanInputShapeAWSJSON(v *types.GetBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBackupPlanFromJSONInputShapeAWSREST(v *types.GetBackupPlanFromJSONInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBackupPlanFromJSONInputShapeAWSJSON(v *types.GetBackupPlanFromJSONInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBackupPlanFromTemplateInputShapeAWSREST(v *types.GetBackupPlanFromTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBackupPlanFromTemplateInputShapeAWSJSON(v *types.GetBackupPlanFromTemplateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBackupSelectionInputShapeAWSREST(v *types.GetBackupSelectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBackupSelectionInputShapeAWSJSON(v *types.GetBackupSelectionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBackupVaultAccessPolicyInputShapeAWSREST(v *types.GetBackupVaultAccessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBackupVaultAccessPolicyInputShapeAWSJSON(v *types.GetBackupVaultAccessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBackupVaultNotificationsInputShapeAWSREST(v *types.GetBackupVaultNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBackupVaultNotificationsInputShapeAWSJSON(v *types.GetBackupVaultNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetRecoveryPointRestoreMetadataInputShapeAWSREST(v *types.GetRecoveryPointRestoreMetadataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRecoveryPointRestoreMetadataInputShapeAWSJSON(v *types.GetRecoveryPointRestoreMetadataInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSupportedResourceTypesInputShapeAWSREST(v *types.GetSupportedResourceTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSupportedResourceTypesInputShapeAWSJSON(v *types.GetSupportedResourceTypesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBackupJobsInputShapeAWSREST(v *types.ListBackupJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBackupJobsInputShapeAWSJSON(v *types.ListBackupJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBackupPlanTemplatesInputShapeAWSREST(v *types.ListBackupPlanTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBackupPlanTemplatesInputShapeAWSJSON(v *types.ListBackupPlanTemplatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBackupPlanVersionsInputShapeAWSREST(v *types.ListBackupPlanVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBackupPlanVersionsInputShapeAWSJSON(v *types.ListBackupPlanVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBackupPlansInputShapeAWSREST(v *types.ListBackupPlansInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBackupPlansInputShapeAWSJSON(v *types.ListBackupPlansInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBackupSelectionsInputShapeAWSREST(v *types.ListBackupSelectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBackupSelectionsInputShapeAWSJSON(v *types.ListBackupSelectionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListBackupVaultsInputShapeAWSREST(v *types.ListBackupVaultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListBackupVaultsInputShapeAWSJSON(v *types.ListBackupVaultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListProtectedResourcesInputShapeAWSREST(v *types.ListProtectedResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListProtectedResourcesInputShapeAWSJSON(v *types.ListProtectedResourcesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListRecoveryPointsByBackupVaultInputShapeAWSREST(v *types.ListRecoveryPointsByBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListRecoveryPointsByBackupVaultInputShapeAWSJSON(v *types.ListRecoveryPointsByBackupVaultInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListRecoveryPointsByResourceInputShapeAWSREST(v *types.ListRecoveryPointsByResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListRecoveryPointsByResourceInputShapeAWSJSON(v *types.ListRecoveryPointsByResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListRestoreJobsInputShapeAWSREST(v *types.ListRestoreJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListRestoreJobsInputShapeAWSJSON(v *types.ListRestoreJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsInputShapeAWSREST(v *types.ListTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsInputShapeAWSJSON(v *types.ListTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutBackupVaultAccessPolicyInputShapeAWSREST(v *types.PutBackupVaultAccessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutBackupVaultAccessPolicyInputShapeAWSJSON(v *types.PutBackupVaultAccessPolicyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutBackupVaultNotificationsInputShapeAWSREST(v *types.PutBackupVaultNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutBackupVaultNotificationsInputShapeAWSJSON(v *types.PutBackupVaultNotificationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartBackupJobInputShapeAWSREST(v *types.StartBackupJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartBackupJobInputShapeAWSJSON(v *types.StartBackupJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartRestoreJobInputShapeAWSREST(v *types.StartRestoreJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartRestoreJobInputShapeAWSJSON(v *types.StartRestoreJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStopBackupJobInputShapeAWSREST(v *types.StopBackupJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStopBackupJobInputShapeAWSJSON(v *types.StopBackupJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateBackupPlanInputShapeAWSREST(v *types.UpdateBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateBackupPlanInputShapeAWSJSON(v *types.UpdateBackupPlanInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateRecoveryPointLifecycleInputShapeAWSREST(v *types.UpdateRecoveryPointLifecycleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateRecoveryPointLifecycleInputShapeAWSJSON(v *types.UpdateRecoveryPointLifecycleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateBackupPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBackupPlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateBackupPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBackupPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBackupPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBackupSelectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBackupSelectionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateBackupSelectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBackupSelectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBackupSelection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateBackupVaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateBackupVaultInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateBackupVaultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateBackupVaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateBackupVault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupPlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBackupPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackupPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupSelectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupSelectionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBackupSelectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupSelectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackupSelection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupVaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupVaultInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBackupVaultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupVaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackupVault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupVaultAccessPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupVaultAccessPolicyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBackupVaultAccessPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupVaultAccessPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackupVaultAccessPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupVaultNotificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupVaultNotificationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteBackupVaultNotificationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupVaultNotificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackupVaultNotifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteRecoveryPointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteRecoveryPointInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteRecoveryPointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteRecoveryPointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteRecoveryPoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBackupJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBackupJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeBackupJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBackupJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBackupJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBackupVaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBackupVaultInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeBackupVaultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBackupVaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBackupVault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeProtectedResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeProtectedResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeProtectedResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeProtectedResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeProtectedResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRecoveryPointMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRecoveryPointInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeRecoveryPointInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRecoveryPointMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRecoveryPoint.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeRestoreJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeRestoreJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeRestoreJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeRestoreJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeRestoreJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportBackupPlanTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportBackupPlanTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalExportBackupPlanTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportBackupPlanTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportBackupPlanTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBackupPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBackupPlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBackupPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBackupPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBackupPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBackupPlanFromJSONMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBackupPlanFromJSONInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBackupPlanFromJSONInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBackupPlanFromJSONMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBackupPlanFromJSON.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBackupPlanFromTemplateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBackupPlanFromTemplateInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBackupPlanFromTemplateInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBackupPlanFromTemplateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBackupPlanFromTemplate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBackupSelectionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBackupSelectionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBackupSelectionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBackupSelectionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBackupSelection.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBackupVaultAccessPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBackupVaultAccessPolicyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBackupVaultAccessPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBackupVaultAccessPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBackupVaultAccessPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBackupVaultNotificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBackupVaultNotificationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBackupVaultNotificationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBackupVaultNotificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBackupVaultNotifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRecoveryPointRestoreMetadataMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRecoveryPointRestoreMetadataInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRecoveryPointRestoreMetadataInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRecoveryPointRestoreMetadataMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRecoveryPointRestoreMetadata.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSupportedResourceTypesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSupportedResourceTypesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSupportedResourceTypesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSupportedResourceTypesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSupportedResourceTypes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBackupJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackupJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupPlanTemplatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupPlanTemplatesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBackupPlanTemplatesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupPlanTemplatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackupPlanTemplates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupPlanVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupPlanVersionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBackupPlanVersionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupPlanVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackupPlanVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupPlansMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupPlansInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBackupPlansInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupPlansMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackupPlans.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupSelectionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupSelectionsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBackupSelectionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupSelectionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackupSelections.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListBackupVaultsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListBackupVaultsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListBackupVaultsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListBackupVaultsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListBackupVaults.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListProtectedResourcesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListProtectedResourcesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListProtectedResourcesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListProtectedResourcesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListProtectedResources.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRecoveryPointsByBackupVaultMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRecoveryPointsByBackupVaultInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListRecoveryPointsByBackupVaultInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRecoveryPointsByBackupVaultMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRecoveryPointsByBackupVault.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRecoveryPointsByResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRecoveryPointsByResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListRecoveryPointsByResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRecoveryPointsByResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRecoveryPointsByResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListRestoreJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListRestoreJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListRestoreJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListRestoreJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListRestoreJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutBackupVaultAccessPolicyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutBackupVaultAccessPolicyInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutBackupVaultAccessPolicyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutBackupVaultAccessPolicyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutBackupVaultAccessPolicy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutBackupVaultNotificationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutBackupVaultNotificationsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutBackupVaultNotificationsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutBackupVaultNotificationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutBackupVaultNotifications.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartBackupJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartBackupJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartBackupJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartBackupJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartBackupJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartRestoreJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartRestoreJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartRestoreJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartRestoreJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartRestoreJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopBackupJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopBackupJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStopBackupJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopBackupJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopBackupJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateBackupPlanMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateBackupPlanInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateBackupPlanInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateBackupPlanMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateBackupPlan.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateRecoveryPointLifecycleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateRecoveryPointLifecycleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateRecoveryPointLifecycleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateRecoveryPointLifecycleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateRecoveryPointLifecycle.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
