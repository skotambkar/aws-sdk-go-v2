// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_query service, marshal.go contains the generated operation marshalers and methods on it.

package aws_query

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/query"
	"github.com/aws/aws-sdk-go-v2/service/redshift/types"
)

var _ bytes.Buffer
var _ awserr.Error

// AcceptReservedNodeExchangeMarshaler defines marshaler for AcceptReservedNodeExchange operation
type AcceptReservedNodeExchangeMarshaler struct {
	Input *types.AcceptReservedNodeExchangeInput
}

// AuthorizeClusterSecurityGroupIngressMarshaler defines marshaler for AuthorizeClusterSecurityGroupIngress operation
type AuthorizeClusterSecurityGroupIngressMarshaler struct {
	Input *types.AuthorizeClusterSecurityGroupIngressInput
}

// AuthorizeSnapshotAccessMarshaler defines marshaler for AuthorizeSnapshotAccess operation
type AuthorizeSnapshotAccessMarshaler struct {
	Input *types.AuthorizeSnapshotAccessInput
}

// BatchDeleteClusterSnapshotsMarshaler defines marshaler for BatchDeleteClusterSnapshots operation
type BatchDeleteClusterSnapshotsMarshaler struct {
	Input *types.BatchDeleteClusterSnapshotsInput
}

// BatchModifyClusterSnapshotsMarshaler defines marshaler for BatchModifyClusterSnapshots operation
type BatchModifyClusterSnapshotsMarshaler struct {
	Input *types.BatchModifyClusterSnapshotsInput
}

// CancelResizeMarshaler defines marshaler for CancelResize operation
type CancelResizeMarshaler struct {
	Input *types.CancelResizeInput
}

// CopyClusterSnapshotMarshaler defines marshaler for CopyClusterSnapshot operation
type CopyClusterSnapshotMarshaler struct {
	Input *types.CopyClusterSnapshotInput
}

// CreateClusterMarshaler defines marshaler for CreateCluster operation
type CreateClusterMarshaler struct {
	Input *types.CreateClusterInput
}

// CreateClusterParameterGroupMarshaler defines marshaler for CreateClusterParameterGroup operation
type CreateClusterParameterGroupMarshaler struct {
	Input *types.CreateClusterParameterGroupInput
}

// CreateClusterSecurityGroupMarshaler defines marshaler for CreateClusterSecurityGroup operation
type CreateClusterSecurityGroupMarshaler struct {
	Input *types.CreateClusterSecurityGroupInput
}

// CreateClusterSnapshotMarshaler defines marshaler for CreateClusterSnapshot operation
type CreateClusterSnapshotMarshaler struct {
	Input *types.CreateClusterSnapshotInput
}

// CreateClusterSubnetGroupMarshaler defines marshaler for CreateClusterSubnetGroup operation
type CreateClusterSubnetGroupMarshaler struct {
	Input *types.CreateClusterSubnetGroupInput
}

// CreateEventSubscriptionMarshaler defines marshaler for CreateEventSubscription operation
type CreateEventSubscriptionMarshaler struct {
	Input *types.CreateEventSubscriptionInput
}

// CreateHsmClientCertificateMarshaler defines marshaler for CreateHsmClientCertificate operation
type CreateHsmClientCertificateMarshaler struct {
	Input *types.CreateHsmClientCertificateInput
}

// CreateHsmConfigurationMarshaler defines marshaler for CreateHsmConfiguration operation
type CreateHsmConfigurationMarshaler struct {
	Input *types.CreateHsmConfigurationInput
}

// CreateSnapshotCopyGrantMarshaler defines marshaler for CreateSnapshotCopyGrant operation
type CreateSnapshotCopyGrantMarshaler struct {
	Input *types.CreateSnapshotCopyGrantInput
}

// CreateSnapshotScheduleMarshaler defines marshaler for CreateSnapshotSchedule operation
type CreateSnapshotScheduleMarshaler struct {
	Input *types.CreateSnapshotScheduleInput
}

// CreateTagsMarshaler defines marshaler for CreateTags operation
type CreateTagsMarshaler struct {
	Input *types.CreateTagsInput
}

// DeleteClusterMarshaler defines marshaler for DeleteCluster operation
type DeleteClusterMarshaler struct {
	Input *types.DeleteClusterInput
}

// DeleteClusterParameterGroupMarshaler defines marshaler for DeleteClusterParameterGroup operation
type DeleteClusterParameterGroupMarshaler struct {
	Input *types.DeleteClusterParameterGroupInput
}

// DeleteClusterSecurityGroupMarshaler defines marshaler for DeleteClusterSecurityGroup operation
type DeleteClusterSecurityGroupMarshaler struct {
	Input *types.DeleteClusterSecurityGroupInput
}

// DeleteClusterSnapshotMarshaler defines marshaler for DeleteClusterSnapshot operation
type DeleteClusterSnapshotMarshaler struct {
	Input *types.DeleteClusterSnapshotInput
}

// DeleteClusterSubnetGroupMarshaler defines marshaler for DeleteClusterSubnetGroup operation
type DeleteClusterSubnetGroupMarshaler struct {
	Input *types.DeleteClusterSubnetGroupInput
}

// DeleteEventSubscriptionMarshaler defines marshaler for DeleteEventSubscription operation
type DeleteEventSubscriptionMarshaler struct {
	Input *types.DeleteEventSubscriptionInput
}

// DeleteHsmClientCertificateMarshaler defines marshaler for DeleteHsmClientCertificate operation
type DeleteHsmClientCertificateMarshaler struct {
	Input *types.DeleteHsmClientCertificateInput
}

// DeleteHsmConfigurationMarshaler defines marshaler for DeleteHsmConfiguration operation
type DeleteHsmConfigurationMarshaler struct {
	Input *types.DeleteHsmConfigurationInput
}

// DeleteSnapshotCopyGrantMarshaler defines marshaler for DeleteSnapshotCopyGrant operation
type DeleteSnapshotCopyGrantMarshaler struct {
	Input *types.DeleteSnapshotCopyGrantInput
}

// DeleteSnapshotScheduleMarshaler defines marshaler for DeleteSnapshotSchedule operation
type DeleteSnapshotScheduleMarshaler struct {
	Input *types.DeleteSnapshotScheduleInput
}

// DeleteTagsMarshaler defines marshaler for DeleteTags operation
type DeleteTagsMarshaler struct {
	Input *types.DeleteTagsInput
}

// DescribeAccountAttributesMarshaler defines marshaler for DescribeAccountAttributes operation
type DescribeAccountAttributesMarshaler struct {
	Input *types.DescribeAccountAttributesInput
}

// DescribeClusterDbRevisionsMarshaler defines marshaler for DescribeClusterDbRevisions operation
type DescribeClusterDbRevisionsMarshaler struct {
	Input *types.DescribeClusterDbRevisionsInput
}

// DescribeClusterParameterGroupsMarshaler defines marshaler for DescribeClusterParameterGroups operation
type DescribeClusterParameterGroupsMarshaler struct {
	Input *types.DescribeClusterParameterGroupsInput
}

// DescribeClusterParametersMarshaler defines marshaler for DescribeClusterParameters operation
type DescribeClusterParametersMarshaler struct {
	Input *types.DescribeClusterParametersInput
}

// DescribeClusterSecurityGroupsMarshaler defines marshaler for DescribeClusterSecurityGroups operation
type DescribeClusterSecurityGroupsMarshaler struct {
	Input *types.DescribeClusterSecurityGroupsInput
}

// DescribeClusterSnapshotsMarshaler defines marshaler for DescribeClusterSnapshots operation
type DescribeClusterSnapshotsMarshaler struct {
	Input *types.DescribeClusterSnapshotsInput
}

// DescribeClusterSubnetGroupsMarshaler defines marshaler for DescribeClusterSubnetGroups operation
type DescribeClusterSubnetGroupsMarshaler struct {
	Input *types.DescribeClusterSubnetGroupsInput
}

// DescribeClusterTracksMarshaler defines marshaler for DescribeClusterTracks operation
type DescribeClusterTracksMarshaler struct {
	Input *types.DescribeClusterTracksInput
}

// DescribeClusterVersionsMarshaler defines marshaler for DescribeClusterVersions operation
type DescribeClusterVersionsMarshaler struct {
	Input *types.DescribeClusterVersionsInput
}

// DescribeClustersMarshaler defines marshaler for DescribeClusters operation
type DescribeClustersMarshaler struct {
	Input *types.DescribeClustersInput
}

// DescribeDefaultClusterParametersMarshaler defines marshaler for DescribeDefaultClusterParameters operation
type DescribeDefaultClusterParametersMarshaler struct {
	Input *types.DescribeDefaultClusterParametersInput
}

// DescribeEventCategoriesMarshaler defines marshaler for DescribeEventCategories operation
type DescribeEventCategoriesMarshaler struct {
	Input *types.DescribeEventCategoriesInput
}

// DescribeEventSubscriptionsMarshaler defines marshaler for DescribeEventSubscriptions operation
type DescribeEventSubscriptionsMarshaler struct {
	Input *types.DescribeEventSubscriptionsInput
}

// DescribeEventsMarshaler defines marshaler for DescribeEvents operation
type DescribeEventsMarshaler struct {
	Input *types.DescribeEventsInput
}

// DescribeHsmClientCertificatesMarshaler defines marshaler for DescribeHsmClientCertificates operation
type DescribeHsmClientCertificatesMarshaler struct {
	Input *types.DescribeHsmClientCertificatesInput
}

// DescribeHsmConfigurationsMarshaler defines marshaler for DescribeHsmConfigurations operation
type DescribeHsmConfigurationsMarshaler struct {
	Input *types.DescribeHsmConfigurationsInput
}

// DescribeLoggingStatusMarshaler defines marshaler for DescribeLoggingStatus operation
type DescribeLoggingStatusMarshaler struct {
	Input *types.DescribeLoggingStatusInput
}

// DescribeNodeConfigurationOptionsMarshaler defines marshaler for DescribeNodeConfigurationOptions operation
type DescribeNodeConfigurationOptionsMarshaler struct {
	Input *types.DescribeNodeConfigurationOptionsInput
}

// DescribeOrderableClusterOptionsMarshaler defines marshaler for DescribeOrderableClusterOptions operation
type DescribeOrderableClusterOptionsMarshaler struct {
	Input *types.DescribeOrderableClusterOptionsInput
}

// DescribeReservedNodeOfferingsMarshaler defines marshaler for DescribeReservedNodeOfferings operation
type DescribeReservedNodeOfferingsMarshaler struct {
	Input *types.DescribeReservedNodeOfferingsInput
}

// DescribeReservedNodesMarshaler defines marshaler for DescribeReservedNodes operation
type DescribeReservedNodesMarshaler struct {
	Input *types.DescribeReservedNodesInput
}

// DescribeResizeMarshaler defines marshaler for DescribeResize operation
type DescribeResizeMarshaler struct {
	Input *types.DescribeResizeInput
}

// DescribeSnapshotCopyGrantsMarshaler defines marshaler for DescribeSnapshotCopyGrants operation
type DescribeSnapshotCopyGrantsMarshaler struct {
	Input *types.DescribeSnapshotCopyGrantsInput
}

// DescribeSnapshotSchedulesMarshaler defines marshaler for DescribeSnapshotSchedules operation
type DescribeSnapshotSchedulesMarshaler struct {
	Input *types.DescribeSnapshotSchedulesInput
}

// DescribeStorageMarshaler defines marshaler for DescribeStorage operation
type DescribeStorageMarshaler struct {
	Input *types.DescribeStorageInput
}

// DescribeTableRestoreStatusMarshaler defines marshaler for DescribeTableRestoreStatus operation
type DescribeTableRestoreStatusMarshaler struct {
	Input *types.DescribeTableRestoreStatusInput
}

// DescribeTagsMarshaler defines marshaler for DescribeTags operation
type DescribeTagsMarshaler struct {
	Input *types.DescribeTagsInput
}

// DisableLoggingMarshaler defines marshaler for DisableLogging operation
type DisableLoggingMarshaler struct {
	Input *types.DisableLoggingInput
}

// DisableSnapshotCopyMarshaler defines marshaler for DisableSnapshotCopy operation
type DisableSnapshotCopyMarshaler struct {
	Input *types.DisableSnapshotCopyInput
}

// EnableLoggingMarshaler defines marshaler for EnableLogging operation
type EnableLoggingMarshaler struct {
	Input *types.EnableLoggingInput
}

// EnableSnapshotCopyMarshaler defines marshaler for EnableSnapshotCopy operation
type EnableSnapshotCopyMarshaler struct {
	Input *types.EnableSnapshotCopyInput
}

// GetClusterCredentialsMarshaler defines marshaler for GetClusterCredentials operation
type GetClusterCredentialsMarshaler struct {
	Input *types.GetClusterCredentialsInput
}

// GetReservedNodeExchangeOfferingsMarshaler defines marshaler for GetReservedNodeExchangeOfferings operation
type GetReservedNodeExchangeOfferingsMarshaler struct {
	Input *types.GetReservedNodeExchangeOfferingsInput
}

// ModifyClusterMarshaler defines marshaler for ModifyCluster operation
type ModifyClusterMarshaler struct {
	Input *types.ModifyClusterInput
}

// ModifyClusterDbRevisionMarshaler defines marshaler for ModifyClusterDbRevision operation
type ModifyClusterDbRevisionMarshaler struct {
	Input *types.ModifyClusterDbRevisionInput
}

// ModifyClusterIamRolesMarshaler defines marshaler for ModifyClusterIamRoles operation
type ModifyClusterIamRolesMarshaler struct {
	Input *types.ModifyClusterIamRolesInput
}

// ModifyClusterMaintenanceMarshaler defines marshaler for ModifyClusterMaintenance operation
type ModifyClusterMaintenanceMarshaler struct {
	Input *types.ModifyClusterMaintenanceInput
}

// ModifyClusterParameterGroupMarshaler defines marshaler for ModifyClusterParameterGroup operation
type ModifyClusterParameterGroupMarshaler struct {
	Input *types.ModifyClusterParameterGroupInput
}

// ModifyClusterSnapshotMarshaler defines marshaler for ModifyClusterSnapshot operation
type ModifyClusterSnapshotMarshaler struct {
	Input *types.ModifyClusterSnapshotInput
}

// ModifyClusterSnapshotScheduleMarshaler defines marshaler for ModifyClusterSnapshotSchedule operation
type ModifyClusterSnapshotScheduleMarshaler struct {
	Input *types.ModifyClusterSnapshotScheduleInput
}

// ModifyClusterSubnetGroupMarshaler defines marshaler for ModifyClusterSubnetGroup operation
type ModifyClusterSubnetGroupMarshaler struct {
	Input *types.ModifyClusterSubnetGroupInput
}

// ModifyEventSubscriptionMarshaler defines marshaler for ModifyEventSubscription operation
type ModifyEventSubscriptionMarshaler struct {
	Input *types.ModifyEventSubscriptionInput
}

// ModifySnapshotCopyRetentionPeriodMarshaler defines marshaler for ModifySnapshotCopyRetentionPeriod operation
type ModifySnapshotCopyRetentionPeriodMarshaler struct {
	Input *types.ModifySnapshotCopyRetentionPeriodInput
}

// ModifySnapshotScheduleMarshaler defines marshaler for ModifySnapshotSchedule operation
type ModifySnapshotScheduleMarshaler struct {
	Input *types.ModifySnapshotScheduleInput
}

// PurchaseReservedNodeOfferingMarshaler defines marshaler for PurchaseReservedNodeOffering operation
type PurchaseReservedNodeOfferingMarshaler struct {
	Input *types.PurchaseReservedNodeOfferingInput
}

// RebootClusterMarshaler defines marshaler for RebootCluster operation
type RebootClusterMarshaler struct {
	Input *types.RebootClusterInput
}

// ResetClusterParameterGroupMarshaler defines marshaler for ResetClusterParameterGroup operation
type ResetClusterParameterGroupMarshaler struct {
	Input *types.ResetClusterParameterGroupInput
}

// ResizeClusterMarshaler defines marshaler for ResizeCluster operation
type ResizeClusterMarshaler struct {
	Input *types.ResizeClusterInput
}

// RestoreFromClusterSnapshotMarshaler defines marshaler for RestoreFromClusterSnapshot operation
type RestoreFromClusterSnapshotMarshaler struct {
	Input *types.RestoreFromClusterSnapshotInput
}

// RestoreTableFromClusterSnapshotMarshaler defines marshaler for RestoreTableFromClusterSnapshot operation
type RestoreTableFromClusterSnapshotMarshaler struct {
	Input *types.RestoreTableFromClusterSnapshotInput
}

// RevokeClusterSecurityGroupIngressMarshaler defines marshaler for RevokeClusterSecurityGroupIngress operation
type RevokeClusterSecurityGroupIngressMarshaler struct {
	Input *types.RevokeClusterSecurityGroupIngressInput
}

// RevokeSnapshotAccessMarshaler defines marshaler for RevokeSnapshotAccess operation
type RevokeSnapshotAccessMarshaler struct {
	Input *types.RevokeSnapshotAccessInput
}

// RotateEncryptionKeyMarshaler defines marshaler for RotateEncryptionKey operation
type RotateEncryptionKeyMarshaler struct {
	Input *types.RotateEncryptionKeyInput
}

func MarshalAcceptReservedNodeExchangeInputShapeAWSQuery(v *types.AcceptReservedNodeExchangeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAuthorizeClusterSecurityGroupIngressInputShapeAWSQuery(v *types.AuthorizeClusterSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalAuthorizeSnapshotAccessInputShapeAWSQuery(v *types.AuthorizeSnapshotAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalBatchDeleteClusterSnapshotsInputShapeAWSQuery(v *types.BatchDeleteClusterSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalBatchModifyClusterSnapshotsInputShapeAWSQuery(v *types.BatchModifyClusterSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCancelResizeInputShapeAWSQuery(v *types.CancelResizeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCopyClusterSnapshotInputShapeAWSQuery(v *types.CopyClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateClusterInputShapeAWSQuery(v *types.CreateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateClusterParameterGroupInputShapeAWSQuery(v *types.CreateClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateClusterSecurityGroupInputShapeAWSQuery(v *types.CreateClusterSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateClusterSnapshotInputShapeAWSQuery(v *types.CreateClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateClusterSubnetGroupInputShapeAWSQuery(v *types.CreateClusterSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateEventSubscriptionInputShapeAWSQuery(v *types.CreateEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateHsmClientCertificateInputShapeAWSQuery(v *types.CreateHsmClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateHsmConfigurationInputShapeAWSQuery(v *types.CreateHsmConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateSnapshotCopyGrantInputShapeAWSQuery(v *types.CreateSnapshotCopyGrantInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateSnapshotScheduleInputShapeAWSQuery(v *types.CreateSnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalCreateTagsInputShapeAWSQuery(v *types.CreateTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteClusterInputShapeAWSQuery(v *types.DeleteClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteClusterParameterGroupInputShapeAWSQuery(v *types.DeleteClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteClusterSecurityGroupInputShapeAWSQuery(v *types.DeleteClusterSecurityGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteClusterSnapshotInputShapeAWSQuery(v *types.DeleteClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteClusterSubnetGroupInputShapeAWSQuery(v *types.DeleteClusterSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteEventSubscriptionInputShapeAWSQuery(v *types.DeleteEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteHsmClientCertificateInputShapeAWSQuery(v *types.DeleteHsmClientCertificateInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteHsmConfigurationInputShapeAWSQuery(v *types.DeleteHsmConfigurationInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteSnapshotCopyGrantInputShapeAWSQuery(v *types.DeleteSnapshotCopyGrantInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteSnapshotScheduleInputShapeAWSQuery(v *types.DeleteSnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDeleteTagsInputShapeAWSQuery(v *types.DeleteTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeAccountAttributesInputShapeAWSQuery(v *types.DescribeAccountAttributesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterDbRevisionsInputShapeAWSQuery(v *types.DescribeClusterDbRevisionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterParameterGroupsInputShapeAWSQuery(v *types.DescribeClusterParameterGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterParametersInputShapeAWSQuery(v *types.DescribeClusterParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterSecurityGroupsInputShapeAWSQuery(v *types.DescribeClusterSecurityGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterSnapshotsInputShapeAWSQuery(v *types.DescribeClusterSnapshotsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterSubnetGroupsInputShapeAWSQuery(v *types.DescribeClusterSubnetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterTracksInputShapeAWSQuery(v *types.DescribeClusterTracksInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClusterVersionsInputShapeAWSQuery(v *types.DescribeClusterVersionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeClustersInputShapeAWSQuery(v *types.DescribeClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeDefaultClusterParametersInputShapeAWSQuery(v *types.DescribeDefaultClusterParametersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventCategoriesInputShapeAWSQuery(v *types.DescribeEventCategoriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventSubscriptionsInputShapeAWSQuery(v *types.DescribeEventSubscriptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeEventsInputShapeAWSQuery(v *types.DescribeEventsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeHsmClientCertificatesInputShapeAWSQuery(v *types.DescribeHsmClientCertificatesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeHsmConfigurationsInputShapeAWSQuery(v *types.DescribeHsmConfigurationsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeLoggingStatusInputShapeAWSQuery(v *types.DescribeLoggingStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeNodeConfigurationOptionsInputShapeAWSQuery(v *types.DescribeNodeConfigurationOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeOrderableClusterOptionsInputShapeAWSQuery(v *types.DescribeOrderableClusterOptionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReservedNodeOfferingsInputShapeAWSQuery(v *types.DescribeReservedNodeOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeReservedNodesInputShapeAWSQuery(v *types.DescribeReservedNodesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeResizeInputShapeAWSQuery(v *types.DescribeResizeInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeSnapshotCopyGrantsInputShapeAWSQuery(v *types.DescribeSnapshotCopyGrantsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeSnapshotSchedulesInputShapeAWSQuery(v *types.DescribeSnapshotSchedulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeStorageInputShapeAWSQuery(v *types.DescribeStorageInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeTableRestoreStatusInputShapeAWSQuery(v *types.DescribeTableRestoreStatusInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDescribeTagsInputShapeAWSQuery(v *types.DescribeTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDisableLoggingInputShapeAWSQuery(v *types.DisableLoggingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalDisableSnapshotCopyInputShapeAWSQuery(v *types.DisableSnapshotCopyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalEnableLoggingInputShapeAWSQuery(v *types.EnableLoggingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalEnableSnapshotCopyInputShapeAWSQuery(v *types.EnableSnapshotCopyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetClusterCredentialsInputShapeAWSQuery(v *types.GetClusterCredentialsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalGetReservedNodeExchangeOfferingsInputShapeAWSQuery(v *types.GetReservedNodeExchangeOfferingsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterInputShapeAWSQuery(v *types.ModifyClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterDbRevisionInputShapeAWSQuery(v *types.ModifyClusterDbRevisionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterIamRolesInputShapeAWSQuery(v *types.ModifyClusterIamRolesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterMaintenanceInputShapeAWSQuery(v *types.ModifyClusterMaintenanceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterParameterGroupInputShapeAWSQuery(v *types.ModifyClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterSnapshotInputShapeAWSQuery(v *types.ModifyClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterSnapshotScheduleInputShapeAWSQuery(v *types.ModifyClusterSnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyClusterSubnetGroupInputShapeAWSQuery(v *types.ModifyClusterSubnetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifyEventSubscriptionInputShapeAWSQuery(v *types.ModifyEventSubscriptionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifySnapshotCopyRetentionPeriodInputShapeAWSQuery(v *types.ModifySnapshotCopyRetentionPeriodInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalModifySnapshotScheduleInputShapeAWSQuery(v *types.ModifySnapshotScheduleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalPurchaseReservedNodeOfferingInputShapeAWSQuery(v *types.PurchaseReservedNodeOfferingInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRebootClusterInputShapeAWSQuery(v *types.RebootClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResetClusterParameterGroupInputShapeAWSQuery(v *types.ResetClusterParameterGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalResizeClusterInputShapeAWSQuery(v *types.ResizeClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreFromClusterSnapshotInputShapeAWSQuery(v *types.RestoreFromClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRestoreTableFromClusterSnapshotInputShapeAWSQuery(v *types.RestoreTableFromClusterSnapshotInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRevokeClusterSecurityGroupIngressInputShapeAWSQuery(v *types.RevokeClusterSecurityGroupIngressInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRevokeSnapshotAccessInputShapeAWSQuery(v *types.RevokeSnapshotAccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}

func MarshalRotateEncryptionKeyInputShapeAWSQuery(v *types.RotateEncryptionKeyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	query.Build(r)
	return nil
}
func (m AcceptReservedNodeExchangeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAcceptReservedNodeExchangeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AcceptReservedNodeExchangeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AcceptReservedNodeExchange.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeClusterSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeClusterSecurityGroupIngressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeClusterSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeClusterSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m AuthorizeSnapshotAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalAuthorizeSnapshotAccessInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m AuthorizeSnapshotAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "AuthorizeSnapshotAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchDeleteClusterSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchDeleteClusterSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchDeleteClusterSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchDeleteClusterSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchModifyClusterSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchModifyClusterSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchModifyClusterSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchModifyClusterSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CancelResizeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelResizeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelResizeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelResize.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CopyClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterSecurityGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateClusterSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateClusterSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateHsmClientCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHsmClientCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHsmClientCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHsmClientCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateHsmConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHsmConfigurationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHsmConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHsmConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotCopyGrantMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotCopyGrantInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotCopyGrantMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshotCopyGrant.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSnapshotScheduleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterSecurityGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterSecurityGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterSecurityGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClusterSecurityGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteClusterSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteHsmClientCertificateMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteHsmClientCertificateInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteHsmClientCertificateMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteHsmClientCertificate.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteHsmConfigurationMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteHsmConfigurationInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteHsmConfigurationMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteHsmConfiguration.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSnapshotCopyGrantMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSnapshotCopyGrantInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSnapshotCopyGrantMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSnapshotCopyGrant.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSnapshotScheduleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeAccountAttributesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeAccountAttributesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeAccountAttributesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeAccountAttributes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterDbRevisionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterDbRevisionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterDbRevisionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterDbRevisions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterParameterGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterParameterGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterParameterGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterParameterGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterSecurityGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterSecurityGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterSecurityGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterSecurityGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterSnapshotsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterSnapshotsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterSnapshotsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterSnapshots.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterSubnetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterSubnetGroupsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterSubnetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterSubnetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterTracksMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterTracksInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterTracksMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterTracks.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClusterVersionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClusterVersionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClusterVersionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusterVersions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClustersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeDefaultClusterParametersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeDefaultClusterParametersInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeDefaultClusterParametersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeDefaultClusterParameters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventCategoriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventCategoriesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventCategoriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventCategories.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventSubscriptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventSubscriptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventSubscriptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEventSubscriptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEventsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEventsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEventsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEvents.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHsmClientCertificatesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHsmClientCertificatesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHsmClientCertificatesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHsmClientCertificates.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeHsmConfigurationsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeHsmConfigurationsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeHsmConfigurationsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeHsmConfigurations.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLoggingStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLoggingStatusInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLoggingStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLoggingStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeNodeConfigurationOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeNodeConfigurationOptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeNodeConfigurationOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeNodeConfigurationOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeOrderableClusterOptionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeOrderableClusterOptionsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeOrderableClusterOptionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeOrderableClusterOptions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedNodeOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedNodeOfferingsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedNodeOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedNodeOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeReservedNodesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeReservedNodesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeReservedNodesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeReservedNodes.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeResizeMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeResizeInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeResizeMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeResize.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotCopyGrantsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotCopyGrantsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotCopyGrantsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshotCopyGrants.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSnapshotSchedulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSnapshotSchedulesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSnapshotSchedulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSnapshotSchedules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStorageMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStorageInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStorageMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStorage.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTableRestoreStatusMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTableRestoreStatusInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTableRestoreStatusMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTableRestoreStatus.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeTagsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableLoggingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableLoggingInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableLoggingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableLogging.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DisableSnapshotCopyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDisableSnapshotCopyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DisableSnapshotCopyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DisableSnapshotCopy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableLoggingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableLoggingInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableLoggingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableLogging.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m EnableSnapshotCopyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalEnableSnapshotCopyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m EnableSnapshotCopyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "EnableSnapshotCopy.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetClusterCredentialsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetClusterCredentialsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetClusterCredentialsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetClusterCredentials.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetReservedNodeExchangeOfferingsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetReservedNodeExchangeOfferingsInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetReservedNodeExchangeOfferingsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetReservedNodeExchangeOfferings.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterDbRevisionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterDbRevisionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterDbRevisionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterDbRevision.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterIamRolesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterIamRolesInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterIamRolesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterIamRoles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterMaintenanceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterMaintenanceInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterMaintenanceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterMaintenance.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterSnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterSnapshotScheduleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterSnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterSnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyClusterSubnetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyClusterSubnetGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyClusterSubnetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyClusterSubnetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifyEventSubscriptionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifyEventSubscriptionInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifyEventSubscriptionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifyEventSubscription.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifySnapshotCopyRetentionPeriodMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifySnapshotCopyRetentionPeriodInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifySnapshotCopyRetentionPeriodMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifySnapshotCopyRetentionPeriod.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ModifySnapshotScheduleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalModifySnapshotScheduleInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ModifySnapshotScheduleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ModifySnapshotSchedule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PurchaseReservedNodeOfferingMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPurchaseReservedNodeOfferingInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PurchaseReservedNodeOfferingMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PurchaseReservedNodeOffering.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RebootClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRebootClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RebootClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RebootCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResetClusterParameterGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResetClusterParameterGroupInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResetClusterParameterGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResetClusterParameterGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ResizeClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalResizeClusterInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ResizeClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ResizeCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreFromClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreFromClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreFromClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreFromClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreTableFromClusterSnapshotMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreTableFromClusterSnapshotInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreTableFromClusterSnapshotMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreTableFromClusterSnapshot.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeClusterSecurityGroupIngressMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeClusterSecurityGroupIngressInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeClusterSecurityGroupIngressMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeClusterSecurityGroupIngress.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RevokeSnapshotAccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRevokeSnapshotAccessInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RevokeSnapshotAccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RevokeSnapshotAccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RotateEncryptionKeyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRotateEncryptionKeyInputShapeAWSQuery(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RotateEncryptionKeyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RotateEncryptionKey.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
