// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/transcribe/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateVocabularyMarshaler defines marshaler for CreateVocabulary operation
type CreateVocabularyMarshaler struct {
	Input *types.CreateVocabularyInput
}

// DeleteTranscriptionJobMarshaler defines marshaler for DeleteTranscriptionJob operation
type DeleteTranscriptionJobMarshaler struct {
	Input *types.DeleteTranscriptionJobInput
}

// DeleteVocabularyMarshaler defines marshaler for DeleteVocabulary operation
type DeleteVocabularyMarshaler struct {
	Input *types.DeleteVocabularyInput
}

// GetTranscriptionJobMarshaler defines marshaler for GetTranscriptionJob operation
type GetTranscriptionJobMarshaler struct {
	Input *types.GetTranscriptionJobInput
}

// GetVocabularyMarshaler defines marshaler for GetVocabulary operation
type GetVocabularyMarshaler struct {
	Input *types.GetVocabularyInput
}

// ListTranscriptionJobsMarshaler defines marshaler for ListTranscriptionJobs operation
type ListTranscriptionJobsMarshaler struct {
	Input *types.ListTranscriptionJobsInput
}

// ListVocabulariesMarshaler defines marshaler for ListVocabularies operation
type ListVocabulariesMarshaler struct {
	Input *types.ListVocabulariesInput
}

// StartTranscriptionJobMarshaler defines marshaler for StartTranscriptionJob operation
type StartTranscriptionJobMarshaler struct {
	Input *types.StartTranscriptionJobInput
}

// UpdateVocabularyMarshaler defines marshaler for UpdateVocabulary operation
type UpdateVocabularyMarshaler struct {
	Input *types.UpdateVocabularyInput
}

func MarshalCreateVocabularyInputShapeAWSJSON(v *types.CreateVocabularyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteTranscriptionJobInputShapeAWSJSON(v *types.DeleteTranscriptionJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteVocabularyInputShapeAWSJSON(v *types.DeleteVocabularyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetTranscriptionJobInputShapeAWSJSON(v *types.GetTranscriptionJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetVocabularyInputShapeAWSJSON(v *types.GetVocabularyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTranscriptionJobsInputShapeAWSJSON(v *types.ListTranscriptionJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListVocabulariesInputShapeAWSJSON(v *types.ListVocabulariesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartTranscriptionJobInputShapeAWSJSON(v *types.StartTranscriptionJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateVocabularyInputShapeAWSJSON(v *types.UpdateVocabularyInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateVocabularyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateVocabularyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateVocabularyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateVocabulary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteTranscriptionJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteTranscriptionJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteTranscriptionJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteTranscriptionJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteVocabularyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteVocabularyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteVocabularyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteVocabulary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTranscriptionJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTranscriptionJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTranscriptionJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTranscriptionJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetVocabularyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetVocabularyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetVocabularyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetVocabulary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTranscriptionJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTranscriptionJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTranscriptionJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTranscriptionJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListVocabulariesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListVocabulariesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListVocabulariesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListVocabularies.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartTranscriptionJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartTranscriptionJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartTranscriptionJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartTranscriptionJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateVocabularyMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateVocabularyInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateVocabularyMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateVocabulary.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
