// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/cloudhsmv2/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CopyBackupToRegionMarshaler defines marshaler for CopyBackupToRegion operation
type CopyBackupToRegionMarshaler struct {
	Input *types.CopyBackupToRegionInput
}

// CreateClusterMarshaler defines marshaler for CreateCluster operation
type CreateClusterMarshaler struct {
	Input *types.CreateClusterInput
}

// CreateHsmMarshaler defines marshaler for CreateHsm operation
type CreateHsmMarshaler struct {
	Input *types.CreateHsmInput
}

// DeleteBackupMarshaler defines marshaler for DeleteBackup operation
type DeleteBackupMarshaler struct {
	Input *types.DeleteBackupInput
}

// DeleteClusterMarshaler defines marshaler for DeleteCluster operation
type DeleteClusterMarshaler struct {
	Input *types.DeleteClusterInput
}

// DeleteHsmMarshaler defines marshaler for DeleteHsm operation
type DeleteHsmMarshaler struct {
	Input *types.DeleteHsmInput
}

// DescribeBackupsMarshaler defines marshaler for DescribeBackups operation
type DescribeBackupsMarshaler struct {
	Input *types.DescribeBackupsInput
}

// DescribeClustersMarshaler defines marshaler for DescribeClusters operation
type DescribeClustersMarshaler struct {
	Input *types.DescribeClustersInput
}

// InitializeClusterMarshaler defines marshaler for InitializeCluster operation
type InitializeClusterMarshaler struct {
	Input *types.InitializeClusterInput
}

// ListTagsMarshaler defines marshaler for ListTags operation
type ListTagsMarshaler struct {
	Input *types.ListTagsInput
}

// RestoreBackupMarshaler defines marshaler for RestoreBackup operation
type RestoreBackupMarshaler struct {
	Input *types.RestoreBackupInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

func MarshalCopyBackupToRegionInputShapeAWSJSON(v *types.CopyBackupToRegionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateClusterInputShapeAWSJSON(v *types.CreateClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateHsmInputShapeAWSJSON(v *types.CreateHsmInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteBackupInputShapeAWSJSON(v *types.DeleteBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteClusterInputShapeAWSJSON(v *types.DeleteClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteHsmInputShapeAWSJSON(v *types.DeleteHsmInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeBackupsInputShapeAWSJSON(v *types.DescribeBackupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeClustersInputShapeAWSJSON(v *types.DescribeClustersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalInitializeClusterInputShapeAWSJSON(v *types.InitializeClusterInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsInputShapeAWSJSON(v *types.ListTagsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalRestoreBackupInputShapeAWSJSON(v *types.RestoreBackupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CopyBackupToRegionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCopyBackupToRegionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CopyBackupToRegionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CopyBackupToRegion.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateHsmMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateHsmInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateHsmMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateHsm.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteBackupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteHsmMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteHsmInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteHsmMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteHsm.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeBackupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeBackupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeBackupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeBackups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeClustersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeClustersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeClustersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeClusters.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m InitializeClusterMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalInitializeClusterInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m InitializeClusterMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "InitializeCluster.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTags.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m RestoreBackupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalRestoreBackupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m RestoreBackupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "RestoreBackup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
