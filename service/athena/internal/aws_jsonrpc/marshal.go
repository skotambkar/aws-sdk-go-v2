// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/athena/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchGetNamedQueryMarshaler defines marshaler for BatchGetNamedQuery operation
type BatchGetNamedQueryMarshaler struct {
	Input *types.BatchGetNamedQueryInput
}

// BatchGetQueryExecutionMarshaler defines marshaler for BatchGetQueryExecution operation
type BatchGetQueryExecutionMarshaler struct {
	Input *types.BatchGetQueryExecutionInput
}

// CreateNamedQueryMarshaler defines marshaler for CreateNamedQuery operation
type CreateNamedQueryMarshaler struct {
	Input *types.CreateNamedQueryInput
}

// CreateWorkGroupMarshaler defines marshaler for CreateWorkGroup operation
type CreateWorkGroupMarshaler struct {
	Input *types.CreateWorkGroupInput
}

// DeleteNamedQueryMarshaler defines marshaler for DeleteNamedQuery operation
type DeleteNamedQueryMarshaler struct {
	Input *types.DeleteNamedQueryInput
}

// DeleteWorkGroupMarshaler defines marshaler for DeleteWorkGroup operation
type DeleteWorkGroupMarshaler struct {
	Input *types.DeleteWorkGroupInput
}

// GetNamedQueryMarshaler defines marshaler for GetNamedQuery operation
type GetNamedQueryMarshaler struct {
	Input *types.GetNamedQueryInput
}

// GetQueryExecutionMarshaler defines marshaler for GetQueryExecution operation
type GetQueryExecutionMarshaler struct {
	Input *types.GetQueryExecutionInput
}

// GetQueryResultsMarshaler defines marshaler for GetQueryResults operation
type GetQueryResultsMarshaler struct {
	Input *types.GetQueryResultsInput
}

// GetWorkGroupMarshaler defines marshaler for GetWorkGroup operation
type GetWorkGroupMarshaler struct {
	Input *types.GetWorkGroupInput
}

// ListNamedQueriesMarshaler defines marshaler for ListNamedQueries operation
type ListNamedQueriesMarshaler struct {
	Input *types.ListNamedQueriesInput
}

// ListQueryExecutionsMarshaler defines marshaler for ListQueryExecutions operation
type ListQueryExecutionsMarshaler struct {
	Input *types.ListQueryExecutionsInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// ListWorkGroupsMarshaler defines marshaler for ListWorkGroups operation
type ListWorkGroupsMarshaler struct {
	Input *types.ListWorkGroupsInput
}

// StartQueryExecutionMarshaler defines marshaler for StartQueryExecution operation
type StartQueryExecutionMarshaler struct {
	Input *types.StartQueryExecutionInput
}

// StopQueryExecutionMarshaler defines marshaler for StopQueryExecution operation
type StopQueryExecutionMarshaler struct {
	Input *types.StopQueryExecutionInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateWorkGroupMarshaler defines marshaler for UpdateWorkGroup operation
type UpdateWorkGroupMarshaler struct {
	Input *types.UpdateWorkGroupInput
}

func MarshalBatchGetNamedQueryInputShapeAWSJSON(v *types.BatchGetNamedQueryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalBatchGetQueryExecutionInputShapeAWSJSON(v *types.BatchGetQueryExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateNamedQueryInputShapeAWSJSON(v *types.CreateNamedQueryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateWorkGroupInputShapeAWSJSON(v *types.CreateWorkGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteNamedQueryInputShapeAWSJSON(v *types.DeleteNamedQueryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteWorkGroupInputShapeAWSJSON(v *types.DeleteWorkGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetNamedQueryInputShapeAWSJSON(v *types.GetNamedQueryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetQueryExecutionInputShapeAWSJSON(v *types.GetQueryExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetQueryResultsInputShapeAWSJSON(v *types.GetQueryResultsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetWorkGroupInputShapeAWSJSON(v *types.GetWorkGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListNamedQueriesInputShapeAWSJSON(v *types.ListNamedQueriesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListQueryExecutionsInputShapeAWSJSON(v *types.ListQueryExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListWorkGroupsInputShapeAWSJSON(v *types.ListWorkGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartQueryExecutionInputShapeAWSJSON(v *types.StartQueryExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopQueryExecutionInputShapeAWSJSON(v *types.StopQueryExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateWorkGroupInputShapeAWSJSON(v *types.UpdateWorkGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m BatchGetNamedQueryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetNamedQueryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetNamedQueryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetNamedQuery.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m BatchGetQueryExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetQueryExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetQueryExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetQueryExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateNamedQueryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateNamedQueryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateNamedQueryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateNamedQuery.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateWorkGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateWorkGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateWorkGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateWorkGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteNamedQueryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteNamedQueryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteNamedQueryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteNamedQuery.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteWorkGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteWorkGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteWorkGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteWorkGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetNamedQueryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetNamedQueryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetNamedQueryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetNamedQuery.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQueryExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQueryExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQueryExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQueryExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetQueryResultsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetQueryResultsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetQueryResultsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetQueryResults.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetWorkGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetWorkGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetWorkGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetWorkGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListNamedQueriesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListNamedQueriesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListNamedQueriesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListNamedQueries.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListQueryExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListQueryExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListQueryExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListQueryExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListWorkGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListWorkGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListWorkGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListWorkGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartQueryExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartQueryExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartQueryExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartQueryExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopQueryExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopQueryExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopQueryExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopQueryExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateWorkGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateWorkGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateWorkGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateWorkGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
