// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/signer/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelSigningProfileMarshaler defines marshaler for CancelSigningProfile operation
type CancelSigningProfileMarshaler struct {
	Input *types.CancelSigningProfileInput
}

// DescribeSigningJobMarshaler defines marshaler for DescribeSigningJob operation
type DescribeSigningJobMarshaler struct {
	Input *types.DescribeSigningJobInput
}

// GetSigningPlatformMarshaler defines marshaler for GetSigningPlatform operation
type GetSigningPlatformMarshaler struct {
	Input *types.GetSigningPlatformInput
}

// GetSigningProfileMarshaler defines marshaler for GetSigningProfile operation
type GetSigningProfileMarshaler struct {
	Input *types.GetSigningProfileInput
}

// ListSigningJobsMarshaler defines marshaler for ListSigningJobs operation
type ListSigningJobsMarshaler struct {
	Input *types.ListSigningJobsInput
}

// ListSigningPlatformsMarshaler defines marshaler for ListSigningPlatforms operation
type ListSigningPlatformsMarshaler struct {
	Input *types.ListSigningPlatformsInput
}

// ListSigningProfilesMarshaler defines marshaler for ListSigningProfiles operation
type ListSigningProfilesMarshaler struct {
	Input *types.ListSigningProfilesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// PutSigningProfileMarshaler defines marshaler for PutSigningProfile operation
type PutSigningProfileMarshaler struct {
	Input *types.PutSigningProfileInput
}

// StartSigningJobMarshaler defines marshaler for StartSigningJob operation
type StartSigningJobMarshaler struct {
	Input *types.StartSigningJobInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

func MarshalCancelSigningProfileInputShapeAWSREST(v *types.CancelSigningProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelSigningProfileInputShapeAWSJSON(v *types.CancelSigningProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeSigningJobInputShapeAWSREST(v *types.DescribeSigningJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeSigningJobInputShapeAWSJSON(v *types.DescribeSigningJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSigningPlatformInputShapeAWSREST(v *types.GetSigningPlatformInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSigningPlatformInputShapeAWSJSON(v *types.GetSigningPlatformInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSigningProfileInputShapeAWSREST(v *types.GetSigningProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSigningProfileInputShapeAWSJSON(v *types.GetSigningProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSigningJobsInputShapeAWSREST(v *types.ListSigningJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSigningJobsInputShapeAWSJSON(v *types.ListSigningJobsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSigningPlatformsInputShapeAWSREST(v *types.ListSigningPlatformsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSigningPlatformsInputShapeAWSJSON(v *types.ListSigningPlatformsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListSigningProfilesInputShapeAWSREST(v *types.ListSigningProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListSigningProfilesInputShapeAWSJSON(v *types.ListSigningProfilesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutSigningProfileInputShapeAWSREST(v *types.PutSigningProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutSigningProfileInputShapeAWSJSON(v *types.PutSigningProfileInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartSigningJobInputShapeAWSREST(v *types.StartSigningJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartSigningJobInputShapeAWSJSON(v *types.StartSigningJobInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CancelSigningProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelSigningProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelSigningProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelSigningProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelSigningProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeSigningJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeSigningJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeSigningJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeSigningJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeSigningJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSigningPlatformMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSigningPlatformInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSigningPlatformInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSigningPlatformMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSigningPlatform.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSigningProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSigningProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSigningProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSigningProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSigningProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSigningJobsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSigningJobsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSigningJobsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSigningJobsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSigningJobs.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSigningPlatformsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSigningPlatformsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSigningPlatformsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSigningPlatformsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSigningPlatforms.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListSigningProfilesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListSigningProfilesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListSigningProfilesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListSigningProfilesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListSigningProfiles.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutSigningProfileMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutSigningProfileInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutSigningProfileInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutSigningProfileMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutSigningProfile.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartSigningJobMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartSigningJobInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartSigningJobInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartSigningJobMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartSigningJob.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
