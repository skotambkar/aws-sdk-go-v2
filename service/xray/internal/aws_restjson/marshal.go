// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/xray/types"
)

var _ bytes.Buffer
var _ awserr.Error

// BatchGetTracesMarshaler defines marshaler for BatchGetTraces operation
type BatchGetTracesMarshaler struct {
	Input *types.BatchGetTracesInput
}

// CreateGroupMarshaler defines marshaler for CreateGroup operation
type CreateGroupMarshaler struct {
	Input *types.CreateGroupInput
}

// CreateSamplingRuleMarshaler defines marshaler for CreateSamplingRule operation
type CreateSamplingRuleMarshaler struct {
	Input *types.CreateSamplingRuleInput
}

// DeleteGroupMarshaler defines marshaler for DeleteGroup operation
type DeleteGroupMarshaler struct {
	Input *types.DeleteGroupInput
}

// DeleteSamplingRuleMarshaler defines marshaler for DeleteSamplingRule operation
type DeleteSamplingRuleMarshaler struct {
	Input *types.DeleteSamplingRuleInput
}

// GetEncryptionConfigMarshaler defines marshaler for GetEncryptionConfig operation
type GetEncryptionConfigMarshaler struct {
	Input *types.GetEncryptionConfigInput
}

// GetGroupMarshaler defines marshaler for GetGroup operation
type GetGroupMarshaler struct {
	Input *types.GetGroupInput
}

// GetGroupsMarshaler defines marshaler for GetGroups operation
type GetGroupsMarshaler struct {
	Input *types.GetGroupsInput
}

// GetSamplingRulesMarshaler defines marshaler for GetSamplingRules operation
type GetSamplingRulesMarshaler struct {
	Input *types.GetSamplingRulesInput
}

// GetSamplingStatisticSummariesMarshaler defines marshaler for GetSamplingStatisticSummaries operation
type GetSamplingStatisticSummariesMarshaler struct {
	Input *types.GetSamplingStatisticSummariesInput
}

// GetSamplingTargetsMarshaler defines marshaler for GetSamplingTargets operation
type GetSamplingTargetsMarshaler struct {
	Input *types.GetSamplingTargetsInput
}

// GetServiceGraphMarshaler defines marshaler for GetServiceGraph operation
type GetServiceGraphMarshaler struct {
	Input *types.GetServiceGraphInput
}

// GetTimeSeriesServiceStatisticsMarshaler defines marshaler for GetTimeSeriesServiceStatistics operation
type GetTimeSeriesServiceStatisticsMarshaler struct {
	Input *types.GetTimeSeriesServiceStatisticsInput
}

// GetTraceGraphMarshaler defines marshaler for GetTraceGraph operation
type GetTraceGraphMarshaler struct {
	Input *types.GetTraceGraphInput
}

// GetTraceSummariesMarshaler defines marshaler for GetTraceSummaries operation
type GetTraceSummariesMarshaler struct {
	Input *types.GetTraceSummariesInput
}

// PutEncryptionConfigMarshaler defines marshaler for PutEncryptionConfig operation
type PutEncryptionConfigMarshaler struct {
	Input *types.PutEncryptionConfigInput
}

// PutTelemetryRecordsMarshaler defines marshaler for PutTelemetryRecords operation
type PutTelemetryRecordsMarshaler struct {
	Input *types.PutTelemetryRecordsInput
}

// PutTraceSegmentsMarshaler defines marshaler for PutTraceSegments operation
type PutTraceSegmentsMarshaler struct {
	Input *types.PutTraceSegmentsInput
}

// UpdateGroupMarshaler defines marshaler for UpdateGroup operation
type UpdateGroupMarshaler struct {
	Input *types.UpdateGroupInput
}

// UpdateSamplingRuleMarshaler defines marshaler for UpdateSamplingRule operation
type UpdateSamplingRuleMarshaler struct {
	Input *types.UpdateSamplingRuleInput
}

func MarshalBatchGetTracesInputShapeAWSREST(v *types.BatchGetTracesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalBatchGetTracesInputShapeAWSJSON(v *types.BatchGetTracesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateGroupInputShapeAWSREST(v *types.CreateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateGroupInputShapeAWSJSON(v *types.CreateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalCreateSamplingRuleInputShapeAWSREST(v *types.CreateSamplingRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateSamplingRuleInputShapeAWSJSON(v *types.CreateSamplingRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteGroupInputShapeAWSREST(v *types.DeleteGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteGroupInputShapeAWSJSON(v *types.DeleteGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteSamplingRuleInputShapeAWSREST(v *types.DeleteSamplingRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteSamplingRuleInputShapeAWSJSON(v *types.DeleteSamplingRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetEncryptionConfigInputShapeAWSREST(v *types.GetEncryptionConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetEncryptionConfigInputShapeAWSJSON(v *types.GetEncryptionConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGroupInputShapeAWSREST(v *types.GetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGroupInputShapeAWSJSON(v *types.GetGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetGroupsInputShapeAWSREST(v *types.GetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetGroupsInputShapeAWSJSON(v *types.GetGroupsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSamplingRulesInputShapeAWSREST(v *types.GetSamplingRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSamplingRulesInputShapeAWSJSON(v *types.GetSamplingRulesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSamplingStatisticSummariesInputShapeAWSREST(v *types.GetSamplingStatisticSummariesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSamplingStatisticSummariesInputShapeAWSJSON(v *types.GetSamplingStatisticSummariesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetSamplingTargetsInputShapeAWSREST(v *types.GetSamplingTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetSamplingTargetsInputShapeAWSJSON(v *types.GetSamplingTargetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetServiceGraphInputShapeAWSREST(v *types.GetServiceGraphInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetServiceGraphInputShapeAWSJSON(v *types.GetServiceGraphInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetTimeSeriesServiceStatisticsInputShapeAWSREST(v *types.GetTimeSeriesServiceStatisticsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetTimeSeriesServiceStatisticsInputShapeAWSJSON(v *types.GetTimeSeriesServiceStatisticsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetTraceGraphInputShapeAWSREST(v *types.GetTraceGraphInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetTraceGraphInputShapeAWSJSON(v *types.GetTraceGraphInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetTraceSummariesInputShapeAWSREST(v *types.GetTraceSummariesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetTraceSummariesInputShapeAWSJSON(v *types.GetTraceSummariesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutEncryptionConfigInputShapeAWSREST(v *types.PutEncryptionConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutEncryptionConfigInputShapeAWSJSON(v *types.PutEncryptionConfigInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutTelemetryRecordsInputShapeAWSREST(v *types.PutTelemetryRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutTelemetryRecordsInputShapeAWSJSON(v *types.PutTelemetryRecordsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalPutTraceSegmentsInputShapeAWSREST(v *types.PutTraceSegmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalPutTraceSegmentsInputShapeAWSJSON(v *types.PutTraceSegmentsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateGroupInputShapeAWSREST(v *types.UpdateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateGroupInputShapeAWSJSON(v *types.UpdateGroupInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateSamplingRuleInputShapeAWSREST(v *types.UpdateSamplingRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateSamplingRuleInputShapeAWSJSON(v *types.UpdateSamplingRuleInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m BatchGetTracesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalBatchGetTracesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalBatchGetTracesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m BatchGetTracesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "BatchGetTraces.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateSamplingRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateSamplingRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateSamplingRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateSamplingRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateSamplingRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteSamplingRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteSamplingRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteSamplingRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteSamplingRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteSamplingRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetEncryptionConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetEncryptionConfigInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetEncryptionConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetEncryptionConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetEncryptionConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetGroupsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetGroupsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetGroupsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetGroupsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetGroups.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSamplingRulesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSamplingRulesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSamplingRulesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSamplingRulesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSamplingRules.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSamplingStatisticSummariesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSamplingStatisticSummariesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSamplingStatisticSummariesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSamplingStatisticSummariesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSamplingStatisticSummaries.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetSamplingTargetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetSamplingTargetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetSamplingTargetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetSamplingTargetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetSamplingTargets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetServiceGraphMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetServiceGraphInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetServiceGraphInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetServiceGraphMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetServiceGraph.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTimeSeriesServiceStatisticsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTimeSeriesServiceStatisticsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetTimeSeriesServiceStatisticsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTimeSeriesServiceStatisticsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTimeSeriesServiceStatistics.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTraceGraphMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTraceGraphInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetTraceGraphInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTraceGraphMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTraceGraph.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetTraceSummariesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetTraceSummariesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetTraceSummariesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetTraceSummariesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetTraceSummaries.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutEncryptionConfigMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutEncryptionConfigInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutEncryptionConfigInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutEncryptionConfigMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutEncryptionConfig.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutTelemetryRecordsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutTelemetryRecordsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutTelemetryRecordsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutTelemetryRecordsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutTelemetryRecords.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m PutTraceSegmentsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalPutTraceSegmentsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalPutTraceSegmentsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m PutTraceSegmentsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "PutTraceSegments.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateGroupMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateGroupInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateGroupInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateGroupMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateGroup.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateSamplingRuleMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateSamplingRuleInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateSamplingRuleInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateSamplingRuleMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateSamplingRule.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
