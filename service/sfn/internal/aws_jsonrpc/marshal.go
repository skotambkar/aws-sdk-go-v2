// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_jsonrpc service, marshal.go contains the generated operation marshalers and methods on it.

package aws_jsonrpc

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/service/sfn/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateActivityMarshaler defines marshaler for CreateActivity operation
type CreateActivityMarshaler struct {
	Input *types.CreateActivityInput
}

// CreateStateMachineMarshaler defines marshaler for CreateStateMachine operation
type CreateStateMachineMarshaler struct {
	Input *types.CreateStateMachineInput
}

// DeleteActivityMarshaler defines marshaler for DeleteActivity operation
type DeleteActivityMarshaler struct {
	Input *types.DeleteActivityInput
}

// DeleteStateMachineMarshaler defines marshaler for DeleteStateMachine operation
type DeleteStateMachineMarshaler struct {
	Input *types.DeleteStateMachineInput
}

// DescribeActivityMarshaler defines marshaler for DescribeActivity operation
type DescribeActivityMarshaler struct {
	Input *types.DescribeActivityInput
}

// DescribeExecutionMarshaler defines marshaler for DescribeExecution operation
type DescribeExecutionMarshaler struct {
	Input *types.DescribeExecutionInput
}

// DescribeStateMachineMarshaler defines marshaler for DescribeStateMachine operation
type DescribeStateMachineMarshaler struct {
	Input *types.DescribeStateMachineInput
}

// DescribeStateMachineForExecutionMarshaler defines marshaler for DescribeStateMachineForExecution operation
type DescribeStateMachineForExecutionMarshaler struct {
	Input *types.DescribeStateMachineForExecutionInput
}

// GetActivityTaskMarshaler defines marshaler for GetActivityTask operation
type GetActivityTaskMarshaler struct {
	Input *types.GetActivityTaskInput
}

// GetExecutionHistoryMarshaler defines marshaler for GetExecutionHistory operation
type GetExecutionHistoryMarshaler struct {
	Input *types.GetExecutionHistoryInput
}

// ListActivitiesMarshaler defines marshaler for ListActivities operation
type ListActivitiesMarshaler struct {
	Input *types.ListActivitiesInput
}

// ListExecutionsMarshaler defines marshaler for ListExecutions operation
type ListExecutionsMarshaler struct {
	Input *types.ListExecutionsInput
}

// ListStateMachinesMarshaler defines marshaler for ListStateMachines operation
type ListStateMachinesMarshaler struct {
	Input *types.ListStateMachinesInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// SendTaskFailureMarshaler defines marshaler for SendTaskFailure operation
type SendTaskFailureMarshaler struct {
	Input *types.SendTaskFailureInput
}

// SendTaskHeartbeatMarshaler defines marshaler for SendTaskHeartbeat operation
type SendTaskHeartbeatMarshaler struct {
	Input *types.SendTaskHeartbeatInput
}

// SendTaskSuccessMarshaler defines marshaler for SendTaskSuccess operation
type SendTaskSuccessMarshaler struct {
	Input *types.SendTaskSuccessInput
}

// StartExecutionMarshaler defines marshaler for StartExecution operation
type StartExecutionMarshaler struct {
	Input *types.StartExecutionInput
}

// StopExecutionMarshaler defines marshaler for StopExecution operation
type StopExecutionMarshaler struct {
	Input *types.StopExecutionInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateStateMachineMarshaler defines marshaler for UpdateStateMachine operation
type UpdateStateMachineMarshaler struct {
	Input *types.UpdateStateMachineInput
}

func MarshalCreateActivityInputShapeAWSJSON(v *types.CreateActivityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalCreateStateMachineInputShapeAWSJSON(v *types.CreateStateMachineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteActivityInputShapeAWSJSON(v *types.DeleteActivityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDeleteStateMachineInputShapeAWSJSON(v *types.DeleteStateMachineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeActivityInputShapeAWSJSON(v *types.DescribeActivityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeExecutionInputShapeAWSJSON(v *types.DescribeExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeStateMachineInputShapeAWSJSON(v *types.DescribeStateMachineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalDescribeStateMachineForExecutionInputShapeAWSJSON(v *types.DescribeStateMachineForExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetActivityTaskInputShapeAWSJSON(v *types.GetActivityTaskInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalGetExecutionHistoryInputShapeAWSJSON(v *types.GetExecutionHistoryInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListActivitiesInputShapeAWSJSON(v *types.ListActivitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListExecutionsInputShapeAWSJSON(v *types.ListExecutionsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListStateMachinesInputShapeAWSJSON(v *types.ListStateMachinesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSendTaskFailureInputShapeAWSJSON(v *types.SendTaskFailureInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSendTaskHeartbeatInputShapeAWSJSON(v *types.SendTaskHeartbeatInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalSendTaskSuccessInputShapeAWSJSON(v *types.SendTaskSuccessInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStartExecutionInputShapeAWSJSON(v *types.StartExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalStopExecutionInputShapeAWSJSON(v *types.StopExecutionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}

func MarshalUpdateStateMachineInputShapeAWSJSON(v *types.UpdateStateMachineInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	jsonrpc.Build(r)
	return nil
}
func (m CreateActivityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateActivityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateActivityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateActivity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m CreateStateMachineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateStateMachineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateStateMachineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateStateMachine.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteActivityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteActivityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteActivityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteActivity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteStateMachineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteStateMachineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteStateMachineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteStateMachine.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeActivityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeActivityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeActivityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeActivity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStateMachineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStateMachineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStateMachineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStateMachine.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeStateMachineForExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeStateMachineForExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeStateMachineForExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeStateMachineForExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetActivityTaskMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetActivityTaskInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetActivityTaskMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetActivityTask.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetExecutionHistoryMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetExecutionHistoryInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetExecutionHistoryMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetExecutionHistory.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListActivitiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListActivitiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListActivitiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListActivities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListExecutionsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListExecutionsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListExecutionsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListExecutions.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListStateMachinesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListStateMachinesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListStateMachinesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListStateMachines.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendTaskFailureMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendTaskFailureInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendTaskFailureMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendTaskFailure.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendTaskHeartbeatMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendTaskHeartbeatInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendTaskHeartbeatMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendTaskHeartbeat.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m SendTaskSuccessMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalSendTaskSuccessInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m SendTaskSuccessMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "SendTaskSuccess.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StopExecutionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStopExecutionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StopExecutionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StopExecution.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateStateMachineMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateStateMachineInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateStateMachineMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateStateMachine.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
