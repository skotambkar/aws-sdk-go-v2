// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/qldb/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CreateLedgerMarshaler defines marshaler for CreateLedger operation
type CreateLedgerMarshaler struct {
	Input *types.CreateLedgerInput
}

// DeleteLedgerMarshaler defines marshaler for DeleteLedger operation
type DeleteLedgerMarshaler struct {
	Input *types.DeleteLedgerInput
}

// DescribeJournalS3ExportMarshaler defines marshaler for DescribeJournalS3Export operation
type DescribeJournalS3ExportMarshaler struct {
	Input *types.DescribeJournalS3ExportInput
}

// DescribeLedgerMarshaler defines marshaler for DescribeLedger operation
type DescribeLedgerMarshaler struct {
	Input *types.DescribeLedgerInput
}

// ExportJournalToS3Marshaler defines marshaler for ExportJournalToS3 operation
type ExportJournalToS3Marshaler struct {
	Input *types.ExportJournalToS3Input
}

// GetBlockMarshaler defines marshaler for GetBlock operation
type GetBlockMarshaler struct {
	Input *types.GetBlockInput
}

// GetDigestMarshaler defines marshaler for GetDigest operation
type GetDigestMarshaler struct {
	Input *types.GetDigestInput
}

// GetRevisionMarshaler defines marshaler for GetRevision operation
type GetRevisionMarshaler struct {
	Input *types.GetRevisionInput
}

// ListJournalS3ExportsMarshaler defines marshaler for ListJournalS3Exports operation
type ListJournalS3ExportsMarshaler struct {
	Input *types.ListJournalS3ExportsInput
}

// ListJournalS3ExportsForLedgerMarshaler defines marshaler for ListJournalS3ExportsForLedger operation
type ListJournalS3ExportsForLedgerMarshaler struct {
	Input *types.ListJournalS3ExportsForLedgerInput
}

// ListLedgersMarshaler defines marshaler for ListLedgers operation
type ListLedgersMarshaler struct {
	Input *types.ListLedgersInput
}

// ListTagsForResourceMarshaler defines marshaler for ListTagsForResource operation
type ListTagsForResourceMarshaler struct {
	Input *types.ListTagsForResourceInput
}

// TagResourceMarshaler defines marshaler for TagResource operation
type TagResourceMarshaler struct {
	Input *types.TagResourceInput
}

// UntagResourceMarshaler defines marshaler for UntagResource operation
type UntagResourceMarshaler struct {
	Input *types.UntagResourceInput
}

// UpdateLedgerMarshaler defines marshaler for UpdateLedger operation
type UpdateLedgerMarshaler struct {
	Input *types.UpdateLedgerInput
}

func MarshalCreateLedgerInputShapeAWSREST(v *types.CreateLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCreateLedgerInputShapeAWSJSON(v *types.CreateLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDeleteLedgerInputShapeAWSREST(v *types.DeleteLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDeleteLedgerInputShapeAWSJSON(v *types.DeleteLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeJournalS3ExportInputShapeAWSREST(v *types.DescribeJournalS3ExportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeJournalS3ExportInputShapeAWSJSON(v *types.DescribeJournalS3ExportInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeLedgerInputShapeAWSREST(v *types.DescribeLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeLedgerInputShapeAWSJSON(v *types.DescribeLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalExportJournalToS3InputShapeAWSREST(v *types.ExportJournalToS3Input, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalExportJournalToS3InputShapeAWSJSON(v *types.ExportJournalToS3Input, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetBlockInputShapeAWSREST(v *types.GetBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetBlockInputShapeAWSJSON(v *types.GetBlockInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetDigestInputShapeAWSREST(v *types.GetDigestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetDigestInputShapeAWSJSON(v *types.GetDigestInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalGetRevisionInputShapeAWSREST(v *types.GetRevisionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalGetRevisionInputShapeAWSJSON(v *types.GetRevisionInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJournalS3ExportsInputShapeAWSREST(v *types.ListJournalS3ExportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJournalS3ExportsInputShapeAWSJSON(v *types.ListJournalS3ExportsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListJournalS3ExportsForLedgerInputShapeAWSREST(v *types.ListJournalS3ExportsForLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListJournalS3ExportsForLedgerInputShapeAWSJSON(v *types.ListJournalS3ExportsForLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListLedgersInputShapeAWSREST(v *types.ListLedgersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListLedgersInputShapeAWSJSON(v *types.ListLedgersInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListTagsForResourceInputShapeAWSREST(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListTagsForResourceInputShapeAWSJSON(v *types.ListTagsForResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalTagResourceInputShapeAWSREST(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalTagResourceInputShapeAWSJSON(v *types.TagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUntagResourceInputShapeAWSREST(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUntagResourceInputShapeAWSJSON(v *types.UntagResourceInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalUpdateLedgerInputShapeAWSREST(v *types.UpdateLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalUpdateLedgerInputShapeAWSJSON(v *types.UpdateLedgerInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CreateLedgerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCreateLedgerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCreateLedgerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CreateLedgerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CreateLedger.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DeleteLedgerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDeleteLedgerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDeleteLedgerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DeleteLedgerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DeleteLedger.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeJournalS3ExportMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeJournalS3ExportInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeJournalS3ExportInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeJournalS3ExportMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeJournalS3Export.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeLedgerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeLedgerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeLedgerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeLedgerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeLedger.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ExportJournalToS3Marshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalExportJournalToS3InputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalExportJournalToS3InputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ExportJournalToS3Marshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ExportJournalToS3.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetBlockMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetBlockInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetBlockInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetBlockMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetBlock.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetDigestMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetDigestInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetDigestInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetDigestMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetDigest.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m GetRevisionMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalGetRevisionInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalGetRevisionInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m GetRevisionMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "GetRevision.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJournalS3ExportsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJournalS3ExportsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJournalS3ExportsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJournalS3ExportsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJournalS3Exports.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListJournalS3ExportsForLedgerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListJournalS3ExportsForLedgerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListJournalS3ExportsForLedgerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListJournalS3ExportsForLedgerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListJournalS3ExportsForLedger.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListLedgersMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListLedgersInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListLedgersInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListLedgersMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListLedgers.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListTagsForResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListTagsForResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListTagsForResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListTagsForResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListTagsForResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m TagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalTagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalTagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m TagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "TagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UntagResourceMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUntagResourceInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUntagResourceInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UntagResourceMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UntagResource.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m UpdateLedgerMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalUpdateLedgerInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalUpdateLedgerInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m UpdateLedgerMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "UpdateLedger.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
