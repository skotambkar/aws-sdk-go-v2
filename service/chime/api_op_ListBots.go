// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package chime

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/chime/types"
)

const opListBots = "ListBots"

// ListBotsRequest returns a request value for making API operation for
// Amazon Chime.
//
// Lists the bots associated with the administrator's Amazon Chime Enterprise
// account ID.
//
//    // Example sending a request using ListBotsRequest.
//    req := client.ListBotsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListBots
func (c *Client) ListBotsRequest(input *types.ListBotsInput) ListBotsRequest {
	op := &aws.Operation{
		Name:       opListBots,
		HTTPMethod: "GET",
		HTTPPath:   "/accounts/{accountId}/bots",
	}

	if input == nil {
		input = &types.ListBotsInput{}
	}

	req := c.newRequest(op, input, &types.ListBotsOutput{})
	return ListBotsRequest{Request: req, Input: input, Copy: c.ListBotsRequest}
}

// ListBotsRequest is the request type for the
// ListBots API operation.
type ListBotsRequest struct {
	*aws.Request
	Input *types.ListBotsInput
	Copy  func(*types.ListBotsInput) ListBotsRequest
}

// Send marshals and sends the ListBots API request.
func (r ListBotsRequest) Send(ctx context.Context) (*ListBotsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListBotsResponse{
		ListBotsOutput: r.Request.Data.(*types.ListBotsOutput),
		response:       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListBotsResponse is the response type for the
// ListBots API operation.
type ListBotsResponse struct {
	*types.ListBotsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListBots request.
func (r *ListBotsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
