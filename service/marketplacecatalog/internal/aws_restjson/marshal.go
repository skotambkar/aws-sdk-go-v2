// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package aws_restjson service, marshal.go contains the generated operation marshalers and methods on it.

package aws_restjson

import (
	"bytes"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/aws/awserr"
	"github.com/aws/aws-sdk-go-v2/private/protocol/jsonrpc"
	"github.com/aws/aws-sdk-go-v2/private/protocol/rest"
	"github.com/aws/aws-sdk-go-v2/service/marketplacecatalog/types"
)

var _ bytes.Buffer
var _ awserr.Error

// CancelChangeSetMarshaler defines marshaler for CancelChangeSet operation
type CancelChangeSetMarshaler struct {
	Input *types.CancelChangeSetInput
}

// DescribeChangeSetMarshaler defines marshaler for DescribeChangeSet operation
type DescribeChangeSetMarshaler struct {
	Input *types.DescribeChangeSetInput
}

// DescribeEntityMarshaler defines marshaler for DescribeEntity operation
type DescribeEntityMarshaler struct {
	Input *types.DescribeEntityInput
}

// ListChangeSetsMarshaler defines marshaler for ListChangeSets operation
type ListChangeSetsMarshaler struct {
	Input *types.ListChangeSetsInput
}

// ListEntitiesMarshaler defines marshaler for ListEntities operation
type ListEntitiesMarshaler struct {
	Input *types.ListEntitiesInput
}

// StartChangeSetMarshaler defines marshaler for StartChangeSet operation
type StartChangeSetMarshaler struct {
	Input *types.StartChangeSetInput
}

func MarshalCancelChangeSetInputShapeAWSREST(v *types.CancelChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalCancelChangeSetInputShapeAWSJSON(v *types.CancelChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeChangeSetInputShapeAWSREST(v *types.DescribeChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeChangeSetInputShapeAWSJSON(v *types.DescribeChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalDescribeEntityInputShapeAWSREST(v *types.DescribeEntityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalDescribeEntityInputShapeAWSJSON(v *types.DescribeEntityInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListChangeSetsInputShapeAWSREST(v *types.ListChangeSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListChangeSetsInputShapeAWSJSON(v *types.ListChangeSetsInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalListEntitiesInputShapeAWSREST(v *types.ListEntitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalListEntitiesInputShapeAWSJSON(v *types.ListEntitiesInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}

func MarshalStartChangeSetInputShapeAWSREST(v *types.StartChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	rest.Build(r)
	return nil
}
func MarshalStartChangeSetInputShapeAWSJSON(v *types.StartChangeSetInput, r *aws.Request) error {
	// delegate to reflection based marshaling
	if t := rest.PayloadType(r.Params); t == "structure" || t == "" {
		jsonrpc.Build(r)
	}
	return nil
}
func (m CancelChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalCancelChangeSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalCancelChangeSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m CancelChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "CancelChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeChangeSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeChangeSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m DescribeEntityMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalDescribeEntityInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalDescribeEntityInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m DescribeEntityMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "DescribeEntity.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListChangeSetsMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListChangeSetsInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListChangeSetsInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListChangeSetsMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListChangeSets.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m ListEntitiesMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalListEntitiesInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalListEntitiesInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m ListEntitiesMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "ListEntities.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}

func (m StartChangeSetMarshaler) MarshalOperation(r *aws.Request) {
	var err error

	err = MarshalStartChangeSetInputShapeAWSREST(m.Input, r)
	if err != nil {
		r.Error = err
	}

	err = MarshalStartChangeSetInputShapeAWSJSON(m.Input, r)
	if err != nil {
		r.Error = err
	}

}

// GetNamedBuildHandler returns a Named Build Handler for an operation marshal function
func (m StartChangeSetMarshaler) GetNamedBuildHandler() aws.NamedHandler {
	const BuildHandler = "StartChangeSet.BuildHandler"
	return aws.NamedHandler{
		Name: BuildHandler,
		Fn:   m.MarshalOperation,
	}
}
